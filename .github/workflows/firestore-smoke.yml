name: Firestore Smoke (optional)
true:
  workflow_dispatch: null
jobs:
  smoke:
    if: ${{ secrets.FIREBASE_PROJECT_ID && secrets.FIREBASE_CLIENT_EMAIL && secrets.FIREBASE_PRIVATE_KEY
      }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install firestore client
      run: 'python -m pip install --upgrade pip

        pip install google-cloud-firestore

        '
    - name: Smoke test Firestore
      env:
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
        FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
      run: "python - <<'PY'\nimport os, json, base64\nfrom google.cloud import firestore\n\
        project=os.getenv('FIREBASE_PROJECT_ID')\nclient_email=os.getenv('FIREBASE_CLIENT_EMAIL')\n\
        private_key=os.getenv('FIREBASE_PRIVATE_KEY')\nif private_key and '-----BEGIN\
        \ PRIVATE KEY-----' not in private_key:\n    private_key=base64.b64decode(private_key).decode()\n\
        import google.auth\nfrom google.oauth2 import service_account\ncreds = service_account.Credentials.from_service_account_info({\n\
        \    \"type\": \"service_account\",\n    \"project_id\": project,\n    \"\
        private_key_id\": \"dummy\",\n    \"private_key\": private_key,\n    \"client_email\"\
        : client_email,\n    \"client_id\": \"dummy\",\n    \"token_uri\": \"https://oauth2.googleapis.com/token\"\
        \n})\ndb = firestore.Client(project=project, credentials=creds)\ndoc = db.collection('smoke_tests').document('ci')\n\
        doc.set({'ok': True})\ndata = doc.get().to_dict()\nprint('SMOKE_RESULT', data)\n\
        PY\n"
'on':
  workflow_dispatch: {}
