{
  "code_items": [
    {
      "path": "autonomous_launcher.py",
      "type": "module",
      "name": "autonomous_launcher",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83d\ude80 AUTONOMOUS DEVELOPMENT LAUNCHER\n\nLaunch real autonomous development with working dependencies.",
      "exports": [
        "main"
      ]
    },
    {
      "path": "autonomous_launcher.py",
      "type": "function",
      "name": "main",
      "line_number": 12,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "demo_autonomous_workflow.py",
      "type": "module",
      "name": "demo_autonomous_workflow",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83d\ude80 AUTONOMOUS DEVELOPMENT DEMO - No Dependencies Required!\n\nExperience the complete autonomous development workflow simulation\nwithout any external dependencies. Perfect for understanding the concept!",
      "exports": [
        "NodeType",
        "WorkflowNode",
        "WorkflowEdge",
        "WorkflowDefinition",
        "create_autonomous_api_workflow",
        "simulate_autonomous_execution",
        "show_code_samples",
        "show_next_steps",
        "main",
        "validate"
      ]
    },
    {
      "path": "demo_autonomous_workflow.py",
      "type": "class",
      "name": "NodeType",
      "line_number": 17,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "demo_autonomous_workflow.py",
      "type": "class",
      "name": "WorkflowNode",
      "line_number": 26,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "demo_autonomous_workflow.py",
      "type": "class",
      "name": "WorkflowEdge",
      "line_number": 33,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "demo_autonomous_workflow.py",
      "type": "class",
      "name": "WorkflowDefinition",
      "line_number": 40,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "demo_autonomous_workflow.py",
      "type": "function",
      "name": "create_autonomous_api_workflow",
      "line_number": 59,
      "parent": null,
      "docstring": "Create the autonomous API development workflow.",
      "exports": null
    },
    {
      "path": "demo_autonomous_workflow.py",
      "type": "function",
      "name": "simulate_autonomous_execution",
      "line_number": 161,
      "parent": null,
      "docstring": "Simulate the autonomous development process.",
      "exports": null
    },
    {
      "path": "demo_autonomous_workflow.py",
      "type": "function",
      "name": "show_code_samples",
      "line_number": 365,
      "parent": null,
      "docstring": "Show what the autonomous agents actually generated.",
      "exports": null
    },
    {
      "path": "demo_autonomous_workflow.py",
      "type": "function",
      "name": "show_next_steps",
      "line_number": 466,
      "parent": null,
      "docstring": "Show what comes after this demo.",
      "exports": null
    },
    {
      "path": "demo_autonomous_workflow.py",
      "type": "function",
      "name": "main",
      "line_number": 496,
      "parent": null,
      "docstring": "Main demo function.",
      "exports": null
    },
    {
      "path": "demo_autonomous_workflow.py",
      "type": "method",
      "name": "validate",
      "line_number": 47,
      "parent": "WorkflowDefinition",
      "docstring": null,
      "exports": null
    },
    {
      "path": "setup_real_autonomous_dev.py",
      "type": "module",
      "name": "setup_real_autonomous_dev",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83d\ude80 SETUP GUIDE: REAL AUTONOMOUS DEVELOPMENT\n\nThis guide helps you set up ACTUAL autonomous development where\nAI agents create real code, run tests, and create GitHub PRs.",
      "exports": [
        "check_requirements",
        "show_real_autonomous_workflow",
        "show_setup_instructions",
        "check_current_status",
        "main"
      ]
    },
    {
      "path": "setup_real_autonomous_dev.py",
      "type": "function",
      "name": "check_requirements",
      "line_number": 13,
      "parent": null,
      "docstring": "Check if system is ready for real autonomous development.",
      "exports": null
    },
    {
      "path": "setup_real_autonomous_dev.py",
      "type": "function",
      "name": "show_real_autonomous_workflow",
      "line_number": 73,
      "parent": null,
      "docstring": "Show what actually happens in real autonomous development.",
      "exports": null
    },
    {
      "path": "setup_real_autonomous_dev.py",
      "type": "function",
      "name": "show_setup_instructions",
      "line_number": 148,
      "parent": null,
      "docstring": "Show step-by-step setup for real autonomous development.",
      "exports": null
    },
    {
      "path": "setup_real_autonomous_dev.py",
      "type": "function",
      "name": "check_current_status",
      "line_number": 221,
      "parent": null,
      "docstring": "Check what's currently possible in this environment.",
      "exports": null
    },
    {
      "path": "setup_real_autonomous_dev.py",
      "type": "function",
      "name": "main",
      "line_number": 279,
      "parent": null,
      "docstring": "Main setup and status check.",
      "exports": null
    },
    {
      "path": "simple_autonomous_starter.py",
      "type": "module",
      "name": "simple_autonomous_starter",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83d\ude80 SIMPLE AUTONOMOUS DEVELOPMENT STARTER\n\nThis shows the simplest way to start autonomous development\nusing your working AAWOS system.",
      "exports": [
        "start_autonomous_development",
        "demonstrate_autonomous_request",
        "show_working_examples",
        "create_autonomous_commands",
        "main"
      ]
    },
    {
      "path": "simple_autonomous_starter.py",
      "type": "function",
      "name": "start_autonomous_development",
      "line_number": 15,
      "parent": null,
      "docstring": "Start autonomous development using the enhanced agency approach.",
      "exports": null
    },
    {
      "path": "simple_autonomous_starter.py",
      "type": "function",
      "name": "demonstrate_autonomous_request",
      "line_number": 59,
      "parent": null,
      "docstring": "Demonstrate how to make an autonomous development request.",
      "exports": null
    },
    {
      "path": "simple_autonomous_starter.py",
      "type": "function",
      "name": "show_working_examples",
      "line_number": 96,
      "parent": null,
      "docstring": "Show concrete examples that work with your system.",
      "exports": null
    },
    {
      "path": "simple_autonomous_starter.py",
      "type": "function",
      "name": "create_autonomous_commands",
      "line_number": 150,
      "parent": null,
      "docstring": "Create specific commands for autonomous development.",
      "exports": null
    },
    {
      "path": "simple_autonomous_starter.py",
      "type": "function",
      "name": "main",
      "line_number": 176,
      "parent": null,
      "docstring": "Main function demonstrating autonomous development startup.",
      "exports": null
    },
    {
      "path": "autonomous_dev_demo.py",
      "type": "module",
      "name": "autonomous_dev_demo",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83c\udfac LIVE AUTONOMOUS DEVELOPMENT DEMONSTRATION\n\nThis script demonstrates exactly how to execute autonomous development\nwith your AAWOS system and see real AI agents in action.",
      "exports": [
        "live_autonomous_development_demo",
        "show_execution_commands",
        "create_quick_start_script",
        "main"
      ]
    },
    {
      "path": "autonomous_dev_demo.py",
      "type": "function",
      "name": "live_autonomous_development_demo",
      "line_number": 15,
      "parent": null,
      "docstring": "Demonstrate live autonomous development execution.",
      "exports": null
    },
    {
      "path": "autonomous_dev_demo.py",
      "type": "function",
      "name": "show_execution_commands",
      "line_number": 167,
      "parent": null,
      "docstring": "Show the actual commands to execute autonomous development.",
      "exports": null
    },
    {
      "path": "autonomous_dev_demo.py",
      "type": "function",
      "name": "create_quick_start_script",
      "line_number": 217,
      "parent": null,
      "docstring": "Create a one-command autonomous development starter.",
      "exports": null
    },
    {
      "path": "autonomous_dev_demo.py",
      "type": "function",
      "name": "main",
      "line_number": 264,
      "parent": null,
      "docstring": "Main demonstration function.",
      "exports": null
    },
    {
      "path": "real_autonomous_workflow.py",
      "type": "module",
      "name": "real_autonomous_workflow",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83d\ude80 REAL AUTONOMOUS WORKFLOW EXECUTION\n\nThis uses the actual AAWOS system with real AI agents to execute\nautonomous development workflows.",
      "exports": [
        "create_real_autonomous_workflow",
        "simulate_real_execution",
        "show_next_level",
        "main"
      ]
    },
    {
      "path": "real_autonomous_workflow.py",
      "type": "function",
      "name": "create_real_autonomous_workflow",
      "line_number": 17,
      "parent": null,
      "docstring": "Create and execute a real autonomous workflow with AI agents.",
      "exports": null
    },
    {
      "path": "real_autonomous_workflow.py",
      "type": "function",
      "name": "simulate_real_execution",
      "line_number": 260,
      "parent": null,
      "docstring": "Simulate execution with real AI agent coordination.",
      "exports": null
    },
    {
      "path": "real_autonomous_workflow.py",
      "type": "function",
      "name": "show_next_level",
      "line_number": 475,
      "parent": null,
      "docstring": "Show what comes after Option 2.",
      "exports": null
    },
    {
      "path": "real_autonomous_workflow.py",
      "type": "function",
      "name": "main",
      "line_number": 506,
      "parent": null,
      "docstring": "Main function for real autonomous workflow execution.",
      "exports": null
    },
    {
      "path": "autonomous_development_guide.py",
      "type": "module",
      "name": "autonomous_development_guide",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83d\ude80 Autonomous Development with AAWOS - Practical Implementation Guide\n\nThis guide shows how to use the Advanced Agent Workflow Orchestration System\nfor fully autonomous software development workflows.",
      "exports": [
        "autonomous_development_overview",
        "show_autonomous_development_templates",
        "create_autonomous_workflow_example",
        "show_getting_started_steps",
        "show_autonomous_development_benefits",
        "show_real_world_use_cases",
        "main"
      ]
    },
    {
      "path": "autonomous_development_guide.py",
      "type": "function",
      "name": "autonomous_development_overview",
      "line_number": 16,
      "parent": null,
      "docstring": "Overview of autonomous development with AAWOS.",
      "exports": null
    },
    {
      "path": "autonomous_development_guide.py",
      "type": "function",
      "name": "show_autonomous_development_templates",
      "line_number": 38,
      "parent": null,
      "docstring": "Show AAWOS templates for autonomous development.",
      "exports": null
    },
    {
      "path": "autonomous_development_guide.py",
      "type": "function",
      "name": "create_autonomous_workflow_example",
      "line_number": 111,
      "parent": null,
      "docstring": "Create an example autonomous development workflow.",
      "exports": null
    },
    {
      "path": "autonomous_development_guide.py",
      "type": "function",
      "name": "show_getting_started_steps",
      "line_number": 359,
      "parent": null,
      "docstring": "Show how to get started with autonomous development.",
      "exports": null
    },
    {
      "path": "autonomous_development_guide.py",
      "type": "function",
      "name": "show_autonomous_development_benefits",
      "line_number": 467,
      "parent": null,
      "docstring": "Show the benefits of autonomous development.",
      "exports": null
    },
    {
      "path": "autonomous_development_guide.py",
      "type": "function",
      "name": "show_real_world_use_cases",
      "line_number": 509,
      "parent": null,
      "docstring": "Show real-world autonomous development use cases.",
      "exports": null
    },
    {
      "path": "autonomous_development_guide.py",
      "type": "function",
      "name": "main",
      "line_number": 558,
      "parent": null,
      "docstring": "Main function to run the autonomous development guide.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api.py",
      "type": "module",
      "name": "autonomous_todo_api",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83c\udfaf AUTONOMOUS TODO API DEVELOPMENT\n\nStrategic first project: Build a FastAPI Todo Management API\nUses the most stable AAWOS components for maximum success probability.",
      "exports": [
        "setup_project_environment",
        "execute_autonomous_development",
        "validate_generated_code",
        "generate_success_report",
        "main"
      ]
    },
    {
      "path": "autonomous_todo_api.py",
      "type": "function",
      "name": "setup_project_environment",
      "line_number": 20,
      "parent": null,
      "docstring": "Set up the project environment for autonomous development.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api.py",
      "type": "function",
      "name": "execute_autonomous_development",
      "line_number": 49,
      "parent": null,
      "docstring": "Execute autonomous development using enhanced agency.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api.py",
      "type": "function",
      "name": "validate_generated_code",
      "line_number": 135,
      "parent": null,
      "docstring": "Validate the generated code and run tests.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api.py",
      "type": "function",
      "name": "generate_success_report",
      "line_number": 196,
      "parent": null,
      "docstring": "Generate a success report for the autonomous development.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api.py",
      "type": "function",
      "name": "main",
      "line_number": 240,
      "parent": null,
      "docstring": "Main autonomous development execution function.",
      "exports": null
    },
    {
      "path": "quick_autonomous_dev.py",
      "type": "module",
      "name": "quick_autonomous_dev",
      "line_number": 1,
      "parent": null,
      "docstring": "\u26a1 QUICK START AUTONOMOUS DEVELOPMENT\n\nOne-command autonomous development execution.",
      "exports": [
        "quick_autonomous_dev"
      ]
    },
    {
      "path": "quick_autonomous_dev.py",
      "type": "function",
      "name": "quick_autonomous_dev",
      "line_number": 13,
      "parent": null,
      "docstring": "Execute autonomous development with one function call.",
      "exports": null
    },
    {
      "path": "start_autonomous_development.py",
      "type": "module",
      "name": "start_autonomous_development",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83c\udfaf START AUTONOMOUS DEVELOPMENT - Step-by-Step Implementation\n\nThis script provides a practical, executable approach to beginning\nautonomous development using AAWOS.",
      "exports": [
        "step_1_check_system_readiness",
        "step_2_create_simple_autonomous_workflow",
        "step_3_practical_implementation_commands",
        "step_4_autonomous_development_best_practices",
        "step_5_autonomous_development_roadmap",
        "create_your_first_autonomous_workflow",
        "main"
      ]
    },
    {
      "path": "start_autonomous_development.py",
      "type": "function",
      "name": "step_1_check_system_readiness",
      "line_number": 13,
      "parent": null,
      "docstring": "Step 1: Verify AAWOS system is ready for autonomous development.",
      "exports": null
    },
    {
      "path": "start_autonomous_development.py",
      "type": "function",
      "name": "step_2_create_simple_autonomous_workflow",
      "line_number": 77,
      "parent": null,
      "docstring": "Step 2: Create your first simple autonomous workflow.",
      "exports": null
    },
    {
      "path": "start_autonomous_development.py",
      "type": "function",
      "name": "step_3_practical_implementation_commands",
      "line_number": 168,
      "parent": null,
      "docstring": "Step 3: Show practical commands to start autonomous development.",
      "exports": null
    },
    {
      "path": "start_autonomous_development.py",
      "type": "function",
      "name": "step_4_autonomous_development_best_practices",
      "line_number": 235,
      "parent": null,
      "docstring": "Step 4: Best practices for autonomous development.",
      "exports": null
    },
    {
      "path": "start_autonomous_development.py",
      "type": "function",
      "name": "step_5_autonomous_development_roadmap",
      "line_number": 278,
      "parent": null,
      "docstring": "Step 5: Progressive roadmap for autonomous development mastery.",
      "exports": null
    },
    {
      "path": "start_autonomous_development.py",
      "type": "function",
      "name": "create_your_first_autonomous_workflow",
      "line_number": 334,
      "parent": null,
      "docstring": "Provide a ready-to-use template for the first autonomous workflow.",
      "exports": null
    },
    {
      "path": "start_autonomous_development.py",
      "type": "function",
      "name": "main",
      "line_number": 498,
      "parent": null,
      "docstring": "Main function to guide autonomous development setup.",
      "exports": null
    },
    {
      "path": "autonomous_dev_strategy.py",
      "type": "module",
      "name": "autonomous_dev_strategy",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83c\udfaf AUTONOMOUS DEVELOPMENT STRATEGY ANALYZER\n\nStrategic analysis of your AAWOS system to identify the most stable\nand valuable first projects for autonomous development.",
      "exports": [
        "analyze_aawos_system_capabilities",
        "identify_optimal_first_projects",
        "create_stability_focused_roadmap",
        "recommend_first_project_strategy",
        "create_project_execution_plan",
        "suggest_risk_mitigation_strategies",
        "create_success_measurement_framework",
        "main"
      ]
    },
    {
      "path": "autonomous_dev_strategy.py",
      "type": "function",
      "name": "analyze_aawos_system_capabilities",
      "line_number": 15,
      "parent": null,
      "docstring": "Analyze current system capabilities and stability levels.",
      "exports": null
    },
    {
      "path": "autonomous_dev_strategy.py",
      "type": "function",
      "name": "identify_optimal_first_projects",
      "line_number": 106,
      "parent": null,
      "docstring": "Identify the best first projects for maximum stability and value.",
      "exports": null
    },
    {
      "path": "autonomous_dev_strategy.py",
      "type": "function",
      "name": "create_stability_focused_roadmap",
      "line_number": 206,
      "parent": null,
      "docstring": "Create a roadmap focused on stability and incremental value.",
      "exports": null
    },
    {
      "path": "autonomous_dev_strategy.py",
      "type": "function",
      "name": "recommend_first_project_strategy",
      "line_number": 299,
      "parent": null,
      "docstring": "Recommend the optimal first project strategy.",
      "exports": null
    },
    {
      "path": "autonomous_dev_strategy.py",
      "type": "function",
      "name": "create_project_execution_plan",
      "line_number": 393,
      "parent": null,
      "docstring": "Create detailed execution plan for the first project.",
      "exports": null
    },
    {
      "path": "autonomous_dev_strategy.py",
      "type": "function",
      "name": "suggest_risk_mitigation_strategies",
      "line_number": 462,
      "parent": null,
      "docstring": "Suggest strategies to minimize risk and maximize success.",
      "exports": null
    },
    {
      "path": "autonomous_dev_strategy.py",
      "type": "function",
      "name": "create_success_measurement_framework",
      "line_number": 519,
      "parent": null,
      "docstring": "Create framework for measuring autonomous development success.",
      "exports": null
    },
    {
      "path": "autonomous_dev_strategy.py",
      "type": "function",
      "name": "main",
      "line_number": 572,
      "parent": null,
      "docstring": "Main strategy analysis and planning function.",
      "exports": null
    },
    {
      "path": "strategic_analysis.py",
      "type": "module",
      "name": "strategic_analysis",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83c\udfaf AUTONOMOUS DEVELOPMENT STRATEGY ANALYZER\n\nStrategic analysis of your AAWOS system to identify the most stable\nand valuable first projects for autonomous development.",
      "exports": [
        "analyze_aawos_system_capabilities",
        "identify_optimal_first_projects",
        "recommend_first_project_strategy",
        "create_project_execution_plan",
        "main"
      ]
    },
    {
      "path": "strategic_analysis.py",
      "type": "function",
      "name": "analyze_aawos_system_capabilities",
      "line_number": 9,
      "parent": null,
      "docstring": "Analyze current system capabilities and stability levels based on previous testing.",
      "exports": null
    },
    {
      "path": "strategic_analysis.py",
      "type": "function",
      "name": "identify_optimal_first_projects",
      "line_number": 89,
      "parent": null,
      "docstring": "Identify the best first projects for maximum stability and value.",
      "exports": null
    },
    {
      "path": "strategic_analysis.py",
      "type": "function",
      "name": "recommend_first_project_strategy",
      "line_number": 189,
      "parent": null,
      "docstring": "Recommend the optimal first project strategy.",
      "exports": null
    },
    {
      "path": "strategic_analysis.py",
      "type": "function",
      "name": "create_project_execution_plan",
      "line_number": 256,
      "parent": null,
      "docstring": "Create detailed execution plan for the first project.",
      "exports": null
    },
    {
      "path": "strategic_analysis.py",
      "type": "function",
      "name": "main",
      "line_number": 325,
      "parent": null,
      "docstring": "Main strategy analysis and planning function.",
      "exports": null
    },
    {
      "path": "launch_agent_system.py",
      "type": "module",
      "name": "launch_agent_system",
      "line_number": 1,
      "parent": null,
      "docstring": "Fresh Agent System Comprehensive Launcher.\n\nThis script launches the complete Fresh agent system with all integrated\ncomponents including real-time execution, status coordination, GitHub\nintegration, performance analytics, and Telegram bot interface.\n\nCross-references:\n    - System Coordinator: ai/system/coordinator.py for system management\n    - Agent Spawner: ai/interface/agent_spawner.py for agent lifecycle\n    - Telegram Bot: ai/interface/telegram_bot.py for user interface\n    - Execution Monitor: ai/execution/monitor.py for real-time execution\n    - Performance Analytics: ai/analytics/performance.py for optimization\n\nUsage:\n    python launch_agent_system.py [--config CONFIG_FILE] [--debug] [--status]",
      "exports": [
        "load_config",
        "setup_environment",
        "env_has",
        "env_bool",
        "env_int"
      ]
    },
    {
      "path": "launch_agent_system.py",
      "type": "function",
      "name": "load_config",
      "line_number": 36,
      "parent": null,
      "docstring": "Load configuration from file or environment.",
      "exports": null
    },
    {
      "path": "launch_agent_system.py",
      "type": "function",
      "name": "setup_environment",
      "line_number": 106,
      "parent": null,
      "docstring": "Setup environment and check dependencies.",
      "exports": null
    },
    {
      "path": "launch_agent_system.py",
      "type": "function",
      "name": "env_has",
      "line_number": 46,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "launch_agent_system.py",
      "type": "function",
      "name": "env_bool",
      "line_number": 49,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "launch_agent_system.py",
      "type": "function",
      "name": "env_int",
      "line_number": 56,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "autonomous_dev_starter.py",
      "type": "module",
      "name": "autonomous_dev_starter",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83d\ude80 Autonomous Development Starter\n\nUse this script to start real autonomous development projects\nwith your AAWOS system.",
      "exports": [
        "start_autonomous_project",
        "show_live_example",
        "main"
      ]
    },
    {
      "path": "autonomous_dev_starter.py",
      "type": "function",
      "name": "start_autonomous_project",
      "line_number": 15,
      "parent": null,
      "docstring": "Start autonomous development for a specific project.",
      "exports": null
    },
    {
      "path": "autonomous_dev_starter.py",
      "type": "function",
      "name": "show_live_example",
      "line_number": 91,
      "parent": null,
      "docstring": "Show a live autonomous development example.",
      "exports": null
    },
    {
      "path": "autonomous_dev_starter.py",
      "type": "function",
      "name": "main",
      "line_number": 122,
      "parent": null,
      "docstring": "Main function showing autonomous development startup.",
      "exports": null
    },
    {
      "path": "fix_autonomous_dev.py",
      "type": "module",
      "name": "fix_autonomous_dev",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83d\ude80 ALTERNATIVE AUTONOMOUS DEVELOPMENT SETUP\n\nThis bypasses Poetry environment issues and sets up a working \nautonomous development environment directly.",
      "exports": [
        "install_dependencies_directly",
        "test_autonomous_system",
        "create_autonomous_launcher",
        "main"
      ]
    },
    {
      "path": "fix_autonomous_dev.py",
      "type": "function",
      "name": "install_dependencies_directly",
      "line_number": 14,
      "parent": null,
      "docstring": "Install dependencies directly with pip to bypass Poetry issues.",
      "exports": null
    },
    {
      "path": "fix_autonomous_dev.py",
      "type": "function",
      "name": "test_autonomous_system",
      "line_number": 46,
      "parent": null,
      "docstring": "Test if autonomous development system is working.",
      "exports": null
    },
    {
      "path": "fix_autonomous_dev.py",
      "type": "function",
      "name": "create_autonomous_launcher",
      "line_number": 114,
      "parent": null,
      "docstring": "Create launcher for autonomous development.",
      "exports": null
    },
    {
      "path": "fix_autonomous_dev.py",
      "type": "function",
      "name": "main",
      "line_number": 173,
      "parent": null,
      "docstring": "Main setup function.",
      "exports": null
    },
    {
      "path": "launch_enhanced_agent_system.py",
      "type": "module",
      "name": "launch_enhanced_agent_system",
      "line_number": 1,
      "parent": null,
      "docstring": "Enhanced Agent System Launcher\n\nLaunches the Fresh agent system with persistent memory capabilities,\nenabling agents to learn and remember across sessions.\n\nThis launcher:\n- Initializes the persistent memory system (Firestore or local)\n- Sets up enhanced agents with intelligent memory tools\n- Provides system health monitoring and status reporting\n- Handles graceful fallback for different environments\n\nUsage:\n    python launch_enhanced_agent_system.py [options]\n\nOptions:\n    --use-firestore          Force Firestore usage\n    --no-firestore          Force local-only memory\n    --project-id PROJECT     Google Cloud project ID\n    --collection NAME        Firestore collection name\n    --cache-size N           Local cache size (default: 100)\n    --check-health          Check memory system health\n    --demo                  Run a brief demonstration\n\nEnvironment Variables:\n    FRESH_USE_FIRESTORE=true        Enable Firestore\n    GOOGLE_CLOUD_PROJECT=project    Set project ID\n    FRESH_FIRESTORE_PROJECT=proj    Override project ID\n    GOOGLE_APPLICATION_CREDENTIALS  Path to service account key\n\nExamples:\n    # Auto-detect environment (recommended)\n    python launch_enhanced_agent_system.py\n    \n    # Force Firestore with specific project\n    python launch_enhanced_agent_system.py --use-firestore --project-id my-project\n    \n    # Local-only development mode\n    python launch_enhanced_agent_system.py --no-firestore\n    \n    # Check system health\n    python launch_enhanced_agent_system.py --check-health",
      "exports": [
        "setup_logging",
        "print_system_status",
        "run_memory_demo",
        "initialize_enhanced_agents",
        "main"
      ]
    },
    {
      "path": "launch_enhanced_agent_system.py",
      "type": "function",
      "name": "setup_logging",
      "line_number": 68,
      "parent": null,
      "docstring": "Set up logging configuration.",
      "exports": null
    },
    {
      "path": "launch_enhanced_agent_system.py",
      "type": "function",
      "name": "print_system_status",
      "line_number": 80,
      "parent": null,
      "docstring": "Print formatted system status information.",
      "exports": null
    },
    {
      "path": "launch_enhanced_agent_system.py",
      "type": "function",
      "name": "run_memory_demo",
      "line_number": 117,
      "parent": null,
      "docstring": "Run a brief demonstration of memory capabilities.",
      "exports": null
    },
    {
      "path": "launch_enhanced_agent_system.py",
      "type": "function",
      "name": "initialize_enhanced_agents",
      "line_number": 178,
      "parent": null,
      "docstring": "Initialize enhanced agents with memory capabilities.",
      "exports": null
    },
    {
      "path": "launch_enhanced_agent_system.py",
      "type": "function",
      "name": "main",
      "line_number": 200,
      "parent": null,
      "docstring": "Main launcher function.",
      "exports": null
    },
    {
      "path": "launch_enhanced_agent_system.py",
      "type": "function",
      "name": "_docs_alignment_loop",
      "line_number": 275,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "start_autonomous_dev.py",
      "type": "module",
      "name": "start_autonomous_dev",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83d\ude80 START AUTONOMOUS DEVELOPMENT\n\nThis script shows exactly how to start autonomous development\nusing your AAWOS system with real AI agents.",
      "exports": [
        "demonstrate_autonomous_startup",
        "create_quick_autonomous_workflow",
        "launch_enhanced_agent_team",
        "create_custom_autonomous_workflow",
        "show_real_autonomous_development_examples",
        "create_autonomous_dev_starter",
        "main"
      ]
    },
    {
      "path": "start_autonomous_dev.py",
      "type": "function",
      "name": "demonstrate_autonomous_startup",
      "line_number": 16,
      "parent": null,
      "docstring": "Show how to start autonomous development step by step.",
      "exports": null
    },
    {
      "path": "start_autonomous_dev.py",
      "type": "function",
      "name": "create_quick_autonomous_workflow",
      "line_number": 74,
      "parent": null,
      "docstring": "Create and demonstrate a quick autonomous workflow.",
      "exports": null
    },
    {
      "path": "start_autonomous_dev.py",
      "type": "function",
      "name": "launch_enhanced_agent_team",
      "line_number": 152,
      "parent": null,
      "docstring": "Launch the enhanced agent team for autonomous development.",
      "exports": null
    },
    {
      "path": "start_autonomous_dev.py",
      "type": "function",
      "name": "create_custom_autonomous_workflow",
      "line_number": 191,
      "parent": null,
      "docstring": "Show how to create custom autonomous workflows.",
      "exports": null
    },
    {
      "path": "start_autonomous_dev.py",
      "type": "function",
      "name": "show_real_autonomous_development_examples",
      "line_number": 261,
      "parent": null,
      "docstring": "Show real examples of autonomous development requests.",
      "exports": null
    },
    {
      "path": "start_autonomous_dev.py",
      "type": "function",
      "name": "create_autonomous_dev_starter",
      "line_number": 322,
      "parent": null,
      "docstring": "Create a practical autonomous development starter.",
      "exports": null
    },
    {
      "path": "start_autonomous_dev.py",
      "type": "function",
      "name": "main",
      "line_number": 505,
      "parent": null,
      "docstring": "Main demonstration function.",
      "exports": null
    },
    {
      "path": "my_first_autonomous_workflow.py",
      "type": "module",
      "name": "my_first_autonomous_workflow",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83d\ude80 MY FIRST AUTONOMOUS WORKFLOW\n\nThis is your first step into autonomous development using AAWOS.\nThis workflow will autonomously create a REST API endpoint with tests.",
      "exports": [
        "create_simple_autonomous_api_workflow",
        "simulate_autonomous_execution",
        "show_next_steps",
        "main"
      ]
    },
    {
      "path": "my_first_autonomous_workflow.py",
      "type": "function",
      "name": "create_simple_autonomous_api_workflow",
      "line_number": 16,
      "parent": null,
      "docstring": "Create a simple autonomous API development workflow.",
      "exports": null
    },
    {
      "path": "my_first_autonomous_workflow.py",
      "type": "function",
      "name": "simulate_autonomous_execution",
      "line_number": 152,
      "parent": null,
      "docstring": "Simulate autonomous workflow execution.",
      "exports": null
    },
    {
      "path": "my_first_autonomous_workflow.py",
      "type": "function",
      "name": "show_next_steps",
      "line_number": 242,
      "parent": null,
      "docstring": "Show what to do after the first autonomous workflow.",
      "exports": null
    },
    {
      "path": "my_first_autonomous_workflow.py",
      "type": "function",
      "name": "main",
      "line_number": 289,
      "parent": null,
      "docstring": "Main function to run your first autonomous workflow.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/models.py",
      "type": "module",
      "name": "models",
      "line_number": 1,
      "parent": null,
      "docstring": "Data Models\n\nPydantic and SQLAlchemy models for Todo items in the Todo Management API.\nDefines database schema and request/response validation.\n\nGenerated by AAWOS (Autonomous AI Workflow System)",
      "exports": [
        "TodoItem",
        "TodoCreate",
        "TodoUpdate",
        "TodoResponse"
      ]
    },
    {
      "path": "autonomous_todo_api/models.py",
      "type": "class",
      "name": "TodoItem",
      "line_number": 17,
      "parent": null,
      "docstring": "SQLAlchemy model for todo items in the database.\n\nAttributes:\n    id: Primary key, auto-incrementing integer\n    title: Required title of the todo item\n    description: Optional description\n    completed: Boolean flag for completion status\n    created_at: Timestamp when todo was created\n    updated_at: Timestamp when todo was last updated",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/models.py",
      "type": "class",
      "name": "TodoCreate",
      "line_number": 42,
      "parent": null,
      "docstring": "Pydantic model for creating new todo items.\n\nUsed for validating POST request data.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/models.py",
      "type": "class",
      "name": "TodoUpdate",
      "line_number": 62,
      "parent": null,
      "docstring": "Pydantic model for updating existing todo items.\n\nAll fields are optional to allow partial updates.\nUsed for validating PUT request data.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/models.py",
      "type": "class",
      "name": "TodoResponse",
      "line_number": 84,
      "parent": null,
      "docstring": "Pydantic model for todo item responses.\n\nUsed for serializing database objects in API responses.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/models.py",
      "type": "method",
      "name": "__repr__",
      "line_number": 38,
      "parent": "TodoItem",
      "docstring": null,
      "exports": null
    },
    {
      "path": "autonomous_todo_api/database.py",
      "type": "module",
      "name": "database",
      "line_number": 1,
      "parent": null,
      "docstring": "Database Configuration\n\nSQLite database setup with SQLAlchemy for the Todo Management API.\nProvides database session management and table creation.\n\nGenerated by AAWOS (Autonomous AI Workflow System)",
      "exports": [
        "get_db",
        "create_tables",
        "drop_tables"
      ]
    },
    {
      "path": "autonomous_todo_api/database.py",
      "type": "function",
      "name": "get_db",
      "line_number": 30,
      "parent": null,
      "docstring": "Dependency function to get database session.\n\nYields:\n    Session: SQLAlchemy database session",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/database.py",
      "type": "function",
      "name": "create_tables",
      "line_number": 43,
      "parent": null,
      "docstring": "Create all database tables.\n\nThis function should be called at application startup to ensure\nall required tables exist in the database.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/database.py",
      "type": "function",
      "name": "drop_tables",
      "line_number": 52,
      "parent": null,
      "docstring": "Drop all database tables.\n\nWARNING: This will delete all data! Only use for testing or cleanup.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/continue_autonomous_dev.py",
      "type": "module",
      "name": "continue_autonomous_dev",
      "line_number": 1,
      "parent": null,
      "docstring": "\ud83c\udfaf CONTINUE AUTONOMOUS TODO API DEVELOPMENT\n\nResume autonomous development from where we left off.",
      "exports": [
        "continue_autonomous_development",
        "validate_generated_code",
        "generate_success_report",
        "main"
      ]
    },
    {
      "path": "autonomous_todo_api/continue_autonomous_dev.py",
      "type": "function",
      "name": "continue_autonomous_development",
      "line_number": 18,
      "parent": null,
      "docstring": "Continue autonomous development using enhanced agency.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/continue_autonomous_dev.py",
      "type": "function",
      "name": "validate_generated_code",
      "line_number": 109,
      "parent": null,
      "docstring": "Validate the generated code and run tests.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/continue_autonomous_dev.py",
      "type": "function",
      "name": "generate_success_report",
      "line_number": 186,
      "parent": null,
      "docstring": "Generate a comprehensive success report.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/continue_autonomous_dev.py",
      "type": "function",
      "name": "main",
      "line_number": 266,
      "parent": null,
      "docstring": "Main execution function.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/main.py",
      "type": "module",
      "name": "main",
      "line_number": 1,
      "parent": null,
      "docstring": "FastAPI Todo Management API\n\nA production-ready REST API for managing todo items with SQLite database,\ncomprehensive testing, and full CRUD operations.\n\nGenerated by AAWOS (Autonomous AI Workflow System)",
      "exports": [
        "root",
        "health_check",
        "get_todos",
        "create_todo",
        "get_todo",
        "update_todo",
        "delete_todo"
      ]
    },
    {
      "path": "autonomous_todo_api/main.py",
      "type": "function",
      "name": "root",
      "line_number": 43,
      "parent": null,
      "docstring": "Root endpoint providing API information.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/main.py",
      "type": "function",
      "name": "health_check",
      "line_number": 59,
      "parent": null,
      "docstring": "Health check endpoint.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/main.py",
      "type": "function",
      "name": "get_todos",
      "line_number": 64,
      "parent": null,
      "docstring": "Retrieve all todos with optional pagination.\n\nArgs:\n    skip: Number of todos to skip (default: 0)\n    limit: Maximum number of todos to return (default: 100)\n    db: Database session\n    \nReturns:\n    List of todos",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/main.py",
      "type": "function",
      "name": "create_todo",
      "line_number": 80,
      "parent": null,
      "docstring": "Create a new todo item.\n\nArgs:\n    todo: Todo creation data\n    db: Database session\n    \nReturns:\n    Created todo item",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/main.py",
      "type": "function",
      "name": "get_todo",
      "line_number": 98,
      "parent": null,
      "docstring": "Retrieve a specific todo by ID.\n\nArgs:\n    todo_id: ID of the todo to retrieve\n    db: Database session\n    \nReturns:\n    Todo item\n    \nRaises:\n    HTTPException: If todo not found",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/main.py",
      "type": "function",
      "name": "update_todo",
      "line_number": 121,
      "parent": null,
      "docstring": "Update an existing todo item.\n\nArgs:\n    todo_id: ID of the todo to update\n    todo_update: Todo update data\n    db: Database session\n    \nReturns:\n    Updated todo item\n    \nRaises:\n    HTTPException: If todo not found",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/main.py",
      "type": "function",
      "name": "delete_todo",
      "line_number": 153,
      "parent": null,
      "docstring": "Delete a todo item.\n\nArgs:\n    todo_id: ID of the todo to delete\n    db: Database session\n    \nReturns:\n    Deletion confirmation\n    \nRaises:\n    HTTPException: If todo not found",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "module",
      "name": "test_main",
      "line_number": 1,
      "parent": null,
      "docstring": "Comprehensive Test Suite for Todo Management API\n\nTests all endpoints, error cases, and edge scenarios to ensure\nproduction-ready quality and 95%+ test coverage.\n\nGenerated by AAWOS (Autonomous AI Workflow System)",
      "exports": [
        "override_get_db",
        "client",
        "sample_todo",
        "TestRootEndpoints",
        "TestCreateTodo",
        "TestGetTodos",
        "TestUpdateTodo",
        "TestDeleteTodo",
        "TestEdgeCases",
        "TestApiDocumentation",
        "TestPerformance",
        "teardown_module",
        "test_root_endpoint",
        "test_health_check",
        "test_create_todo_success",
        "test_create_todo_minimal",
        "test_create_todo_invalid_title_empty",
        "test_create_todo_invalid_title_missing",
        "test_create_todo_title_too_long",
        "test_create_todo_description_too_long",
        "test_get_empty_todos",
        "test_get_todos_with_data",
        "test_get_todos_pagination",
        "test_get_todo_by_id_success",
        "test_get_todo_by_id_not_found",
        "test_get_todo_by_invalid_id",
        "test_update_todo_success",
        "test_update_todo_partial",
        "test_update_todo_not_found",
        "test_update_todo_invalid_data",
        "test_delete_todo_success",
        "test_delete_todo_not_found",
        "test_create_multiple_todos",
        "test_todo_timestamps",
        "test_special_characters_in_title",
        "test_docs_endpoint",
        "test_redoc_endpoint",
        "test_openapi_json",
        "test_create_many_todos_performance"
      ]
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "function",
      "name": "override_get_db",
      "line_number": 30,
      "parent": null,
      "docstring": "Override database dependency for testing.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "function",
      "name": "client",
      "line_number": 41,
      "parent": null,
      "docstring": "Create test client with clean database for each test.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "function",
      "name": "sample_todo",
      "line_number": 49,
      "parent": null,
      "docstring": "Sample todo data for testing.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "class",
      "name": "TestRootEndpoints",
      "line_number": 57,
      "parent": null,
      "docstring": "Test root and health endpoints.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "class",
      "name": "TestCreateTodo",
      "line_number": 78,
      "parent": null,
      "docstring": "Test todo creation endpoint.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "class",
      "name": "TestGetTodos",
      "line_number": 130,
      "parent": null,
      "docstring": "Test todo retrieval endpoints.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "class",
      "name": "TestUpdateTodo",
      "line_number": 192,
      "parent": null,
      "docstring": "Test todo update endpoint.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "class",
      "name": "TestDeleteTodo",
      "line_number": 247,
      "parent": null,
      "docstring": "Test todo deletion endpoint.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "class",
      "name": "TestEdgeCases",
      "line_number": 272,
      "parent": null,
      "docstring": "Test edge cases and error scenarios.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "class",
      "name": "TestApiDocumentation",
      "line_number": 332,
      "parent": null,
      "docstring": "Test that API documentation endpoints work.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "class",
      "name": "TestPerformance",
      "line_number": 356,
      "parent": null,
      "docstring": "Basic performance and stress tests.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "function",
      "name": "teardown_module",
      "line_number": 373,
      "parent": null,
      "docstring": "Clean up test database file.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_root_endpoint",
      "line_number": 60,
      "parent": "TestRootEndpoints",
      "docstring": "Test root endpoint returns API information.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_health_check",
      "line_number": 70,
      "parent": "TestRootEndpoints",
      "docstring": "Test health check endpoint.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_create_todo_success",
      "line_number": 81,
      "parent": "TestCreateTodo",
      "docstring": "Test successful todo creation.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_create_todo_minimal",
      "line_number": 93,
      "parent": "TestCreateTodo",
      "docstring": "Test creating todo with only required fields.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_create_todo_invalid_title_empty",
      "line_number": 103,
      "parent": "TestCreateTodo",
      "docstring": "Test creating todo with empty title.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_create_todo_invalid_title_missing",
      "line_number": 109,
      "parent": "TestCreateTodo",
      "docstring": "Test creating todo without title.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_create_todo_title_too_long",
      "line_number": 115,
      "parent": "TestCreateTodo",
      "docstring": "Test creating todo with title exceeding length limit.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_create_todo_description_too_long",
      "line_number": 121,
      "parent": "TestCreateTodo",
      "docstring": "Test creating todo with description exceeding length limit.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_get_empty_todos",
      "line_number": 133,
      "parent": "TestGetTodos",
      "docstring": "Test getting todos when none exist.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_get_todos_with_data",
      "line_number": 139,
      "parent": "TestGetTodos",
      "docstring": "Test getting todos when data exists.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_get_todos_pagination",
      "line_number": 150,
      "parent": "TestGetTodos",
      "docstring": "Test todo pagination.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_get_todo_by_id_success",
      "line_number": 168,
      "parent": "TestGetTodos",
      "docstring": "Test getting specific todo by ID.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_get_todo_by_id_not_found",
      "line_number": 181,
      "parent": "TestGetTodos",
      "docstring": "Test getting non-existent todo.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_get_todo_by_invalid_id",
      "line_number": 187,
      "parent": "TestGetTodos",
      "docstring": "Test getting todo with invalid ID format.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_update_todo_success",
      "line_number": 195,
      "parent": "TestUpdateTodo",
      "docstring": "Test successful todo update.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_update_todo_partial",
      "line_number": 214,
      "parent": "TestUpdateTodo",
      "docstring": "Test partial todo update.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_update_todo_not_found",
      "line_number": 229,
      "parent": "TestUpdateTodo",
      "docstring": "Test updating non-existent todo.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_update_todo_invalid_data",
      "line_number": 236,
      "parent": "TestUpdateTodo",
      "docstring": "Test updating todo with invalid data.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_delete_todo_success",
      "line_number": 250,
      "parent": "TestDeleteTodo",
      "docstring": "Test successful todo deletion.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_delete_todo_not_found",
      "line_number": 266,
      "parent": "TestDeleteTodo",
      "docstring": "Test deleting non-existent todo.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_create_multiple_todos",
      "line_number": 275,
      "parent": "TestEdgeCases",
      "docstring": "Test creating multiple todos.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_todo_timestamps",
      "line_number": 294,
      "parent": "TestEdgeCases",
      "docstring": "Test that timestamps are properly set and updated.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_special_characters_in_title",
      "line_number": 320,
      "parent": "TestEdgeCases",
      "docstring": "Test todos with special characters in title.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_docs_endpoint",
      "line_number": 335,
      "parent": "TestApiDocumentation",
      "docstring": "Test that FastAPI docs are accessible.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_redoc_endpoint",
      "line_number": 341,
      "parent": "TestApiDocumentation",
      "docstring": "Test that ReDoc documentation is accessible.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_openapi_json",
      "line_number": 347,
      "parent": "TestApiDocumentation",
      "docstring": "Test that OpenAPI JSON schema is accessible.",
      "exports": null
    },
    {
      "path": "autonomous_todo_api/test_main.py",
      "type": "method",
      "name": "test_create_many_todos_performance",
      "line_number": 359,
      "parent": "TestPerformance",
      "docstring": "Test creating many todos doesn't break the system.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "module",
      "name": "test_intelligent_memory",
      "line_number": 1,
      "parent": null,
      "docstring": "Tests for Intelligent Memory System\n\nComprehensive test suite for enhanced memory capabilities including\nsemantic search, auto-classification, and intelligent retrieval.",
      "exports": [
        "TestIntelligentMemoryStore",
        "TestEnhancedMemoryTools",
        "TestMemoryIntegration",
        "test_auto_classification",
        "test_keyword_extraction",
        "test_importance_scoring",
        "test_summary_generation",
        "test_related_memory_detection",
        "test_semantic_search",
        "test_search_by_type",
        "test_memory_optimization",
        "test_memory_analytics",
        "test_smart_write_memory",
        "test_semantic_search_memory",
        "test_get_memory_by_type",
        "test_analyze_memory_usage",
        "test_optimize_memory_store",
        "test_fallback_to_basic_store",
        "test_full_workflow"
      ]
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "class",
      "name": "TestIntelligentMemoryStore",
      "line_number": 26,
      "parent": null,
      "docstring": "Test intelligent memory store functionality.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "class",
      "name": "TestEnhancedMemoryTools",
      "line_number": 220,
      "parent": null,
      "docstring": "Test enhanced memory tools.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "class",
      "name": "TestMemoryIntegration",
      "line_number": 345,
      "parent": null,
      "docstring": "Integration tests for intelligent memory system.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_auto_classification",
      "line_number": 29,
      "parent": "TestIntelligentMemoryStore",
      "docstring": "Test automatic content classification.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_keyword_extraction",
      "line_number": 60,
      "parent": "TestIntelligentMemoryStore",
      "docstring": "Test keyword extraction from content.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_importance_scoring",
      "line_number": 76,
      "parent": "TestIntelligentMemoryStore",
      "docstring": "Test importance score calculation.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_summary_generation",
      "line_number": 99,
      "parent": "TestIntelligentMemoryStore",
      "docstring": "Test automatic summary generation.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_related_memory_detection",
      "line_number": 113,
      "parent": "TestIntelligentMemoryStore",
      "docstring": "Test finding related memories based on keyword overlap.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_semantic_search",
      "line_number": 134,
      "parent": "TestIntelligentMemoryStore",
      "docstring": "Test keyword-based semantic search.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_search_by_type",
      "line_number": 153,
      "parent": "TestIntelligentMemoryStore",
      "docstring": "Test searching memories by classification type.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_memory_optimization",
      "line_number": 174,
      "parent": "TestIntelligentMemoryStore",
      "docstring": "Test memory store optimization.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_memory_analytics",
      "line_number": 195,
      "parent": "TestIntelligentMemoryStore",
      "docstring": "Test memory usage analytics.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_smart_write_memory",
      "line_number": 223,
      "parent": "TestEnhancedMemoryTools",
      "docstring": "Test SmartWriteMemory tool.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_semantic_search_memory",
      "line_number": 244,
      "parent": "TestEnhancedMemoryTools",
      "docstring": "Test SemanticSearchMemory tool.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_get_memory_by_type",
      "line_number": 263,
      "parent": "TestEnhancedMemoryTools",
      "docstring": "Test GetMemoryByType tool.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_analyze_memory_usage",
      "line_number": 283,
      "parent": "TestEnhancedMemoryTools",
      "docstring": "Test AnalyzeMemoryUsage tool.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_optimize_memory_store",
      "line_number": 303,
      "parent": "TestEnhancedMemoryTools",
      "docstring": "Test OptimizeMemoryStore tool.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_fallback_to_basic_store",
      "line_number": 321,
      "parent": "TestEnhancedMemoryTools",
      "docstring": "Test tools fallback gracefully to basic memory store.",
      "exports": null
    },
    {
      "path": "tests/test_intelligent_memory.py",
      "type": "method",
      "name": "test_full_workflow",
      "line_number": 348,
      "parent": "TestMemoryIntegration",
      "docstring": "Test complete intelligent memory workflow.",
      "exports": null
    },
    {
      "path": "tests/test_intent_normalizer.py",
      "type": "module",
      "name": "test_intent_normalizer",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "test_normalize_tag_variants",
        "test_intent_normalizer_deduplicates_and_orders"
      ]
    },
    {
      "path": "tests/test_intent_normalizer.py",
      "type": "function",
      "name": "test_normalize_tag_variants",
      "line_number": 5,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_intent_normalizer.py",
      "type": "function",
      "name": "test_intent_normalizer_deduplicates_and_orders",
      "line_number": 13,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/conftest.py",
      "type": "module",
      "name": "conftest",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "reset_global_state",
        "mock_clock",
        "fast_forward",
        "no_rich_live"
      ]
    },
    {
      "path": "tests/conftest.py",
      "type": "function",
      "name": "reset_global_state",
      "line_number": 14,
      "parent": null,
      "docstring": "Reset all global state between tests.",
      "exports": null
    },
    {
      "path": "tests/conftest.py",
      "type": "function",
      "name": "mock_clock",
      "line_number": 50,
      "parent": null,
      "docstring": "Provide a mock clock for deterministic time testing.",
      "exports": null
    },
    {
      "path": "tests/conftest.py",
      "type": "function",
      "name": "fast_forward",
      "line_number": 58,
      "parent": null,
      "docstring": "Helper to advance mock time without real delays.",
      "exports": null
    },
    {
      "path": "tests/conftest.py",
      "type": "function",
      "name": "no_rich_live",
      "line_number": 66,
      "parent": null,
      "docstring": "Disable Rich Live displays during tests to prevent hanging.",
      "exports": null
    },
    {
      "path": "tests/conftest.py",
      "type": "function",
      "name": "_fast_forward",
      "line_number": 60,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_release_notes.py",
      "type": "module",
      "name": "test_release_notes",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "setup_function",
        "test_generate_release_notes_basic",
        "test_generate_release_notes_tag_filter"
      ]
    },
    {
      "path": "tests/test_release_notes.py",
      "type": "function",
      "name": "setup_function",
      "line_number": 6,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_release_notes.py",
      "type": "function",
      "name": "test_generate_release_notes_basic",
      "line_number": 10,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_release_notes.py",
      "type": "function",
      "name": "test_generate_release_notes_tag_filter",
      "line_number": 24,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_monitor_event_bus.py",
      "type": "module",
      "name": "test_monitor_event_bus",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "test_bus_append_and_read",
        "test_detector_reads_persisted_events"
      ]
    },
    {
      "path": "tests/test_monitor_event_bus.py",
      "type": "function",
      "name": "test_bus_append_and_read",
      "line_number": 10,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_monitor_event_bus.py",
      "type": "function",
      "name": "test_detector_reads_persisted_events",
      "line_number": 24,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_dod_checker.py",
      "type": "module",
      "name": "test_dod_checker",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "test_extract_adr_refs_finds_unique_refs"
      ]
    },
    {
      "path": "tests/test_dod_checker.py",
      "type": "function",
      "name": "test_extract_adr_refs_finds_unique_refs",
      "line_number": 5,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_mcp_integration.py",
      "type": "module",
      "name": "test_mcp_integration",
      "line_number": 1,
      "parent": null,
      "docstring": "Comprehensive test suite for MCP discovery and integration system.\n\nThis test suite validates the advanced MCP server discovery, capability mapping,\nintelligent routing, and enhanced error handling functionality.\n\nCross-references:\n    - MCP Discovery: ai/integration/mcp_discovery.py\n    - Enhanced MCP Tool: ai/tools/enhanced_mcp.py\n    - Integration Tests: tests/test_integration.py\n    - Memory Tools: ai/tools/memory_tools.py\n\nRelated:\n    - Server discovery across multiple methods (process, network, config, wellknown)\n    - Capability probing and categorization\n    - Intelligent server selection and routing\n    - Error handling and failover mechanisms",
      "exports": [
        "test_mcp_client_tool_discovery",
        "test_mcp_client_tool_call",
        "TestMCPServerDiscovery",
        "TestEnhancedMCPTool",
        "TestMCPToolFunctions",
        "setup_method",
        "setup_method"
      ]
    },
    {
      "path": "tests/test_mcp_integration.py",
      "type": "function",
      "name": "test_mcp_client_tool_discovery",
      "line_number": 62,
      "parent": null,
      "docstring": "Test that agents can discover available MCP servers.",
      "exports": null
    },
    {
      "path": "tests/test_mcp_integration.py",
      "type": "function",
      "name": "test_mcp_client_tool_call",
      "line_number": 73,
      "parent": null,
      "docstring": "Test that agents can call MCP tools safely.",
      "exports": null
    },
    {
      "path": "tests/test_mcp_integration.py",
      "type": "class",
      "name": "TestMCPServerDiscovery",
      "line_number": 92,
      "parent": null,
      "docstring": "Test MCP server discovery functionality.",
      "exports": null
    },
    {
      "path": "tests/test_mcp_integration.py",
      "type": "class",
      "name": "TestEnhancedMCPTool",
      "line_number": 198,
      "parent": null,
      "docstring": "Test enhanced MCP tool functionality.",
      "exports": null
    },
    {
      "path": "tests/test_mcp_integration.py",
      "type": "class",
      "name": "TestMCPToolFunctions",
      "line_number": 269,
      "parent": null,
      "docstring": "Test standalone MCP tool functions.",
      "exports": null
    },
    {
      "path": "tests/test_mcp_integration.py",
      "type": "method",
      "name": "setup_method",
      "line_number": 95,
      "parent": "TestMCPServerDiscovery",
      "docstring": "Setup test environment.",
      "exports": null
    },
    {
      "path": "tests/test_mcp_integration.py",
      "type": "method",
      "name": "setup_method",
      "line_number": 201,
      "parent": "TestEnhancedMCPTool",
      "docstring": "Setup test environment.",
      "exports": null
    },
    {
      "path": "tests/test_agency_persistence.py",
      "type": "module",
      "name": "test_agency_persistence",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "test_context_function_available"
      ]
    },
    {
      "path": "tests/test_agency_persistence.py",
      "type": "function",
      "name": "test_context_function_available",
      "line_number": 12,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_next_steps.py",
      "type": "module",
      "name": "test_next_steps",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "setup_function",
        "test_next_steps_for_bug_focuses_on_tests_and_fix",
        "test_next_steps_for_feature_focuses_on_tests_then_impl"
      ]
    },
    {
      "path": "tests/test_next_steps.py",
      "type": "function",
      "name": "setup_function",
      "line_number": 6,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_next_steps.py",
      "type": "function",
      "name": "test_next_steps_for_bug_focuses_on_tests_and_fix",
      "line_number": 10,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_next_steps.py",
      "type": "function",
      "name": "test_next_steps_for_feature_focuses_on_tests_then_impl",
      "line_number": 20,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_telegram_integration.py",
      "type": "module",
      "name": "test_telegram_integration",
      "line_number": 1,
      "parent": null,
      "docstring": "Integration tests for Telegram bot interface and agent spawning system.\n\nTests the complete workflow from user request through Father agent analysis\nto agent spawning and deployment.",
      "exports": [
        "father_decision_maker",
        "agent_spawner",
        "mock_telegram_bot",
        "TestFatherDecisionMaker",
        "TestAgentSpawner",
        "TestTelegramBotIntegration",
        "TestEndToEndWorkflow",
        "TestErrorHandling",
        "TestRealWorldScenarios",
        "test_agent_spawning_creates_correct_structure",
        "test_spawn_status_tracking",
        "test_bot_initialization",
        "test_user_authorization"
      ]
    },
    {
      "path": "tests/test_telegram_integration.py",
      "type": "function",
      "name": "father_decision_maker",
      "line_number": 21,
      "parent": null,
      "docstring": "Create FatherDecisionMaker instance for testing.",
      "exports": null
    },
    {
      "path": "tests/test_telegram_integration.py",
      "type": "function",
      "name": "agent_spawner",
      "line_number": 29,
      "parent": null,
      "docstring": "Create AgentSpawner instance for testing.",
      "exports": null
    },
    {
      "path": "tests/test_telegram_integration.py",
      "type": "function",
      "name": "mock_telegram_bot",
      "line_number": 37,
      "parent": null,
      "docstring": "Create mock Telegram bot for testing.",
      "exports": null
    },
    {
      "path": "tests/test_telegram_integration.py",
      "type": "class",
      "name": "TestFatherDecisionMaker",
      "line_number": 45,
      "parent": null,
      "docstring": "Test Father agent decision making logic.",
      "exports": null
    },
    {
      "path": "tests/test_telegram_integration.py",
      "type": "class",
      "name": "TestAgentSpawner",
      "line_number": 102,
      "parent": null,
      "docstring": "Test agent spawning and management functionality.",
      "exports": null
    },
    {
      "path": "tests/test_telegram_integration.py",
      "type": "class",
      "name": "TestTelegramBotIntegration",
      "line_number": 191,
      "parent": null,
      "docstring": "Test complete Telegram bot integration.",
      "exports": null
    },
    {
      "path": "tests/test_telegram_integration.py",
      "type": "class",
      "name": "TestEndToEndWorkflow",
      "line_number": 248,
      "parent": null,
      "docstring": "Test complete end-to-end workflow.",
      "exports": null
    },
    {
      "path": "tests/test_telegram_integration.py",
      "type": "class",
      "name": "TestErrorHandling",
      "line_number": 289,
      "parent": null,
      "docstring": "Test error handling and edge cases.",
      "exports": null
    },
    {
      "path": "tests/test_telegram_integration.py",
      "type": "class",
      "name": "TestRealWorldScenarios",
      "line_number": 329,
      "parent": null,
      "docstring": "Test realistic user scenarios.",
      "exports": null
    },
    {
      "path": "tests/test_telegram_integration.py",
      "type": "method",
      "name": "test_agent_spawning_creates_correct_structure",
      "line_number": 136,
      "parent": "TestAgentSpawner",
      "docstring": "Test that spawned agents have correct structure.",
      "exports": null
    },
    {
      "path": "tests/test_telegram_integration.py",
      "type": "method",
      "name": "test_spawn_status_tracking",
      "line_number": 164,
      "parent": "TestAgentSpawner",
      "docstring": "Test spawn request status tracking.",
      "exports": null
    },
    {
      "path": "tests/test_telegram_integration.py",
      "type": "method",
      "name": "test_bot_initialization",
      "line_number": 194,
      "parent": "TestTelegramBotIntegration",
      "docstring": "Test bot initialization with configuration.",
      "exports": null
    },
    {
      "path": "tests/test_telegram_integration.py",
      "type": "method",
      "name": "test_user_authorization",
      "line_number": 200,
      "parent": "TestTelegramBotIntegration",
      "docstring": "Test user authorization logic.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "module",
      "name": "test_repo_scanner",
      "line_number": 1,
      "parent": null,
      "docstring": "Tests for Repository Scanner that detects issues in codebase.\n\nThe scanner identifies TODOs, FIXMEs, failing tests, and other issues\nthat agents can autonomously fix.",
      "exports": [
        "TestRepoScanner",
        "TestTask",
        "TestModuleFunctions",
        "test_scanner_initialization",
        "test_find_todos_in_files",
        "test_find_failing_tests",
        "test_parse_git_diff",
        "test_scan_repository_comprehensive",
        "test_task_priority_ordering",
        "test_task_to_dict",
        "test_ignore_patterns",
        "test_find_type_errors",
        "test_scanner_with_no_issues",
        "test_scan_repository_function",
        "test_task_creation",
        "test_task_type_enum",
        "test_task_equality",
        "test_task_with_context",
        "test_find_todos_function",
        "test_find_failing_tests_function",
        "test_parse_git_diff_function"
      ]
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "class",
      "name": "TestRepoScanner",
      "line_number": 25,
      "parent": null,
      "docstring": "Test Repository Scanner functionality.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "class",
      "name": "TestTask",
      "line_number": 256,
      "parent": null,
      "docstring": "Test the Task data structure.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "class",
      "name": "TestModuleFunctions",
      "line_number": 316,
      "parent": null,
      "docstring": "Test module-level convenience functions.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_scanner_initialization",
      "line_number": 28,
      "parent": "TestRepoScanner",
      "docstring": "Test scanner can be initialized with repo path.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_find_todos_in_files",
      "line_number": 35,
      "parent": "TestRepoScanner",
      "docstring": "Test finding TODO and FIXME comments in code.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_find_failing_tests",
      "line_number": 60,
      "parent": "TestRepoScanner",
      "docstring": "Test detection of failing tests.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_parse_git_diff",
      "line_number": 87,
      "parent": "TestRepoScanner",
      "docstring": "Test parsing git diff for uncommitted changes.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_scan_repository_comprehensive",
      "line_number": 115,
      "parent": "TestRepoScanner",
      "docstring": "Test comprehensive repository scanning.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_task_priority_ordering",
      "line_number": 140,
      "parent": "TestRepoScanner",
      "docstring": "Test that tasks are ordered by priority.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_task_to_dict",
      "line_number": 159,
      "parent": "TestRepoScanner",
      "docstring": "Test Task serialization to dictionary.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_ignore_patterns",
      "line_number": 179,
      "parent": "TestRepoScanner",
      "docstring": "Test that scanner respects ignore patterns.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_find_type_errors",
      "line_number": 201,
      "parent": "TestRepoScanner",
      "docstring": "Test detection of type errors using mypy or similar.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_scanner_with_no_issues",
      "line_number": 226,
      "parent": "TestRepoScanner",
      "docstring": "Test scanner with clean repository.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_scan_repository_function",
      "line_number": 241,
      "parent": "TestRepoScanner",
      "docstring": "Test the module-level scan_repository function.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_task_creation",
      "line_number": 259,
      "parent": "TestTask",
      "docstring": "Test creating a Task.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_task_type_enum",
      "line_number": 275,
      "parent": "TestTask",
      "docstring": "Test TaskType enumeration.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_task_equality",
      "line_number": 284,
      "parent": "TestTask",
      "docstring": "Test Task equality comparison.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_task_with_context",
      "line_number": 302,
      "parent": "TestTask",
      "docstring": "Test Task with code context.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_find_todos_function",
      "line_number": 319,
      "parent": "TestModuleFunctions",
      "docstring": "Test module-level find_todos function.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_find_failing_tests_function",
      "line_number": 329,
      "parent": "TestModuleFunctions",
      "docstring": "Test module-level find_failing_tests function.",
      "exports": null
    },
    {
      "path": "tests/test_repo_scanner.py",
      "type": "method",
      "name": "test_parse_git_diff_function",
      "line_number": 341,
      "parent": "TestModuleFunctions",
      "docstring": "Test module-level parse_git_diff function.",
      "exports": null
    },
    {
      "path": "tests/test_adr_tool.py",
      "type": "module",
      "name": "test_adr_tool",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "test_create_adr_creates_numbered_file",
        "test_create_adr_increments_id"
      ]
    },
    {
      "path": "tests/test_adr_tool.py",
      "type": "function",
      "name": "test_create_adr_creates_numbered_file",
      "line_number": 8,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_adr_tool.py",
      "type": "function",
      "name": "test_create_adr_increments_id",
      "line_number": 28,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_memory_store.py",
      "type": "module",
      "name": "test_memory_store",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "test_inmemory_store_write_and_query_ordering",
        "test_inmemory_store_returns_stable_ids"
      ]
    },
    {
      "path": "tests/test_memory_store.py",
      "type": "function",
      "name": "test_inmemory_store_write_and_query_ordering",
      "line_number": 11,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_memory_store.py",
      "type": "function",
      "name": "test_inmemory_store_returns_stable_ids",
      "line_number": 29,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "module",
      "name": "test_adaptive_refresh",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "TestRefreshController",
        "TestAdaptiveMonitorUI",
        "TestMonitorIntegration",
        "test_initial_state_is_idle",
        "test_interval_mapping_correct",
        "test_custom_min_interval_override",
        "test_interval_changes_with_activity",
        "test_ui_initializes_with_console",
        "test_generate_agent_table_structure",
        "test_color_coding_by_activity_level",
        "test_format_memory_rss",
        "test_format_response_time",
        "test_generate_timeline_sparkline",
        "test_update_display_integration",
        "test_monitor_uses_adaptive_intervals",
        "test_activity_hooks_record_events"
      ]
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "class",
      "name": "TestRefreshController",
      "line_number": 11,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "class",
      "name": "TestAdaptiveMonitorUI",
      "line_number": 61,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "class",
      "name": "TestMonitorIntegration",
      "line_number": 148,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "method",
      "name": "test_initial_state_is_idle",
      "line_number": 13,
      "parent": "TestRefreshController",
      "docstring": "Should start with idle refresh interval.",
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "method",
      "name": "test_interval_mapping_correct",
      "line_number": 18,
      "parent": "TestRefreshController",
      "docstring": "Should map activity levels to correct intervals.",
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "method",
      "name": "test_custom_min_interval_override",
      "line_number": 36,
      "parent": "TestRefreshController",
      "docstring": "Should respect custom minimum interval.",
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "method",
      "name": "test_interval_changes_with_activity",
      "line_number": 44,
      "parent": "TestRefreshController",
      "docstring": "Should adapt interval as activity changes.",
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "method",
      "name": "test_ui_initializes_with_console",
      "line_number": 63,
      "parent": "TestAdaptiveMonitorUI",
      "docstring": "Should initialize with rich console and live display.",
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "method",
      "name": "test_generate_agent_table_structure",
      "line_number": 74,
      "parent": "TestAdaptiveMonitorUI",
      "docstring": "Should generate table with correct columns.",
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "method",
      "name": "test_color_coding_by_activity_level",
      "line_number": 92,
      "parent": "TestAdaptiveMonitorUI",
      "docstring": "Should apply correct colors based on activity level.",
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "method",
      "name": "test_format_memory_rss",
      "line_number": 102,
      "parent": "TestAdaptiveMonitorUI",
      "docstring": "Should format memory in human-readable units.",
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "method",
      "name": "test_format_response_time",
      "line_number": 110,
      "parent": "TestAdaptiveMonitorUI",
      "docstring": "Should format response times appropriately.",
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "method",
      "name": "test_generate_timeline_sparkline",
      "line_number": 118,
      "parent": "TestAdaptiveMonitorUI",
      "docstring": "Should generate sparkline from recent events.",
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "method",
      "name": "test_update_display_integration",
      "line_number": 132,
      "parent": "TestAdaptiveMonitorUI",
      "docstring": "Should update live display without errors.",
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "method",
      "name": "test_monitor_uses_adaptive_intervals",
      "line_number": 150,
      "parent": "TestMonitorIntegration",
      "docstring": "Should use activity detector for refresh intervals.",
      "exports": null
    },
    {
      "path": "tests/test_adaptive_refresh.py",
      "type": "method",
      "name": "test_activity_hooks_record_events",
      "line_number": 155,
      "parent": "TestMonitorIntegration",
      "docstring": "Should record events when memory operations occur.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "module",
      "name": "test_mother_agent",
      "line_number": 1,
      "parent": null,
      "docstring": "Tests for the Mother Agent that spawns child agents.\n\nThis tests the core spawning interface that creates and manages\nchild agents for autonomous development tasks.",
      "exports": [
        "TestMotherAgent",
        "TestAgentResult",
        "TestSpawnRequest",
        "test_mother_agent_initialization",
        "test_run_with_basic_parameters",
        "test_run_spawns_appropriate_agent_type",
        "test_run_with_test_generation_task",
        "test_run_with_architecture_task",
        "test_memory_persistence_on_spawn",
        "test_spawn_request_tracking",
        "test_error_handling_in_run",
        "test_model_selection",
        "test_output_type_validation",
        "test_integration_with_father_agent",
        "test_spawn_history_limit",
        "test_concurrent_spawn_safety",
        "test_get_spawn_statistics",
        "test_agent_result_creation",
        "test_agent_result_to_dict",
        "test_spawn_request_creation",
        "test_spawn_request_validation",
        "spawn_agent"
      ]
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "class",
      "name": "TestMotherAgent",
      "line_number": 15,
      "parent": null,
      "docstring": "Test Mother Agent spawning and lifecycle management.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "class",
      "name": "TestAgentResult",
      "line_number": 259,
      "parent": null,
      "docstring": "Test the AgentResult data structure.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "class",
      "name": "TestSpawnRequest",
      "line_number": 304,
      "parent": null,
      "docstring": "Test the SpawnRequest data structure.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_mother_agent_initialization",
      "line_number": 18,
      "parent": "TestMotherAgent",
      "docstring": "Test Mother Agent can be initialized with memory store.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_run_with_basic_parameters",
      "line_number": 27,
      "parent": "TestMotherAgent",
      "docstring": "Test run method with basic parameters.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_run_spawns_appropriate_agent_type",
      "line_number": 44,
      "parent": "TestMotherAgent",
      "docstring": "Test that run method spawns the correct agent based on instructions.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_run_with_test_generation_task",
      "line_number": 59,
      "parent": "TestMotherAgent",
      "docstring": "Test spawning for test generation tasks.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_run_with_architecture_task",
      "line_number": 73,
      "parent": "TestMotherAgent",
      "docstring": "Test spawning for architecture/design tasks.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_memory_persistence_on_spawn",
      "line_number": 87,
      "parent": "TestMotherAgent",
      "docstring": "Test that spawn requests are persisted to memory.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_spawn_request_tracking",
      "line_number": 107,
      "parent": "TestMotherAgent",
      "docstring": "Test that spawn requests are properly tracked.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_error_handling_in_run",
      "line_number": 129,
      "parent": "TestMotherAgent",
      "docstring": "Test error handling when agent spawning fails.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_model_selection",
      "line_number": 145,
      "parent": "TestMotherAgent",
      "docstring": "Test different model selections.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_output_type_validation",
      "line_number": 161,
      "parent": "TestMotherAgent",
      "docstring": "Test output type validation and defaults.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_integration_with_father_agent",
      "line_number": 177,
      "parent": "TestMotherAgent",
      "docstring": "Test integration with Father agent for planning.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_spawn_history_limit",
      "line_number": 192,
      "parent": "TestMotherAgent",
      "docstring": "Test that spawn history has a reasonable limit.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_concurrent_spawn_safety",
      "line_number": 210,
      "parent": "TestMotherAgent",
      "docstring": "Test that Mother Agent handles concurrent spawns safely.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_get_spawn_statistics",
      "line_number": 240,
      "parent": "TestMotherAgent",
      "docstring": "Test getting statistics about spawned agents.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_agent_result_creation",
      "line_number": 262,
      "parent": "TestAgentResult",
      "docstring": "Test creating an AgentResult.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_agent_result_to_dict",
      "line_number": 281,
      "parent": "TestAgentResult",
      "docstring": "Test converting AgentResult to dictionary.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_spawn_request_creation",
      "line_number": 307,
      "parent": "TestSpawnRequest",
      "docstring": "Test creating a SpawnRequest.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "method",
      "name": "test_spawn_request_validation",
      "line_number": 322,
      "parent": "TestSpawnRequest",
      "docstring": "Test SpawnRequest validation.",
      "exports": null
    },
    {
      "path": "tests/test_mother_agent.py",
      "type": "function",
      "name": "spawn_agent",
      "line_number": 217,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_agency_bootstrap.py",
      "type": "module",
      "name": "test_agency_bootstrap",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "test_agency_bootstrap_constructs"
      ]
    },
    {
      "path": "tests/test_agency_bootstrap.py",
      "type": "function",
      "name": "test_agency_bootstrap_constructs",
      "line_number": 12,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_activity_detection.py",
      "type": "module",
      "name": "test_activity_detection",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "TestActivityDetection",
        "test_idle_state_with_no_events",
        "test_low_activity_single_agent",
        "test_medium_activity_multiple_agents",
        "test_medium_activity_memory_writes",
        "test_high_activity_with_flows",
        "test_high_activity_many_events",
        "test_high_activity_frequent_memory_writes",
        "test_event_window_cleanup",
        "test_activity_level_transitions",
        "test_recent_events_limit"
      ]
    },
    {
      "path": "tests/test_activity_detection.py",
      "type": "class",
      "name": "TestActivityDetection",
      "line_number": 10,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_activity_detection.py",
      "type": "method",
      "name": "test_idle_state_with_no_events",
      "line_number": 12,
      "parent": "TestActivityDetection",
      "docstring": "Should return IDLE when no events recorded.",
      "exports": null
    },
    {
      "path": "tests/test_activity_detection.py",
      "type": "method",
      "name": "test_low_activity_single_agent",
      "line_number": 18,
      "parent": "TestActivityDetection",
      "docstring": "Should return LOW for occasional single agent activity.",
      "exports": null
    },
    {
      "path": "tests/test_activity_detection.py",
      "type": "method",
      "name": "test_medium_activity_multiple_agents",
      "line_number": 27,
      "parent": "TestActivityDetection",
      "docstring": "Should return MEDIUM for multiple agents or memory writes.",
      "exports": null
    },
    {
      "path": "tests/test_activity_detection.py",
      "type": "method",
      "name": "test_medium_activity_memory_writes",
      "line_number": 39,
      "parent": "TestActivityDetection",
      "docstring": "Should return MEDIUM for frequent memory writes.",
      "exports": null
    },
    {
      "path": "tests/test_activity_detection.py",
      "type": "method",
      "name": "test_high_activity_with_flows",
      "line_number": 50,
      "parent": "TestActivityDetection",
      "docstring": "Should return HIGH when flows are active.",
      "exports": null
    },
    {
      "path": "tests/test_activity_detection.py",
      "type": "method",
      "name": "test_high_activity_many_events",
      "line_number": 59,
      "parent": "TestActivityDetection",
      "docstring": "Should return HIGH for very frequent events (>30/min).",
      "exports": null
    },
    {
      "path": "tests/test_activity_detection.py",
      "type": "method",
      "name": "test_high_activity_frequent_memory_writes",
      "line_number": 70,
      "parent": "TestActivityDetection",
      "docstring": "Should return HIGH for frequent memory writes (>5/min).",
      "exports": null
    },
    {
      "path": "tests/test_activity_detection.py",
      "type": "method",
      "name": "test_event_window_cleanup",
      "line_number": 81,
      "parent": "TestActivityDetection",
      "docstring": "Should clean up old events outside the window.",
      "exports": null
    },
    {
      "path": "tests/test_activity_detection.py",
      "type": "method",
      "name": "test_activity_level_transitions",
      "line_number": 98,
      "parent": "TestActivityDetection",
      "docstring": "Should transition between activity levels correctly.",
      "exports": null
    },
    {
      "path": "tests/test_activity_detection.py",
      "type": "method",
      "name": "test_recent_events_limit",
      "line_number": 117,
      "parent": "TestActivityDetection",
      "docstring": "Should return limited number of recent events.",
      "exports": null
    },
    {
      "path": "tests/test_monitor_status.py",
      "type": "module",
      "name": "test_monitor_status",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "test_get_status_shape"
      ]
    },
    {
      "path": "tests/test_monitor_status.py",
      "type": "function",
      "name": "test_get_status_shape",
      "line_number": 7,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_memory_tools.py",
      "type": "module",
      "name": "test_memory_tools",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "setup_function",
        "test_write_and_read_tools_roundtrip"
      ]
    },
    {
      "path": "tests/test_memory_tools.py",
      "type": "function",
      "name": "setup_function",
      "line_number": 8,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_memory_tools.py",
      "type": "function",
      "name": "test_write_and_read_tools_roundtrip",
      "line_number": 13,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "module",
      "name": "test_firestore_memory",
      "line_number": 1,
      "parent": null,
      "docstring": "Tests for Firestore Memory Store\n\nTests for the persistent memory store implementation using Firestore.\nIncludes tests for both connected and fallback modes.",
      "exports": [
        "TestFirestoreMemoryStore",
        "TestFirestoreFactory",
        "TestFirestoreIntegration",
        "test_init_with_firestore_available",
        "test_init_without_firestore",
        "test_init_with_firestore_error",
        "test_fallback_write_without_firestore",
        "test_memory_item_conversion",
        "test_sync_to_firestore",
        "test_local_cache_management",
        "test_search_firestore_fallback",
        "test_get_memory_stats_without_firestore",
        "test_get_memory_stats_with_firestore",
        "test_force_sync_without_firestore",
        "test_consolidate_memories_without_firestore",
        "test_create_firestore_memory_store_success",
        "test_create_firestore_memory_store_fallback",
        "test_end_to_end_fallback_mode",
        "test_mock_firestore_workflow"
      ]
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "class",
      "name": "TestFirestoreMemoryStore",
      "line_number": 20,
      "parent": null,
      "docstring": "Test FirestoreMemoryStore functionality.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "class",
      "name": "TestFirestoreFactory",
      "line_number": 209,
      "parent": null,
      "docstring": "Test factory function for creating Firestore memory stores.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "class",
      "name": "TestFirestoreIntegration",
      "line_number": 238,
      "parent": null,
      "docstring": "Integration tests for Firestore memory store.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_init_with_firestore_available",
      "line_number": 24,
      "parent": "TestFirestoreMemoryStore",
      "docstring": "Test initialization when Firestore is available.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_init_without_firestore",
      "line_number": 41,
      "parent": "TestFirestoreMemoryStore",
      "docstring": "Test initialization fallback when Firestore is not available.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_init_with_firestore_error",
      "line_number": 50,
      "parent": "TestFirestoreMemoryStore",
      "docstring": "Test initialization when Firestore client creation fails.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_fallback_write_without_firestore",
      "line_number": 59,
      "parent": "TestFirestoreMemoryStore",
      "docstring": "Test writing memories works even without Firestore.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_memory_item_conversion",
      "line_number": 71,
      "parent": "TestFirestoreMemoryStore",
      "docstring": "Test conversion between memory items and Firestore documents.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_sync_to_firestore",
      "line_number": 98,
      "parent": "TestFirestoreMemoryStore",
      "docstring": "Test syncing memory items to Firestore.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_local_cache_management",
      "line_number": 117,
      "parent": "TestFirestoreMemoryStore",
      "docstring": "Test local cache size management.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_search_firestore_fallback",
      "line_number": 137,
      "parent": "TestFirestoreMemoryStore",
      "docstring": "Test Firestore search with fallback to local search.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_get_memory_stats_without_firestore",
      "line_number": 156,
      "parent": "TestFirestoreMemoryStore",
      "docstring": "Test memory stats when Firestore is not connected.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_get_memory_stats_with_firestore",
      "line_number": 169,
      "parent": "TestFirestoreMemoryStore",
      "docstring": "Test memory stats when Firestore is connected.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_force_sync_without_firestore",
      "line_number": 188,
      "parent": "TestFirestoreMemoryStore",
      "docstring": "Test force sync when Firestore is not available.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_consolidate_memories_without_firestore",
      "line_number": 199,
      "parent": "TestFirestoreMemoryStore",
      "docstring": "Test memory consolidation when Firestore is not available.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_create_firestore_memory_store_success",
      "line_number": 212,
      "parent": "TestFirestoreFactory",
      "docstring": "Test successful creation of FirestoreMemoryStore.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_create_firestore_memory_store_fallback",
      "line_number": 223,
      "parent": "TestFirestoreFactory",
      "docstring": "Test fallback to IntelligentMemoryStore when FirestoreMemoryStore fails.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_end_to_end_fallback_mode",
      "line_number": 241,
      "parent": "TestFirestoreIntegration",
      "docstring": "Test complete workflow in fallback mode.",
      "exports": null
    },
    {
      "path": "tests/test_firestore_memory.py",
      "type": "method",
      "name": "test_mock_firestore_workflow",
      "line_number": 270,
      "parent": "TestFirestoreIntegration",
      "docstring": "Test workflow with mocked Firestore client.",
      "exports": null
    },
    {
      "path": "tests/test_devcycle_loop.py",
      "type": "module",
      "name": "test_devcycle_loop",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "test_devcycle_slugify"
      ]
    },
    {
      "path": "tests/test_devcycle_loop.py",
      "type": "function",
      "name": "test_devcycle_slugify",
      "line_number": 6,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "tests/test_mvp_runner.py",
      "type": "module",
      "name": "test_mvp_runner",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "test_run_mvp_returns_summary_dict"
      ]
    },
    {
      "path": "tests/test_mvp_runner.py",
      "type": "function",
      "name": "test_run_mvp_returns_summary_dict",
      "line_number": 7,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/agency_openai_patch.py",
      "type": "module",
      "name": "agency_openai_patch",
      "line_number": 1,
      "parent": null,
      "docstring": "Agency Swarm OpenAI Cost Tracking Patch\n\nThis module patches the openai module to use cost tracking\nwhen imported by Agency Swarm or other parts of the system.",
      "exports": [
        "patch_openai",
        "unpatch_openai",
        "TrackedOpenAI"
      ]
    },
    {
      "path": "ai/agency_openai_patch.py",
      "type": "function",
      "name": "patch_openai",
      "line_number": 13,
      "parent": null,
      "docstring": "Patch the openai module with cost tracking.",
      "exports": null
    },
    {
      "path": "ai/agency_openai_patch.py",
      "type": "function",
      "name": "unpatch_openai",
      "line_number": 47,
      "parent": null,
      "docstring": "Restore original openai module.",
      "exports": null
    },
    {
      "path": "ai/agency_openai_patch.py",
      "type": "class",
      "name": "TrackedOpenAI",
      "line_number": 26,
      "parent": null,
      "docstring": "OpenAI client with automatic cost tracking.",
      "exports": null
    },
    {
      "path": "ai/agency_openai_patch.py",
      "type": "method",
      "name": "__init__",
      "line_number": 29,
      "parent": "TrackedOpenAI",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/agency.py",
      "type": "module",
      "name": "agency",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "build_agency"
      ]
    },
    {
      "path": "ai/agency.py",
      "type": "function",
      "name": "build_agency",
      "line_number": 45,
      "parent": null,
      "docstring": "Construct the basic agency with directional flows.\n\nFlows (left -> right can initiate):\n- Architect -> Developer\n- Developer -> QA\n- QA -> Reviewer\n- Reviewer -> Architect (close loop)\n\nIf a local agency_manifesto.md exists, it will be used as shared instructions.",
      "exports": null
    },
    {
      "path": "ai/__init__.py",
      "type": "module",
      "name": "__init__",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": []
    },
    {
      "path": "ai/enhanced_agency.py",
      "type": "module",
      "name": "enhanced_agency",
      "line_number": 1,
      "parent": null,
      "docstring": "Enhanced Agency with Intelligent Memory-Powered Agents\n\nThis module provides an enhanced version of the agency that uses agents equipped\nwith intelligent memory capabilities including semantic search, auto-classification,\nand memory analytics.\n\nThe enhanced agency provides:\n- Context-aware decision making through semantic search\n- Automated memory classification and tagging\n- Learning from past interactions and patterns\n- Memory analytics for performance optimization\n- Backward compatibility with basic memory operations",
      "exports": [
        "initialize_intelligent_memory",
        "build_enhanced_agency",
        "build_lightweight_enhanced_agency",
        "demo_enhanced_agency"
      ]
    },
    {
      "path": "ai/enhanced_agency.py",
      "type": "function",
      "name": "initialize_intelligent_memory",
      "line_number": 38,
      "parent": null,
      "docstring": "Initialize the intelligent memory store with fallback options.\n\nArgs:\n    use_enhanced_firestore: Whether to use Enhanced Firestore (production) or basic Firestore (staging)",
      "exports": null
    },
    {
      "path": "ai/enhanced_agency.py",
      "type": "function",
      "name": "build_enhanced_agency",
      "line_number": 79,
      "parent": null,
      "docstring": "Construct the enhanced agency with intelligent memory-powered agents.\n\nArgs:\n    enable_qa: Whether to include QA agent in the workflow\n    enable_reviewer: Whether to include Reviewer agent in the workflow  \n    shared_instructions_path: Path to shared instructions file\n    use_enhanced_firestore: Whether to use Enhanced Firestore for production\n\nReturns:\n    Agency instance with intelligent agents",
      "exports": null
    },
    {
      "path": "ai/enhanced_agency.py",
      "type": "function",
      "name": "build_lightweight_enhanced_agency",
      "line_number": 141,
      "parent": null,
      "docstring": "Build a lightweight version with just Father -> Architect -> Developer flow.\n\nUseful for rapid prototyping or when QA/Review processes are handled externally.",
      "exports": null
    },
    {
      "path": "ai/enhanced_agency.py",
      "type": "function",
      "name": "demo_enhanced_agency",
      "line_number": 150,
      "parent": null,
      "docstring": "Demo function to showcase enhanced agency capabilities.\n\nThis function demonstrates:\n1. Intelligent memory initialization\n2. Enhanced agent creation\n3. Sample workflow with memory intelligence",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "module",
      "name": "docs_audit",
      "line_number": 1,
      "parent": null,
      "docstring": "Repository-wide documentation audit script for Fresh AI.\n\nThis script walks the codebase and documentation folders to create a comprehensive\ninventory of modules, classes, functions, markdown files, and cross-references.\nThe output serves as the single source of truth for documentation optimization.\n\nUsage:\n    python scripts/docs_audit.py [--output docs/_generated/inventory.json]",
      "exports": [
        "CodeItem",
        "DocItem",
        "InventoryData",
        "RepositoryAuditor",
        "main",
        "audit_python_files",
        "audit_documentation",
        "find_orphans_and_broken_links",
        "generate_inventory",
        "run_audit"
      ]
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "class",
      "name": "CodeItem",
      "line_number": 24,
      "parent": null,
      "docstring": "Represents a code element (module, class, function).",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "class",
      "name": "DocItem",
      "line_number": 36,
      "parent": null,
      "docstring": "Represents a documentation element.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "class",
      "name": "InventoryData",
      "line_number": 46,
      "parent": null,
      "docstring": "Complete repository inventory.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "class",
      "name": "RepositoryAuditor",
      "line_number": 55,
      "parent": null,
      "docstring": "Audits the Fresh repository for code and documentation.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "function",
      "name": "main",
      "line_number": 350,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "__init__",
      "line_number": 58,
      "parent": "RepositoryAuditor",
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "audit_python_files",
      "line_number": 69,
      "parent": "RepositoryAuditor",
      "docstring": "Audit Python files for modules, classes, and functions.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "_is_excluded_path",
      "line_number": 82,
      "parent": "RepositoryAuditor",
      "docstring": "Check if path should be excluded from audit.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "_audit_python_file",
      "line_number": 100,
      "parent": "RepositoryAuditor",
      "docstring": "Audit a single Python file.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "_extract_exports",
      "line_number": 135,
      "parent": "RepositoryAuditor",
      "docstring": "Extract __all__ or public definitions from module.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "_find_parent_class",
      "line_number": 156,
      "parent": "RepositoryAuditor",
      "docstring": "Find the parent class of a function node.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "_add_class",
      "line_number": 165,
      "parent": "RepositoryAuditor",
      "docstring": "Add a class to the inventory.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "_add_function",
      "line_number": 176,
      "parent": "RepositoryAuditor",
      "docstring": "Add a function to the inventory.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "_add_method",
      "line_number": 187,
      "parent": "RepositoryAuditor",
      "docstring": "Add a method to the inventory.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "audit_documentation",
      "line_number": 199,
      "parent": "RepositoryAuditor",
      "docstring": "Audit Markdown documentation files.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "_audit_markdown_file",
      "line_number": 213,
      "parent": "RepositoryAuditor",
      "docstring": "Audit a single Markdown file.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "_extract_title",
      "line_number": 240,
      "parent": "RepositoryAuditor",
      "docstring": "Extract document title from first H1 or use fallback.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "_extract_anchors",
      "line_number": 245,
      "parent": "RepositoryAuditor",
      "docstring": "Extract header anchors from content.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "_extract_links",
      "line_number": 256,
      "parent": "RepositoryAuditor",
      "docstring": "Extract internal links from Markdown content.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "_extract_cross_references",
      "line_number": 280,
      "parent": "RepositoryAuditor",
      "docstring": "Extract explicit cross-references from content.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "find_orphans_and_broken_links",
      "line_number": 301,
      "parent": "RepositoryAuditor",
      "docstring": "Find orphaned files and broken links.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "generate_inventory",
      "line_number": 320,
      "parent": "RepositoryAuditor",
      "docstring": "Generate the complete inventory.",
      "exports": null
    },
    {
      "path": "scripts/docs_audit.py",
      "type": "method",
      "name": "run_audit",
      "line_number": 332,
      "parent": "RepositoryAuditor",
      "docstring": "Run the complete audit process.",
      "exports": null
    },
    {
      "path": "scripts/demo-adaptive-monitor.py",
      "type": "module",
      "name": "demo-adaptive-monitor",
      "line_number": 1,
      "parent": null,
      "docstring": "Demo of the adaptive monitoring system with simulated agent activity.\nShows the Rich UI with activity-based refresh rates in action.",
      "exports": [
        "simulate_agent_activity",
        "demo_static_display",
        "demo_live_monitoring",
        "main"
      ]
    },
    {
      "path": "scripts/demo-adaptive-monitor.py",
      "type": "function",
      "name": "simulate_agent_activity",
      "line_number": 24,
      "parent": null,
      "docstring": "Simulate realistic agent activity patterns.",
      "exports": null
    },
    {
      "path": "scripts/demo-adaptive-monitor.py",
      "type": "function",
      "name": "demo_static_display",
      "line_number": 58,
      "parent": null,
      "docstring": "Show a single snapshot of the monitoring display.",
      "exports": null
    },
    {
      "path": "scripts/demo-adaptive-monitor.py",
      "type": "function",
      "name": "demo_live_monitoring",
      "line_number": 78,
      "parent": null,
      "docstring": "Demo the live monitoring with adaptive refresh.",
      "exports": null
    },
    {
      "path": "scripts/demo-adaptive-monitor.py",
      "type": "function",
      "name": "main",
      "line_number": 119,
      "parent": null,
      "docstring": "Main demo script.",
      "exports": null
    },
    {
      "path": "scripts/one_shot_plan.py",
      "type": "module",
      "name": "one_shot_plan",
      "line_number": 1,
      "parent": null,
      "docstring": "One-shot autonomous planning pass that generates tangible artifacts in the repo.\n\n- Runs the MVP planning (next steps + release notes + DoD summary)\n- Writes outputs under docs/AUTONOMY/{next_steps,release_notes,runs}\n- Prints created file paths for easy scripting\n\nUsage:\n  poetry run python scripts/one_shot_plan.py",
      "exports": [
        "main"
      ]
    },
    {
      "path": "scripts/one_shot_plan.py",
      "type": "function",
      "name": "main",
      "line_number": 27,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/test_enhanced_agent_integration.py",
      "type": "module",
      "name": "test_enhanced_agent_integration",
      "line_number": 1,
      "parent": null,
      "docstring": "Enhanced Agent Integration Test\n\nTests the integration of intelligent memory with real agent communication.\nWorks with both simulated and real AI agent interactions.\n\nThis test validates:\n1. Enhanced agency initialization with intelligent memory\n2. Agent tool integration (enhanced memory tools)\n3. Memory intelligence across agent interactions\n4. Real vs simulated agent communication\n5. Memory persistence and context sharing",
      "exports": [
        "EnhancedAgentIntegrationTester",
        "log_test",
        "test_intelligent_memory_initialization",
        "test_enhanced_agency_creation",
        "test_agent_enhanced_tools",
        "test_memory_tool_integration",
        "test_memory_intelligence_features",
        "test_real_agent_communication",
        "test_memory_persistence_across_sessions",
        "run_all_tests"
      ]
    },
    {
      "path": "scripts/test_enhanced_agent_integration.py",
      "type": "class",
      "name": "EnhancedAgentIntegrationTester",
      "line_number": 34,
      "parent": null,
      "docstring": "Test suite for enhanced agent integration.",
      "exports": null
    },
    {
      "path": "scripts/test_enhanced_agent_integration.py",
      "type": "method",
      "name": "__init__",
      "line_number": 37,
      "parent": "EnhancedAgentIntegrationTester",
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/test_enhanced_agent_integration.py",
      "type": "method",
      "name": "log_test",
      "line_number": 42,
      "parent": "EnhancedAgentIntegrationTester",
      "docstring": "Log test result.",
      "exports": null
    },
    {
      "path": "scripts/test_enhanced_agent_integration.py",
      "type": "method",
      "name": "test_intelligent_memory_initialization",
      "line_number": 50,
      "parent": "EnhancedAgentIntegrationTester",
      "docstring": "Test that intelligent memory store initializes correctly.",
      "exports": null
    },
    {
      "path": "scripts/test_enhanced_agent_integration.py",
      "type": "method",
      "name": "test_enhanced_agency_creation",
      "line_number": 71,
      "parent": "EnhancedAgentIntegrationTester",
      "docstring": "Test enhanced agency creation with intelligent agents.",
      "exports": null
    },
    {
      "path": "scripts/test_enhanced_agent_integration.py",
      "type": "method",
      "name": "test_agent_enhanced_tools",
      "line_number": 95,
      "parent": "EnhancedAgentIntegrationTester",
      "docstring": "Test that enhanced agents have intelligent memory tools.",
      "exports": null
    },
    {
      "path": "scripts/test_enhanced_agent_integration.py",
      "type": "method",
      "name": "test_memory_tool_integration",
      "line_number": 128,
      "parent": "EnhancedAgentIntegrationTester",
      "docstring": "Test enhanced memory tools can be used directly.",
      "exports": null
    },
    {
      "path": "scripts/test_enhanced_agent_integration.py",
      "type": "method",
      "name": "test_memory_intelligence_features",
      "line_number": 167,
      "parent": "EnhancedAgentIntegrationTester",
      "docstring": "Test intelligent memory features like classification and search.",
      "exports": null
    },
    {
      "path": "scripts/test_enhanced_agent_integration.py",
      "type": "method",
      "name": "test_real_agent_communication",
      "line_number": 238,
      "parent": "EnhancedAgentIntegrationTester",
      "docstring": "Test real agent communication if API key is available.",
      "exports": null
    },
    {
      "path": "scripts/test_enhanced_agent_integration.py",
      "type": "method",
      "name": "test_memory_persistence_across_sessions",
      "line_number": 261,
      "parent": "EnhancedAgentIntegrationTester",
      "docstring": "Test that memory persists across agent interactions.",
      "exports": null
    },
    {
      "path": "scripts/test_enhanced_agent_integration.py",
      "type": "method",
      "name": "run_all_tests",
      "line_number": 291,
      "parent": "EnhancedAgentIntegrationTester",
      "docstring": "Run all integration tests.",
      "exports": null
    },
    {
      "path": "scripts/docs_gap_analysis.py",
      "type": "module",
      "name": "docs_gap_analysis",
      "line_number": 1,
      "parent": null,
      "docstring": "Documentation gap analysis for Fresh AI.\n\nAnalyzes the repository inventory to identify documentation gaps, inconsistencies,\nand improvement opportunities. Produces prioritized actionable reports.\n\nUsage:\n    python scripts/docs_gap_analysis.py [--inventory docs/_generated/inventory.json]",
      "exports": [
        "DocumentationGap",
        "GapAnalyzer",
        "main",
        "analyze_missing_module_documentation",
        "analyze_undocumented_classes",
        "analyze_broken_links",
        "analyze_missing_cross_references",
        "analyze_inconsistent_naming",
        "analyze_missing_implementation_docs",
        "generate_report",
        "run_analysis"
      ]
    },
    {
      "path": "scripts/docs_gap_analysis.py",
      "type": "class",
      "name": "DocumentationGap",
      "line_number": 23,
      "parent": null,
      "docstring": "Represents a documentation gap or issue.",
      "exports": null
    },
    {
      "path": "scripts/docs_gap_analysis.py",
      "type": "class",
      "name": "GapAnalyzer",
      "line_number": 33,
      "parent": null,
      "docstring": "Analyzes repository inventory for documentation gaps.",
      "exports": null
    },
    {
      "path": "scripts/docs_gap_analysis.py",
      "type": "function",
      "name": "main",
      "line_number": 338,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/docs_gap_analysis.py",
      "type": "method",
      "name": "__init__",
      "line_number": 36,
      "parent": "GapAnalyzer",
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/docs_gap_analysis.py",
      "type": "method",
      "name": "_get_module_category",
      "line_number": 57,
      "parent": "GapAnalyzer",
      "docstring": "Categorize modules by their directory structure.",
      "exports": null
    },
    {
      "path": "scripts/docs_gap_analysis.py",
      "type": "method",
      "name": "analyze_missing_module_documentation",
      "line_number": 65,
      "parent": "GapAnalyzer",
      "docstring": "Find modules that lack documentation.",
      "exports": null
    },
    {
      "path": "scripts/docs_gap_analysis.py",
      "type": "method",
      "name": "analyze_undocumented_classes",
      "line_number": 97,
      "parent": "GapAnalyzer",
      "docstring": "Find important classes without docstrings or documentation.",
      "exports": null
    },
    {
      "path": "scripts/docs_gap_analysis.py",
      "type": "method",
      "name": "analyze_broken_links",
      "line_number": 124,
      "parent": "GapAnalyzer",
      "docstring": "Analyze broken links from the inventory.",
      "exports": null
    },
    {
      "path": "scripts/docs_gap_analysis.py",
      "type": "method",
      "name": "analyze_missing_cross_references",
      "line_number": 139,
      "parent": "GapAnalyzer",
      "docstring": "Find opportunities for better cross-referencing.",
      "exports": null
    },
    {
      "path": "scripts/docs_gap_analysis.py",
      "type": "method",
      "name": "analyze_inconsistent_naming",
      "line_number": 170,
      "parent": "GapAnalyzer",
      "docstring": "Find inconsistent feature naming across code and docs.",
      "exports": null
    },
    {
      "path": "scripts/docs_gap_analysis.py",
      "type": "method",
      "name": "analyze_missing_implementation_docs",
      "line_number": 210,
      "parent": "GapAnalyzer",
      "docstring": "Find code components that need implementation documentation.",
      "exports": null
    },
    {
      "path": "scripts/docs_gap_analysis.py",
      "type": "method",
      "name": "generate_report",
      "line_number": 233,
      "parent": "GapAnalyzer",
      "docstring": "Generate a comprehensive gap report.",
      "exports": null
    },
    {
      "path": "scripts/docs_gap_analysis.py",
      "type": "method",
      "name": "run_analysis",
      "line_number": 323,
      "parent": "GapAnalyzer",
      "docstring": "Run the complete gap analysis.",
      "exports": null
    },
    {
      "path": "scripts/demo-agent-activity.py",
      "type": "module",
      "name": "demo-agent-activity",
      "line_number": 1,
      "parent": null,
      "docstring": "Agent Activity Simulation Demo\n\nSimulates realistic agent interactions to validate the adaptive monitoring system.\nThis works without requiring OPENAI_API_KEY by simulating agent behaviors.",
      "exports": [
        "AgentActivitySimulator",
        "main",
        "simulate_agent_thinking",
        "simulate_memory_operations",
        "simulate_agent_flow",
        "run_development_cycle_demo",
        "show_activity_summary"
      ]
    },
    {
      "path": "scripts/demo-agent-activity.py",
      "type": "class",
      "name": "AgentActivitySimulator",
      "line_number": 27,
      "parent": null,
      "docstring": "Simulates realistic agent activity patterns for monitoring validation.",
      "exports": null
    },
    {
      "path": "scripts/demo-agent-activity.py",
      "type": "function",
      "name": "main",
      "line_number": 151,
      "parent": null,
      "docstring": "Run the agent activity simulation demo.",
      "exports": null
    },
    {
      "path": "scripts/demo-agent-activity.py",
      "type": "method",
      "name": "__init__",
      "line_number": 30,
      "parent": "AgentActivitySimulator",
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/demo-agent-activity.py",
      "type": "method",
      "name": "simulate_agent_thinking",
      "line_number": 35,
      "parent": "AgentActivitySimulator",
      "docstring": "Simulate an agent thinking/processing.",
      "exports": null
    },
    {
      "path": "scripts/demo-agent-activity.py",
      "type": "method",
      "name": "simulate_memory_operations",
      "line_number": 49,
      "parent": "AgentActivitySimulator",
      "docstring": "Simulate memory read/write operations.",
      "exports": null
    },
    {
      "path": "scripts/demo-agent-activity.py",
      "type": "method",
      "name": "simulate_agent_flow",
      "line_number": 79,
      "parent": "AgentActivitySimulator",
      "docstring": "Simulate work flowing from one agent to another.",
      "exports": null
    },
    {
      "path": "scripts/demo-agent-activity.py",
      "type": "method",
      "name": "run_development_cycle_demo",
      "line_number": 99,
      "parent": "AgentActivitySimulator",
      "docstring": "Simulate a realistic development cycle through the agent chain.",
      "exports": null
    },
    {
      "path": "scripts/demo-agent-activity.py",
      "type": "method",
      "name": "show_activity_summary",
      "line_number": 131,
      "parent": "AgentActivitySimulator",
      "docstring": "Display current activity levels and recent events.",
      "exports": null
    },
    {
      "path": "scripts/agent_heartbeat.py",
      "type": "module",
      "name": "agent_heartbeat",
      "line_number": 1,
      "parent": null,
      "docstring": "Agent Heartbeat\n\nEmits low-rate monitoring events periodically so the adaptive monitor reflects\nthat the system is alive, even when no long-running agents are executing.\n\n- Cross-process visible via persistent event bus when MONITOR_PERSIST_EVENTS=1\n- Safe and non-interactive; default interval 30s\n\nUsage:\n  MONITOR_PERSIST_EVENTS=1 poetry run python scripts/agent_heartbeat.py --agent Father --interval 20",
      "exports": [
        "main"
      ]
    },
    {
      "path": "scripts/agent_heartbeat.py",
      "type": "function",
      "name": "main",
      "line_number": 21,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/validate-monitoring.py",
      "type": "module",
      "name": "validate-monitoring",
      "line_number": 1,
      "parent": null,
      "docstring": "Monitoring Validation Test\n\nValidates the adaptive monitoring system by running agent simulations\nand monitoring simultaneously to demonstrate all activity levels.",
      "exports": [
        "MonitoringValidator",
        "main",
        "clear_activity",
        "test_idle_level",
        "test_low_level",
        "test_medium_level",
        "test_high_level",
        "test_ui_rendering",
        "test_monitoring_integration",
        "run_stress_test",
        "run_all_tests"
      ]
    },
    {
      "path": "scripts/validate-monitoring.py",
      "type": "class",
      "name": "MonitoringValidator",
      "line_number": 25,
      "parent": null,
      "docstring": "Validates the adaptive monitoring system through controlled testing.",
      "exports": null
    },
    {
      "path": "scripts/validate-monitoring.py",
      "type": "function",
      "name": "main",
      "line_number": 241,
      "parent": null,
      "docstring": "Run the monitoring validation suite.",
      "exports": null
    },
    {
      "path": "scripts/validate-monitoring.py",
      "type": "method",
      "name": "__init__",
      "line_number": 28,
      "parent": "MonitoringValidator",
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/validate-monitoring.py",
      "type": "method",
      "name": "clear_activity",
      "line_number": 34,
      "parent": "MonitoringValidator",
      "docstring": "Clear existing activity to start fresh.",
      "exports": null
    },
    {
      "path": "scripts/validate-monitoring.py",
      "type": "method",
      "name": "test_idle_level",
      "line_number": 39,
      "parent": "MonitoringValidator",
      "docstring": "Test IDLE activity level (no events).",
      "exports": null
    },
    {
      "path": "scripts/validate-monitoring.py",
      "type": "method",
      "name": "test_low_level",
      "line_number": 51,
      "parent": "MonitoringValidator",
      "docstring": "Test LOW activity level (single agent, few operations).",
      "exports": null
    },
    {
      "path": "scripts/validate-monitoring.py",
      "type": "method",
      "name": "test_medium_level",
      "line_number": 67,
      "parent": "MonitoringValidator",
      "docstring": "Test MEDIUM activity level (multiple agents).",
      "exports": null
    },
    {
      "path": "scripts/validate-monitoring.py",
      "type": "method",
      "name": "test_high_level",
      "line_number": 84,
      "parent": "MonitoringValidator",
      "docstring": "Test HIGH activity level (active flows).",
      "exports": null
    },
    {
      "path": "scripts/validate-monitoring.py",
      "type": "method",
      "name": "test_ui_rendering",
      "line_number": 101,
      "parent": "MonitoringValidator",
      "docstring": "Test UI components render without errors.",
      "exports": null
    },
    {
      "path": "scripts/validate-monitoring.py",
      "type": "method",
      "name": "test_monitoring_integration",
      "line_number": 129,
      "parent": "MonitoringValidator",
      "docstring": "Test full monitoring integration.",
      "exports": null
    },
    {
      "path": "scripts/validate-monitoring.py",
      "type": "method",
      "name": "run_stress_test",
      "line_number": 156,
      "parent": "MonitoringValidator",
      "docstring": "Run a stress test with continuous activity.",
      "exports": null
    },
    {
      "path": "scripts/validate-monitoring.py",
      "type": "method",
      "name": "run_all_tests",
      "line_number": 199,
      "parent": "MonitoringValidator",
      "docstring": "Run complete validation suite.",
      "exports": null
    },
    {
      "path": "scripts/apply_agency_cost_tracking.py",
      "type": "module",
      "name": "apply_agency_cost_tracking",
      "line_number": 1,
      "parent": null,
      "docstring": "Apply Cost Tracking to Agency Swarm OpenAI Usage\n\nThis script patches Agency Swarm to use cost-tracked OpenAI clients,\nproviding immediate visibility into agent conversation costs.\n\nUsage:\n    python scripts/apply_agency_cost_tracking.py",
      "exports": [
        "patch_agency_swarm_openai",
        "test_patch",
        "main"
      ]
    },
    {
      "path": "scripts/apply_agency_cost_tracking.py",
      "type": "function",
      "name": "patch_agency_swarm_openai",
      "line_number": 19,
      "parent": null,
      "docstring": "Patch Agency Swarm to use cost-tracked OpenAI clients.\n\nAgency Swarm uses OpenAI internally, so we need to patch it\nat the import level to intercept all API calls.",
      "exports": null
    },
    {
      "path": "scripts/apply_agency_cost_tracking.py",
      "type": "function",
      "name": "test_patch",
      "line_number": 129,
      "parent": null,
      "docstring": "Test that the patch works correctly.",
      "exports": null
    },
    {
      "path": "scripts/apply_agency_cost_tracking.py",
      "type": "function",
      "name": "main",
      "line_number": 179,
      "parent": null,
      "docstring": "Apply cost tracking to Agency Swarm.",
      "exports": null
    },
    {
      "path": "scripts/apply_firestore_cost_tracking.py",
      "type": "module",
      "name": "apply_firestore_cost_tracking",
      "line_number": 1,
      "parent": null,
      "docstring": "Apply Cost Tracking to Existing Firestore Memory Systems\n\nThis script applies cost monitoring to all existing Firestore implementations\nin the Fresh AI system, providing immediate cost visibility for memory operations.\n\nUsage:\n    python scripts/apply_firestore_cost_tracking.py",
      "exports": [
        "patch_firestore_memory",
        "patch_enhanced_firestore",
        "patch_firestore_store",
        "main"
      ]
    },
    {
      "path": "scripts/apply_firestore_cost_tracking.py",
      "type": "function",
      "name": "patch_firestore_memory",
      "line_number": 19,
      "parent": null,
      "docstring": "Patch the basic Firestore memory store with cost tracking.",
      "exports": null
    },
    {
      "path": "scripts/apply_firestore_cost_tracking.py",
      "type": "function",
      "name": "patch_enhanced_firestore",
      "line_number": 73,
      "parent": null,
      "docstring": "Patch the enhanced Firestore memory store with cost tracking.",
      "exports": null
    },
    {
      "path": "scripts/apply_firestore_cost_tracking.py",
      "type": "function",
      "name": "patch_firestore_store",
      "line_number": 119,
      "parent": null,
      "docstring": "Patch the production Firestore memory store with cost tracking.",
      "exports": null
    },
    {
      "path": "scripts/apply_firestore_cost_tracking.py",
      "type": "function",
      "name": "main",
      "line_number": 164,
      "parent": null,
      "docstring": "Apply cost tracking to all Firestore memory systems.",
      "exports": null
    },
    {
      "path": "scripts/demo-persistent-memory.py",
      "type": "module",
      "name": "demo-persistent-memory",
      "line_number": 1,
      "parent": null,
      "docstring": "Persistent Memory Demo\n\nDemonstrates the persistent memory capabilities of the agent system,\nshowing how agents can learn and remember across sessions.\n\nThis demo shows:\n- Intelligent memory classification and storage\n- Persistent storage with Firestore (if available) \n- Cross-session memory search and analytics\n- Learning pattern analysis\n- Memory consolidation and optimization\n\nUsage:\n    python scripts/demo-persistent-memory.py [--use-firestore] [--project-id PROJECT]",
      "exports": [
        "print_section",
        "simulate_agent_activity",
        "demonstrate_search_capabilities",
        "demonstrate_analytics",
        "demonstrate_consolidation",
        "demonstrate_sync",
        "main"
      ]
    },
    {
      "path": "scripts/demo-persistent-memory.py",
      "type": "function",
      "name": "print_section",
      "line_number": 39,
      "parent": null,
      "docstring": "Print a formatted section header.",
      "exports": null
    },
    {
      "path": "scripts/demo-persistent-memory.py",
      "type": "function",
      "name": "simulate_agent_activity",
      "line_number": 46,
      "parent": null,
      "docstring": "Simulate diverse agent activity to populate memory.",
      "exports": null
    },
    {
      "path": "scripts/demo-persistent-memory.py",
      "type": "function",
      "name": "demonstrate_search_capabilities",
      "line_number": 104,
      "parent": null,
      "docstring": "Demonstrate various search and query capabilities.",
      "exports": null
    },
    {
      "path": "scripts/demo-persistent-memory.py",
      "type": "function",
      "name": "demonstrate_analytics",
      "line_number": 124,
      "parent": null,
      "docstring": "Demonstrate memory analytics and learning patterns.",
      "exports": null
    },
    {
      "path": "scripts/demo-persistent-memory.py",
      "type": "function",
      "name": "demonstrate_consolidation",
      "line_number": 141,
      "parent": null,
      "docstring": "Demonstrate memory consolidation (dry run only).",
      "exports": null
    },
    {
      "path": "scripts/demo-persistent-memory.py",
      "type": "function",
      "name": "demonstrate_sync",
      "line_number": 151,
      "parent": null,
      "docstring": "Demonstrate memory synchronization if Firestore is available.",
      "exports": null
    },
    {
      "path": "scripts/demo-persistent-memory.py",
      "type": "function",
      "name": "main",
      "line_number": 165,
      "parent": null,
      "docstring": "Run the persistent memory demonstration.",
      "exports": null
    },
    {
      "path": "scripts/setup_cost_monitoring.py",
      "type": "module",
      "name": "setup_cost_monitoring",
      "line_number": 1,
      "parent": null,
      "docstring": "Cost Monitoring Setup Script\n\nSets up the cost monitoring system for the Fresh AI project with:\n- Initial configuration\n- Sample budget alerts\n- Example usage tracking\n- Dashboard demo\n\nUsage:\n    python scripts/setup_cost_monitoring.py\n    python scripts/setup_cost_monitoring.py --demo\n    python scripts/setup_cost_monitoring.py --dashboard",
      "exports": [
        "setup_cost_monitoring",
        "run_demo",
        "show_integration_examples",
        "main"
      ]
    },
    {
      "path": "scripts/setup_cost_monitoring.py",
      "type": "function",
      "name": "setup_cost_monitoring",
      "line_number": 32,
      "parent": null,
      "docstring": "Set up the cost monitoring system.",
      "exports": null
    },
    {
      "path": "scripts/setup_cost_monitoring.py",
      "type": "function",
      "name": "run_demo",
      "line_number": 85,
      "parent": null,
      "docstring": "Run a demo with sample data.",
      "exports": null
    },
    {
      "path": "scripts/setup_cost_monitoring.py",
      "type": "function",
      "name": "show_integration_examples",
      "line_number": 133,
      "parent": null,
      "docstring": "Show integration examples.",
      "exports": null
    },
    {
      "path": "scripts/setup_cost_monitoring.py",
      "type": "function",
      "name": "main",
      "line_number": 203,
      "parent": null,
      "docstring": "Main setup function.",
      "exports": null
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "module",
      "name": "generate_capabilities",
      "line_number": 1,
      "parent": null,
      "docstring": "Generate Capabilities vs Claims feature matrix from inventory data.\n\nThis script creates docs/CAPABILITIES.md automatically from inventory.json,\nlisting features, implementation files, test status, and documentation links.\n\nUsage:\n    python scripts/generate_capabilities.py [--inventory docs/_generated/inventory.json]",
      "exports": [
        "Feature",
        "CapabilitiesGenerator",
        "main",
        "identify_features",
        "generate_capabilities_matrix",
        "run_generation"
      ]
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "class",
      "name": "Feature",
      "line_number": 23,
      "parent": null,
      "docstring": "Represents a system feature with implementation details.",
      "exports": null
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "class",
      "name": "CapabilitiesGenerator",
      "line_number": 35,
      "parent": null,
      "docstring": "Generates capabilities matrix from repository inventory.",
      "exports": null
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "function",
      "name": "main",
      "line_number": 488,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "method",
      "name": "__init__",
      "line_number": 38,
      "parent": "CapabilitiesGenerator",
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "method",
      "name": "identify_features",
      "line_number": 46,
      "parent": "CapabilitiesGenerator",
      "docstring": "Identify features from code and documentation.",
      "exports": null
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "method",
      "name": "_extract_features_for_category",
      "line_number": 101,
      "parent": "CapabilitiesGenerator",
      "docstring": "Extract features for a specific category.",
      "exports": null
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "method",
      "name": "_group_files_into_features",
      "line_number": 147,
      "parent": "CapabilitiesGenerator",
      "docstring": "Group related files into logical features.",
      "exports": null
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "method",
      "name": "_find_test_files",
      "line_number": 231,
      "parent": "CapabilitiesGenerator",
      "docstring": "Find test files corresponding to implementation files.",
      "exports": null
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "method",
      "name": "_find_documentation_links",
      "line_number": 245,
      "parent": "CapabilitiesGenerator",
      "docstring": "Find documentation links for a feature.",
      "exports": null
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "method",
      "name": "_determine_status",
      "line_number": 269,
      "parent": "CapabilitiesGenerator",
      "docstring": "Determine implementation status based on files and tests.",
      "exports": null
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "method",
      "name": "_generate_notes",
      "line_number": 282,
      "parent": "CapabilitiesGenerator",
      "docstring": "Generate notes about the feature status.",
      "exports": null
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "method",
      "name": "generate_capabilities_matrix",
      "line_number": 297,
      "parent": "CapabilitiesGenerator",
      "docstring": "Generate the capabilities matrix document.",
      "exports": null
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "method",
      "name": "_get_timestamp",
      "line_number": 468,
      "parent": "CapabilitiesGenerator",
      "docstring": "Get current timestamp.",
      "exports": null
    },
    {
      "path": "scripts/generate_capabilities.py",
      "type": "method",
      "name": "run_generation",
      "line_number": 473,
      "parent": "CapabilitiesGenerator",
      "docstring": "Run the complete capabilities matrix generation.",
      "exports": null
    },
    {
      "path": "scripts/cost_monitoring_first_apps.py",
      "type": "module",
      "name": "cost_monitoring_first_apps",
      "line_number": 1,
      "parent": null,
      "docstring": "Cost Monitoring First Applications\n\nThis script applies cost monitoring to the most obvious and impactful\nfirst applications in the Fresh AI system, providing immediate ROI.\n\nApplications applied:\n1. Firestore Memory Systems - All memory operations tracked\n2. Agency Swarm OpenAI Usage - All agent conversations tracked\n3. Budget Setup - Default budgets for immediate protection\n4. Dashboard Demo - Show real-time cost visibility\n\nUsage:\n    python scripts/cost_monitoring_first_apps.py\n    python scripts/cost_monitoring_first_apps.py --demo",
      "exports": [
        "show_optimization_opportunities",
        "check_budget_status"
      ]
    },
    {
      "path": "scripts/cost_monitoring_first_apps.py",
      "type": "function",
      "name": "show_optimization_opportunities",
      "line_number": 129,
      "parent": null,
      "docstring": "Show immediate optimization opportunities.",
      "exports": null
    },
    {
      "path": "scripts/cost_monitoring_first_apps.py",
      "type": "function",
      "name": "check_budget_status",
      "line_number": 160,
      "parent": null,
      "docstring": "Check current budget status and alerts.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "module",
      "name": "fix_crossrefs",
      "line_number": 1,
      "parent": null,
      "docstring": "Cross-reference fixing and validation for Fresh AI documentation.\n\nThis script scans all markdown files, verifies targets exist, adds back-links \nwhere missing, and ensures bidirectional cross-reference integrity.\n\nUsage:\n    python scripts/fix_crossrefs.py [--check] [--fix] [--add-backlinks]",
      "exports": [
        "Link",
        "DocumentInfo",
        "CrossReferenceValidator",
        "main",
        "scan_documentation",
        "validate_links",
        "find_missing_backlinks",
        "fix_broken_links",
        "add_missing_backlinks",
        "generate_report",
        "run_validation",
        "add_to_section"
      ]
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "class",
      "name": "Link",
      "line_number": 23,
      "parent": null,
      "docstring": "Represents a link in documentation.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "class",
      "name": "DocumentInfo",
      "line_number": 34,
      "parent": null,
      "docstring": "Information about a documentation file.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "class",
      "name": "CrossReferenceValidator",
      "line_number": 43,
      "parent": null,
      "docstring": "Validates and fixes cross-references in documentation.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "function",
      "name": "main",
      "line_number": 465,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "__init__",
      "line_number": 46,
      "parent": "CrossReferenceValidator",
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "scan_documentation",
      "line_number": 60,
      "parent": "CrossReferenceValidator",
      "docstring": "Scan all markdown files and build document index.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "_is_excluded_path",
      "line_number": 78,
      "parent": "CrossReferenceValidator",
      "docstring": "Check if path should be excluded from scanning.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "_scan_document",
      "line_number": 87,
      "parent": "CrossReferenceValidator",
      "docstring": "Scan a single markdown document.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "_extract_title",
      "line_number": 110,
      "parent": "CrossReferenceValidator",
      "docstring": "Extract document title from first H1.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "_extract_anchors",
      "line_number": 120,
      "parent": "CrossReferenceValidator",
      "docstring": "Extract header anchors from content.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "_text_to_anchor",
      "line_number": 130,
      "parent": "CrossReferenceValidator",
      "docstring": "Convert header text to GitHub-style anchor.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "_extract_links",
      "line_number": 142,
      "parent": "CrossReferenceValidator",
      "docstring": "Extract internal links from markdown content.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "_extract_cross_references",
      "line_number": 186,
      "parent": "CrossReferenceValidator",
      "docstring": "Extract explicit cross-references from content.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "validate_links",
      "line_number": 200,
      "parent": "CrossReferenceValidator",
      "docstring": "Validate all links and identify broken ones.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "_validate_link",
      "line_number": 216,
      "parent": "CrossReferenceValidator",
      "docstring": "Validate a single link.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "find_missing_backlinks",
      "line_number": 232,
      "parent": "CrossReferenceValidator",
      "docstring": "Find missing bidirectional references.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "fix_broken_links",
      "line_number": 254,
      "parent": "CrossReferenceValidator",
      "docstring": "Attempt to fix broken links by finding similar targets.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "_find_similar_targets",
      "line_number": 275,
      "parent": "CrossReferenceValidator",
      "docstring": "Find similar targets for a broken link.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "add_missing_backlinks",
      "line_number": 292,
      "parent": "CrossReferenceValidator",
      "docstring": "Add missing bidirectional references.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "_add_backlink_to_file",
      "line_number": 316,
      "parent": "CrossReferenceValidator",
      "docstring": "Add a backlink to a documentation file.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "generate_report",
      "line_number": 345,
      "parent": "CrossReferenceValidator",
      "docstring": "Generate a cross-reference validation report.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "_get_timestamp",
      "line_number": 410,
      "parent": "CrossReferenceValidator",
      "docstring": "Get current timestamp.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "method",
      "name": "run_validation",
      "line_number": 415,
      "parent": "CrossReferenceValidator",
      "docstring": "Run the complete cross-reference validation process.",
      "exports": null
    },
    {
      "path": "scripts/fix_crossrefs.py",
      "type": "function",
      "name": "add_to_section",
      "line_number": 331,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/check_docs_alignment.py",
      "type": "module",
      "name": "check_docs_alignment",
      "line_number": 1,
      "parent": null,
      "docstring": "Documentation alignment checker for Fresh.\n\nChecks:\n- Existence of core docs and code files referenced from README\n- Markdown links in docs/INDEX.md resolve to existing files\n- Warns for missing optional docs; can fail in --strict mode",
      "exports": [
        "check_exists",
        "extract_links",
        "resolve_link",
        "check_index_links",
        "main"
      ]
    },
    {
      "path": "scripts/check_docs_alignment.py",
      "type": "function",
      "name": "check_exists",
      "line_number": 45,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/check_docs_alignment.py",
      "type": "function",
      "name": "extract_links",
      "line_number": 53,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/check_docs_alignment.py",
      "type": "function",
      "name": "resolve_link",
      "line_number": 58,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/check_docs_alignment.py",
      "type": "function",
      "name": "check_index_links",
      "line_number": 70,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/check_docs_alignment.py",
      "type": "function",
      "name": "main",
      "line_number": 87,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/test_production_memory.py",
      "type": "module",
      "name": "test_production_memory",
      "line_number": 1,
      "parent": null,
      "docstring": "Production Memory Backend Test\n\nComprehensive test suite for production memory features including:\n- Enhanced Firestore memory store\n- Backup and restore operations\n- Production analytics and monitoring\n- Synchronization and optimization\n- Error handling and reliability\n\nThis test validates production-readiness of the memory system.",
      "exports": [
        "ProductionMemoryTester",
        "setup_test_environment",
        "cleanup_test_environment",
        "log_test",
        "test_intelligent_memory_fallback",
        "test_enhanced_firestore_without_credentials",
        "test_production_tools_with_intelligent_store",
        "test_firestore_connection_tool",
        "test_backup_restore_simulation",
        "test_memory_analytics_features",
        "test_memory_optimization_logic",
        "run_all_tests"
      ]
    },
    {
      "path": "scripts/test_production_memory.py",
      "type": "class",
      "name": "ProductionMemoryTester",
      "line_number": 38,
      "parent": null,
      "docstring": "Test suite for production memory features.",
      "exports": null
    },
    {
      "path": "scripts/test_production_memory.py",
      "type": "method",
      "name": "__init__",
      "line_number": 41,
      "parent": "ProductionMemoryTester",
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/test_production_memory.py",
      "type": "method",
      "name": "setup_test_environment",
      "line_number": 50,
      "parent": "ProductionMemoryTester",
      "docstring": "Setup temporary directory for testing.",
      "exports": null
    },
    {
      "path": "scripts/test_production_memory.py",
      "type": "method",
      "name": "cleanup_test_environment",
      "line_number": 55,
      "parent": "ProductionMemoryTester",
      "docstring": "Clean up temporary test files.",
      "exports": null
    },
    {
      "path": "scripts/test_production_memory.py",
      "type": "method",
      "name": "log_test",
      "line_number": 61,
      "parent": "ProductionMemoryTester",
      "docstring": "Log test result.",
      "exports": null
    },
    {
      "path": "scripts/test_production_memory.py",
      "type": "method",
      "name": "test_intelligent_memory_fallback",
      "line_number": 69,
      "parent": "ProductionMemoryTester",
      "docstring": "Test that intelligent memory works when Firestore is not available.",
      "exports": null
    },
    {
      "path": "scripts/test_production_memory.py",
      "type": "method",
      "name": "test_enhanced_firestore_without_credentials",
      "line_number": 99,
      "parent": "ProductionMemoryTester",
      "docstring": "Test Enhanced Firestore behavior without credentials.",
      "exports": null
    },
    {
      "path": "scripts/test_production_memory.py",
      "type": "method",
      "name": "test_production_tools_with_intelligent_store",
      "line_number": 139,
      "parent": "ProductionMemoryTester",
      "docstring": "Test production tools with intelligent memory store (should handle gracefully).",
      "exports": null
    },
    {
      "path": "scripts/test_production_memory.py",
      "type": "method",
      "name": "test_firestore_connection_tool",
      "line_number": 180,
      "parent": "ProductionMemoryTester",
      "docstring": "Test Firestore connection validation tool.",
      "exports": null
    },
    {
      "path": "scripts/test_production_memory.py",
      "type": "method",
      "name": "test_backup_restore_simulation",
      "line_number": 206,
      "parent": "ProductionMemoryTester",
      "docstring": "Test backup/restore workflow simulation.",
      "exports": null
    },
    {
      "path": "scripts/test_production_memory.py",
      "type": "method",
      "name": "test_memory_analytics_features",
      "line_number": 285,
      "parent": "ProductionMemoryTester",
      "docstring": "Test enhanced memory analytics features.",
      "exports": null
    },
    {
      "path": "scripts/test_production_memory.py",
      "type": "method",
      "name": "test_memory_optimization_logic",
      "line_number": 346,
      "parent": "ProductionMemoryTester",
      "docstring": "Test memory optimization logic (without Firestore).",
      "exports": null
    },
    {
      "path": "scripts/test_production_memory.py",
      "type": "method",
      "name": "run_all_tests",
      "line_number": 390,
      "parent": "ProductionMemoryTester",
      "docstring": "Run all production memory tests.",
      "exports": null
    },
    {
      "path": "scripts/watch-agents-adaptive.py",
      "type": "module",
      "name": "watch-agents-adaptive",
      "line_number": 1,
      "parent": null,
      "docstring": "Adaptive agent monitoring with rich UI and dynamic refresh intervals.\nReplaces the old static monitoring with activity-based refresh rates.",
      "exports": [
        "AdaptiveWatcher",
        "main",
        "run"
      ]
    },
    {
      "path": "scripts/watch-agents-adaptive.py",
      "type": "class",
      "name": "AdaptiveWatcher",
      "line_number": 29,
      "parent": null,
      "docstring": "Main class for adaptive agent monitoring.",
      "exports": null
    },
    {
      "path": "scripts/watch-agents-adaptive.py",
      "type": "function",
      "name": "main",
      "line_number": 84,
      "parent": null,
      "docstring": "CLI entry point.",
      "exports": null
    },
    {
      "path": "scripts/watch-agents-adaptive.py",
      "type": "method",
      "name": "__init__",
      "line_number": 32,
      "parent": "AdaptiveWatcher",
      "docstring": null,
      "exports": null
    },
    {
      "path": "scripts/watch-agents-adaptive.py",
      "type": "method",
      "name": "_signal_handler",
      "line_number": 39,
      "parent": "AdaptiveWatcher",
      "docstring": "Handle Ctrl+C gracefully.",
      "exports": null
    },
    {
      "path": "scripts/watch-agents-adaptive.py",
      "type": "method",
      "name": "_setup_signal_handler",
      "line_number": 44,
      "parent": "AdaptiveWatcher",
      "docstring": "Context manager for signal handling.",
      "exports": null
    },
    {
      "path": "scripts/watch-agents-adaptive.py",
      "type": "method",
      "name": "run",
      "line_number": 52,
      "parent": "AdaptiveWatcher",
      "docstring": "Main monitoring loop with adaptive refresh.",
      "exports": null
    },
    {
      "path": "ai/interface/telegram_bot.py",
      "type": "module",
      "name": "telegram_bot",
      "line_number": 1,
      "parent": null,
      "docstring": "Telegram Bot Interface for Fresh Agent System.\n\nThis module provides a foolproof Telegram interface where users can submit\ndevelopment requests that are intelligently routed to the appropriate agents\nthrough the Father agent's decision-making process.\n\nCross-references:\n    - Agent Development: docs/AGENT_DEVELOPMENT.md for agent architecture\n    - Interface Documentation: docs/INTERFACES.md for CLI alternatives  \n    - Father Agent: ai/agents/Father.py for delegation logic\n    - Memory System: ai/memory/README.md for context persistence\n\nRelated:\n    - ai.agents.Father: Strategic planning and agent delegation\n    - ai.tools.memory_tools: Conversation context and history\n    - ai.interface.deploy_agents: Agent spawning and configuration",
      "exports": [
        "FatherDecisionMaker",
        "FreshTelegramBot",
        "load_env_file",
        "is_authorized"
      ]
    },
    {
      "path": "ai/interface/telegram_bot.py",
      "type": "class",
      "name": "FatherDecisionMaker",
      "line_number": 51,
      "parent": null,
      "docstring": "Interfaces with Father agent for intelligent task delegation.",
      "exports": null
    },
    {
      "path": "ai/interface/telegram_bot.py",
      "type": "class",
      "name": "FreshTelegramBot",
      "line_number": 264,
      "parent": null,
      "docstring": "Main Telegram bot class for Fresh agent system.",
      "exports": null
    },
    {
      "path": "ai/interface/telegram_bot.py",
      "type": "function",
      "name": "load_env_file",
      "line_number": 570,
      "parent": null,
      "docstring": "Load environment variables from .env file.",
      "exports": null
    },
    {
      "path": "ai/interface/telegram_bot.py",
      "type": "method",
      "name": "__init__",
      "line_number": 54,
      "parent": "FatherDecisionMaker",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/interface/telegram_bot.py",
      "type": "method",
      "name": "__init__",
      "line_number": 267,
      "parent": "FreshTelegramBot",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/interface/telegram_bot.py",
      "type": "method",
      "name": "is_authorized",
      "line_number": 273,
      "parent": "FreshTelegramBot",
      "docstring": "Check if user is authorized to use the bot.",
      "exports": null
    },
    {
      "path": "ai/interface/deploy_agents.py",
      "type": "module",
      "name": "deploy_agents",
      "line_number": 1,
      "parent": null,
      "docstring": "Agent deployment configuration interface with YAML-based management.\n\nThis module provides a comprehensive interface for configuring and deploying\nagent swarms. It supports YAML-based configuration files that define agent\nroles, tools, flows, and deployment context.\n\nCross-references:\n    - Deployment Guide: docs/DEPLOYMENT.md for usage patterns and examples\n    - Agent Development: docs/AGENT_DEVELOPMENT.md#creating-new-agents\n    - CLI Interface: scripts/deploy.sh for command-line usage\n    - Tool Reference: docs/TOOLS.md#interface-tools\n    \nRelated:\n    - ai.agency: Core agency swarm implementation\n    - ai.agents: Individual agent implementations\n    - ai.memory: Memory system integration for deployment context",
      "exports": [
        "AgentConfig",
        "SwarmConfig",
        "AgentDeploymentInterface",
        "main",
        "create_default_config",
        "save_config",
        "load_config",
        "list_configs",
        "deploy_swarm"
      ]
    },
    {
      "path": "ai/interface/deploy_agents.py",
      "type": "class",
      "name": "AgentConfig",
      "line_number": 29,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/interface/deploy_agents.py",
      "type": "class",
      "name": "SwarmConfig",
      "line_number": 43,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/interface/deploy_agents.py",
      "type": "class",
      "name": "AgentDeploymentInterface",
      "line_number": 51,
      "parent": null,
      "docstring": "Interface for configuring and deploying agent swarms.",
      "exports": null
    },
    {
      "path": "ai/interface/deploy_agents.py",
      "type": "function",
      "name": "main",
      "line_number": 172,
      "parent": null,
      "docstring": "CLI interface for agent deployment.",
      "exports": null
    },
    {
      "path": "ai/interface/deploy_agents.py",
      "type": "method",
      "name": "__post_init__",
      "line_number": 37,
      "parent": "AgentConfig",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/interface/deploy_agents.py",
      "type": "method",
      "name": "__init__",
      "line_number": 54,
      "parent": "AgentDeploymentInterface",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/interface/deploy_agents.py",
      "type": "method",
      "name": "create_default_config",
      "line_number": 58,
      "parent": "AgentDeploymentInterface",
      "docstring": "Create default swarm configuration matching current hardcoded setup.",
      "exports": null
    },
    {
      "path": "ai/interface/deploy_agents.py",
      "type": "method",
      "name": "save_config",
      "line_number": 109,
      "parent": "AgentDeploymentInterface",
      "docstring": "Save swarm configuration to YAML file.",
      "exports": null
    },
    {
      "path": "ai/interface/deploy_agents.py",
      "type": "method",
      "name": "load_config",
      "line_number": 120,
      "parent": "AgentDeploymentInterface",
      "docstring": "Load swarm configuration from YAML file.",
      "exports": null
    },
    {
      "path": "ai/interface/deploy_agents.py",
      "type": "method",
      "name": "list_configs",
      "line_number": 135,
      "parent": "AgentDeploymentInterface",
      "docstring": "List available configuration files.",
      "exports": null
    },
    {
      "path": "ai/interface/deploy_agents.py",
      "type": "method",
      "name": "deploy_swarm",
      "line_number": 139,
      "parent": "AgentDeploymentInterface",
      "docstring": "Deploy agents according to configuration.",
      "exports": null
    },
    {
      "path": "ai/interface/ask_implement.py",
      "type": "module",
      "name": "ask_implement",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "ask_and_implement"
      ]
    },
    {
      "path": "ai/interface/ask_implement.py",
      "type": "function",
      "name": "_run",
      "line_number": 14,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/interface/ask_implement.py",
      "type": "function",
      "name": "ask_and_implement",
      "line_number": 22,
      "parent": null,
      "docstring": "High-level interface: user describes what they want, agents plan and implement.\n\nCreates a feature branch to avoid conflicts with parallel work.\nReturns a summary with branch name, plan, and next steps.",
      "exports": null
    },
    {
      "path": "ai/interface/agent_spawner.py",
      "type": "module",
      "name": "agent_spawner",
      "line_number": 1,
      "parent": null,
      "docstring": "Dynamic Agent Spawning and Execution System.\n\nThis module implements the intelligent agent spawning system that Father uses\nto dynamically create, configure, and execute specialized agents based on task analysis.\nIt supports real-time agent creation, execution monitoring, and coordination.\n\nCross-references:\n    - Father Agent: ai/agents/Father.py for delegation decisions\n    - Execution Monitor: ai/execution/monitor.py for real-time execution\n    - Status Coordinator: ai/coordination/status.py for real-time updates\n    - GitHub Integration: ai/integration/github.py for PR creation\n    - Memory System: ai/memory/README.md for context sharing\n\nRelated:\n    - ai.agency: Core agency swarm framework integration\n    - ai.tools: Available tools for agent configuration\n    - ai.interface.telegram_bot: User interface and notifications",
      "exports": [
        "SpawnedAgent",
        "SpawnRequest",
        "AgentSpawner",
        "get_agent_spawner",
        "get_spawn_history"
      ]
    },
    {
      "path": "ai/interface/agent_spawner.py",
      "type": "class",
      "name": "SpawnedAgent",
      "line_number": 48,
      "parent": null,
      "docstring": "Represents a dynamically spawned agent with its configuration and state.",
      "exports": null
    },
    {
      "path": "ai/interface/agent_spawner.py",
      "type": "class",
      "name": "SpawnRequest",
      "line_number": 62,
      "parent": null,
      "docstring": "Request for spawning new agents based on task analysis.",
      "exports": null
    },
    {
      "path": "ai/interface/agent_spawner.py",
      "type": "class",
      "name": "AgentSpawner",
      "line_number": 73,
      "parent": null,
      "docstring": "Manages dynamic agent spawning, execution, and lifecycle.",
      "exports": null
    },
    {
      "path": "ai/interface/agent_spawner.py",
      "type": "function",
      "name": "get_agent_spawner",
      "line_number": 731,
      "parent": null,
      "docstring": "Get the global agent spawner instance.",
      "exports": null
    },
    {
      "path": "ai/interface/agent_spawner.py",
      "type": "method",
      "name": "__init__",
      "line_number": 76,
      "parent": "AgentSpawner",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/interface/agent_spawner.py",
      "type": "method",
      "name": "get_spawn_history",
      "line_number": 583,
      "parent": "AgentSpawner",
      "docstring": "Get recent spawn history.",
      "exports": null
    },
    {
      "path": "ai/tools/intent.py",
      "type": "module",
      "name": "intent",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "normalize_tag",
        "IntentNormalizer",
        "run",
        "BaseTool",
        "Field",
        "run"
      ]
    },
    {
      "path": "ai/tools/intent.py",
      "type": "function",
      "name": "normalize_tag",
      "line_number": 24,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/intent.py",
      "type": "class",
      "name": "IntentNormalizer",
      "line_number": 32,
      "parent": null,
      "docstring": "Normalize intent tags to canonical set: feature, bug, docs, refactor, adr.",
      "exports": null
    },
    {
      "path": "ai/tools/intent.py",
      "type": "method",
      "name": "run",
      "line_number": 37,
      "parent": "IntentNormalizer",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/intent.py",
      "type": "class",
      "name": "BaseTool",
      "line_number": 8,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/intent.py",
      "type": "function",
      "name": "Field",
      "line_number": 12,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/intent.py",
      "type": "method",
      "name": "run",
      "line_number": 9,
      "parent": "BaseTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/dod_checker.py",
      "type": "module",
      "name": "dod_checker",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "extract_adr_refs",
        "DoDCheck",
        "run",
        "BaseTool",
        "Field",
        "run"
      ]
    },
    {
      "path": "ai/tools/dod_checker.py",
      "type": "function",
      "name": "extract_adr_refs",
      "line_number": 20,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/dod_checker.py",
      "type": "function",
      "name": "_run",
      "line_number": 24,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/dod_checker.py",
      "type": "class",
      "name": "DoDCheck",
      "line_number": 32,
      "parent": null,
      "docstring": "Definition-of-Done check: tests gate, test pass, ADR reference present.\n\nThis tool runs local, non-interactive checks mirroring CI:\n- scripts/check-tests-changed.sh must pass\n- pytest must pass\n- HEAD commit message (or last 10) must include ADR-###\nReturns a markdown summary with pass/fail for each item.",
      "exports": null
    },
    {
      "path": "ai/tools/dod_checker.py",
      "type": "method",
      "name": "run",
      "line_number": 44,
      "parent": "DoDCheck",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/dod_checker.py",
      "type": "class",
      "name": "BaseTool",
      "line_number": 9,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/dod_checker.py",
      "type": "function",
      "name": "Field",
      "line_number": 13,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/dod_checker.py",
      "type": "method",
      "name": "run",
      "line_number": 10,
      "parent": "BaseTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/release_notes.py",
      "type": "module",
      "name": "release_notes",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "GenerateReleaseNotes",
        "run",
        "BaseTool",
        "Field",
        "run"
      ]
    },
    {
      "path": "ai/tools/release_notes.py",
      "type": "class",
      "name": "GenerateReleaseNotes",
      "line_number": 19,
      "parent": null,
      "docstring": "Generate concise release notes from recent memory items.\n\nProduces markdown:\n# Release Notes (YYYY-MM-DD)\n- item 1\n- item 2\n...",
      "exports": null
    },
    {
      "path": "ai/tools/release_notes.py",
      "type": "method",
      "name": "run",
      "line_number": 33,
      "parent": "GenerateReleaseNotes",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/release_notes.py",
      "type": "class",
      "name": "BaseTool",
      "line_number": 9,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/release_notes.py",
      "type": "function",
      "name": "Field",
      "line_number": 13,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/release_notes.py",
      "type": "method",
      "name": "run",
      "line_number": 10,
      "parent": "BaseTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_mcp.py",
      "type": "module",
      "name": "enhanced_mcp",
      "line_number": 1,
      "parent": null,
      "docstring": "Enhanced MCP Tool with Advanced Discovery Integration.\n\nThis module provides an enhanced MCP tool that integrates with the MCP discovery\nsystem for intelligent server selection, automatic failover, and optimized\ncapability routing for research and documentation tasks.\n\nCross-references:\n    - MCP Discovery: ai/integration/mcp_discovery.py for server discovery\n    - MCP Client: ai/tools/mcp_client.py for basic MCP functionality\n    - Memory System: ai/memory/README.md for result caching\n    - Agent Development: docs/AGENT_DEVELOPMENT.md#tool-development\n\nRelated:\n    - Intelligent server selection based on capability and performance\n    - Automatic failover and retry mechanisms\n    - Result caching for improved performance\n    - Enhanced error handling and diagnostics",
      "exports": [
        "MCPResult",
        "EnhancedMCPTool",
        "WriteMemory",
        "ReadMemoryContext",
        "run",
        "run"
      ]
    },
    {
      "path": "ai/tools/enhanced_mcp.py",
      "type": "class",
      "name": "MCPResult",
      "line_number": 59,
      "parent": null,
      "docstring": "Result from an MCP operation with metadata.",
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_mcp.py",
      "type": "class",
      "name": "EnhancedMCPTool",
      "line_number": 71,
      "parent": null,
      "docstring": "Enhanced MCP tool with discovery integration and intelligent routing.",
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_mcp.py",
      "type": "method",
      "name": "__init__",
      "line_number": 74,
      "parent": "EnhancedMCPTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_mcp.py",
      "type": "method",
      "name": "_generate_cache_key",
      "line_number": 460,
      "parent": "EnhancedMCPTool",
      "docstring": "Generate a cache key for the request.",
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_mcp.py",
      "type": "method",
      "name": "_get_cached_result",
      "line_number": 476,
      "parent": "EnhancedMCPTool",
      "docstring": "Get cached result if available and not expired.",
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_mcp.py",
      "type": "method",
      "name": "_cache_result",
      "line_number": 490,
      "parent": "EnhancedMCPTool",
      "docstring": "Cache a successful result.",
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_mcp.py",
      "type": "class",
      "name": "WriteMemory",
      "line_number": 39,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_mcp.py",
      "type": "class",
      "name": "ReadMemoryContext",
      "line_number": 47,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_mcp.py",
      "type": "method",
      "name": "__init__",
      "line_number": 40,
      "parent": "WriteMemory",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_mcp.py",
      "type": "method",
      "name": "run",
      "line_number": 44,
      "parent": "WriteMemory",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_mcp.py",
      "type": "method",
      "name": "__init__",
      "line_number": 48,
      "parent": "ReadMemoryContext",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_mcp.py",
      "type": "method",
      "name": "run",
      "line_number": 52,
      "parent": "ReadMemoryContext",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "module",
      "name": "enhanced_memory_tools",
      "line_number": 1,
      "parent": null,
      "docstring": "Enhanced Memory Tools\n\nIntelligent memory tools that leverage semantic search, auto-classification,\nand contextual understanding for better agent coordination.\n\nCross-references:\n    - Base tools: ai/tools/memory_tools.py\n    - Intelligent store: ai/memory/intelligent_store.py\n    - Memory system: docs/MEMORY_SYSTEM.md",
      "exports": [
        "SmartWriteMemory",
        "SemanticSearchMemory",
        "GetMemoryByType",
        "GetRelatedMemories",
        "AnalyzeMemoryUsage",
        "OptimizeMemoryStore",
        "run",
        "run",
        "run",
        "run",
        "run",
        "run",
        "BaseTool",
        "Field",
        "run"
      ]
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "class",
      "name": "SmartWriteMemory",
      "line_number": 36,
      "parent": null,
      "docstring": "Store knowledge with automatic classification and importance scoring.\n\nSmartWriteMemory automatically analyzes content to classify type, extract keywords,\ncalculate importance, and find related memories. This enables better agent coordination\nthrough intelligent memory organization.\n\nCross-references:\n    - Basic version: ai/tools/memory_tools.py#WriteMemory\n    - Intelligence: ai/memory/intelligent_store.py\n    - Usage patterns: docs/AGENT_DEVELOPMENT.md#smart-memory\n    \nExamples:\n    Strategic goals:\n        SmartWriteMemory(content=\"Goal: Implement real-time agent communication\", tags=[\"goal\", \"communication\"])\n        \u2192 Auto-classified as GOAL type, high importance score\n        \n    Task documentation:\n        SmartWriteMemory(content=\"Task: Add semantic search to memory system\", tags=[\"task\", \"memory\"])\n        \u2192 Auto-classified as TASK type, finds related memories\n        \n    Learning capture:\n        SmartWriteMemory(content=\"Learned: Activity detection needs 60s sliding window for accuracy\")\n        \u2192 Auto-classified as KNOWLEDGE type, extracts technical keywords\n        \nReturns:\n    str: JSON string with memory ID and intelligence metadata",
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "class",
      "name": "SemanticSearchMemory",
      "line_number": 96,
      "parent": null,
      "docstring": "Search memories by keywords with intelligent ranking.\n\nSemanticSearchMemory finds relevant memories using keyword matching,\nimportance scoring, and relevance ranking. More intelligent than basic tag filtering.\n\nCross-references:\n    - Basic search: ai/tools/memory_tools.py#ReadMemoryContext\n    - Search algorithm: ai/memory/intelligent_store.py#search_by_keywords\n    \nExamples:\n    Find architecture decisions:\n        SemanticSearchMemory(keywords=[\"architecture\", \"decision\", \"adr\"])\n        \n    Research communication patterns:\n        SemanticSearchMemory(keywords=[\"agent\", \"communication\", \"flow\"])\n        \n    Debug issues:\n        SemanticSearchMemory(keywords=[\"error\", \"failed\", \"bug\"])\n        \nReturns:\n    str: Formatted search results with relevance scores",
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "class",
      "name": "GetMemoryByType",
      "line_number": 159,
      "parent": null,
      "docstring": "Retrieve memories by classification type.\n\nGetMemoryByType retrieves memories of specific types (goals, tasks, decisions, etc.)\nsorted by importance and recency. Useful for focused context retrieval.\n\nExamples:\n    Get current goals:\n        GetMemoryByType(memory_type=\"goal\")\n        \n    Review recent decisions:\n        GetMemoryByType(memory_type=\"decision\", limit=3)\n        \n    Find past errors:\n        GetMemoryByType(memory_type=\"error\")\n        \nReturns:\n    str: Formatted list of memories of specified type",
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "class",
      "name": "GetRelatedMemories",
      "line_number": 220,
      "parent": null,
      "docstring": "Find memories related to a specific memory.\n\nGetRelatedMemories finds memories that share keywords or themes with a given memory,\nenabling agents to explore connected context and knowledge.\n\nExamples:\n    Explore related context:\n        GetRelatedMemories(memory_id=\"mem-0042\")\n        \n    Find connected knowledge:\n        GetRelatedMemories(memory_id=\"mem-0123\", limit=3)\n        \nReturns:\n    str: Formatted list of related memories",
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "class",
      "name": "AnalyzeMemoryUsage",
      "line_number": 280,
      "parent": null,
      "docstring": "Get analytics and insights about memory usage patterns.\n\nAnalyzeMemoryUsage provides insights into how memory is being used,\nwhat types of information are stored, and usage patterns over time.\n\nReturns:\n    str: Formatted analytics report",
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "class",
      "name": "OptimizeMemoryStore",
      "line_number": 329,
      "parent": null,
      "docstring": "Optimize memory store by removing low-importance old items.\n\nOptimizeMemoryStore cleans up the memory store by removing less important\nold memories to maintain performance and focus on relevant information.\n\nExamples:\n    Regular cleanup:\n        OptimizeMemoryStore(max_items=500)\n        \n    Aggressive cleanup:\n        OptimizeMemoryStore(max_items=100)\n        \nReturns:\n    str: Optimization report",
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 69,
      "parent": "SmartWriteMemory",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 77,
      "parent": "SmartWriteMemory",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 124,
      "parent": "SemanticSearchMemory",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 132,
      "parent": "SemanticSearchMemory",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 183,
      "parent": "GetMemoryByType",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 191,
      "parent": "GetMemoryByType",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 241,
      "parent": "GetRelatedMemories",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 247,
      "parent": "GetRelatedMemories",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 290,
      "parent": "AnalyzeMemoryUsage",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 293,
      "parent": "AnalyzeMemoryUsage",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 349,
      "parent": "OptimizeMemoryStore",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 356,
      "parent": "OptimizeMemoryStore",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "class",
      "name": "BaseTool",
      "line_number": 20,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "function",
      "name": "Field",
      "line_number": 27,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 21,
      "parent": "BaseTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/enhanced_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 24,
      "parent": "BaseTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/memory_tools.py",
      "type": "module",
      "name": "memory_tools",
      "line_number": 1,
      "parent": null,
      "docstring": "Memory management tools for persistent agent context and knowledge sharing.\n\nThis module provides the core memory interface for agents to store and retrieve\ncontext across sessions and agent handoffs. Memory enables coordination between\nspecialized agents in the Fresh ecosystem.\n\nCross-references:\n    - Memory System Guide: docs/MEMORY_SYSTEM.md for patterns and best practices\n    - Agent Development: docs/AGENT_DEVELOPMENT.md#memory-context for usage\n    - Tool Reference: docs/TOOLS.md#memory-context-tools for complete API\n    \nRelated:\n    - ai.memory.store: Memory storage abstraction and implementations\n    - ai.agency: Memory store initialization for agent swarms",
      "exports": [
        "WriteMemory",
        "ReadMemoryContext",
        "run",
        "run",
        "BaseTool",
        "Field",
        "run"
      ]
    },
    {
      "path": "ai/tools/memory_tools.py",
      "type": "class",
      "name": "WriteMemory",
      "line_number": 34,
      "parent": null,
      "docstring": "Store knowledge, context, and state for cross-agent sharing.\n\nWriteMemory enables agents to persist information that other agents can\nretrieve later. This is essential for coordination in multi-agent workflows.\n\nCross-references:\n    - Usage patterns: docs/AGENT_DEVELOPMENT.md#memory-context\n    - Implementation details: ai/memory/store.py\n    - Tool documentation: docs/TOOLS.md#writememory\n    \nExamples:\n    Goal setting:\n        WriteMemory(content=\"Goal: Add MCP integration\", tags=[\"feature\"])\n        \n    Progress tracking:\n        WriteMemory(content=\"Completed: API design\", tags=[\"done\", \"api\"])\n        \n    Context sharing:\n        WriteMemory(content=\"Using pytest for testing\", tags=[\"context\"])\n        \nReturns:\n    str: Unique ID of the stored memory entry for reference",
      "exports": null
    },
    {
      "path": "ai/tools/memory_tools.py",
      "type": "class",
      "name": "ReadMemoryContext",
      "line_number": 68,
      "parent": null,
      "docstring": "Retrieve relevant stored context for current task.\n\nReadMemoryContext enables agents to access previously stored knowledge\nand context, essential for maintaining state across agent handoffs.\n\nCross-references:\n    - Usage patterns: docs/AGENT_DEVELOPMENT.md#memory-context  \n    - Memory system: ai/memory/store.py#render_context\n    - Tool documentation: docs/TOOLS.md#readmemorycontext\n    \nExamples:\n    Get recent context:\n        ReadMemoryContext(limit=10)\n        \n    Filter by tags:\n        ReadMemoryContext(tags=[\"feature\", \"mcp\"], limit=5)\n        \n    All context for planning:\n        ReadMemoryContext(limit=50)\n        \nReturns:\n    str: Formatted context string with recent memory entries",
      "exports": null
    },
    {
      "path": "ai/tools/memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 62,
      "parent": "WriteMemory",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 96,
      "parent": "ReadMemoryContext",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/memory_tools.py",
      "type": "class",
      "name": "BaseTool",
      "line_number": 23,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/memory_tools.py",
      "type": "function",
      "name": "Field",
      "line_number": 27,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 24,
      "parent": "BaseTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/adr_logger.py",
      "type": "module",
      "name": "adr_logger",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "CreateADR",
        "run",
        "BaseTool",
        "Field",
        "run"
      ]
    },
    {
      "path": "ai/tools/adr_logger.py",
      "type": "class",
      "name": "CreateADR",
      "line_number": 19,
      "parent": null,
      "docstring": "Create a new ADR under the ADR_DIR (or .cursor/rules by default).\n\nFields (Pydantic model fields when running under Agency Swarm):\n- title: Decision title\n- status: One of Proposed|Accepted|Superseded|Deprecated (string, optional)",
      "exports": null
    },
    {
      "path": "ai/tools/adr_logger.py",
      "type": "method",
      "name": "run",
      "line_number": 33,
      "parent": "CreateADR",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/adr_logger.py",
      "type": "class",
      "name": "BaseTool",
      "line_number": 12,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/adr_logger.py",
      "type": "function",
      "name": "Field",
      "line_number": 15,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/adr_logger.py",
      "type": "method",
      "name": "run",
      "line_number": 13,
      "parent": "BaseTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/__init__.py",
      "type": "module",
      "name": "__init__",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": []
    },
    {
      "path": "ai/tools/docs_tools.py",
      "type": "module",
      "name": "docs_tools",
      "line_number": 1,
      "parent": null,
      "docstring": "Documentation Tools\n\nTools to check and maintain documentation alignment for Fresh.",
      "exports": [
        "DocsAlignmentCheck",
        "run",
        "BaseTool",
        "Field",
        "run"
      ]
    },
    {
      "path": "ai/tools/docs_tools.py",
      "type": "class",
      "name": "DocsAlignmentCheck",
      "line_number": 31,
      "parent": null,
      "docstring": "Run documentation alignment checks and return a summary report.\n\nExecutes scripts/check_docs_alignment.py. In strict mode, non-zero exit is returned as part of the report.",
      "exports": null
    },
    {
      "path": "ai/tools/docs_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 39,
      "parent": "DocsAlignmentCheck",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/docs_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 45,
      "parent": "DocsAlignmentCheck",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/docs_tools.py",
      "type": "class",
      "name": "BaseTool",
      "line_number": 14,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/docs_tools.py",
      "type": "function",
      "name": "Field",
      "line_number": 20,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/docs_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 15,
      "parent": "BaseTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/docs_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 18,
      "parent": "BaseTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/release_notes_cli.py",
      "type": "module",
      "name": "release_notes_cli",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "main"
      ]
    },
    {
      "path": "ai/tools/release_notes_cli.py",
      "type": "function",
      "name": "_run",
      "line_number": 10,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/release_notes_cli.py",
      "type": "function",
      "name": "_git_range_notes",
      "line_number": 14,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/release_notes_cli.py",
      "type": "function",
      "name": "main",
      "line_number": 32,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/next_steps.py",
      "type": "module",
      "name": "next_steps",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "GenerateNextSteps",
        "run",
        "BaseTool",
        "Field",
        "run"
      ]
    },
    {
      "path": "ai/tools/next_steps.py",
      "type": "class",
      "name": "GenerateNextSteps",
      "line_number": 18,
      "parent": null,
      "docstring": "Suggest the next 2\u20133 smallest steps based on recent memory.\n\nHeuristics:\n- If recent items include a 'bug' tag => prioritize failing test reproduction and minimal fix.\n- Else if include 'feature' => write failing tests, implement minimal, then review.\n- Fallback => read context, identify missing tests, propose one crisp step.",
      "exports": null
    },
    {
      "path": "ai/tools/next_steps.py",
      "type": "method",
      "name": "run",
      "line_number": 30,
      "parent": "GenerateNextSteps",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/next_steps.py",
      "type": "class",
      "name": "BaseTool",
      "line_number": 8,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/next_steps.py",
      "type": "function",
      "name": "Field",
      "line_number": 12,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/next_steps.py",
      "type": "method",
      "name": "run",
      "line_number": 9,
      "parent": "BaseTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/production_memory_tools.py",
      "type": "module",
      "name": "production_memory_tools",
      "line_number": 1,
      "parent": null,
      "docstring": "Production Memory Tools\n\nAdvanced memory management tools for production environments including\nbackup/restore, Firestore synchronization, and enhanced analytics.\n\nThese tools extend the basic memory capabilities with production-grade\nfeatures for data protection, monitoring, and optimization.",
      "exports": [
        "BackupMemoryStore",
        "RestoreMemoryStore",
        "SyncFirestoreMemory",
        "GetProductionAnalytics",
        "OptimizeFirestoreMemory",
        "TestFirestoreConnection",
        "run",
        "run",
        "run",
        "run",
        "run",
        "run"
      ]
    },
    {
      "path": "ai/tools/production_memory_tools.py",
      "type": "class",
      "name": "BackupMemoryStore",
      "line_number": 21,
      "parent": null,
      "docstring": "Backup all memories to a JSON file for data protection.\n\nCreates a complete backup of the memory store including metadata,\nmemory content, classifications, and relationships.",
      "exports": null
    },
    {
      "path": "ai/tools/production_memory_tools.py",
      "type": "class",
      "name": "RestoreMemoryStore",
      "line_number": 64,
      "parent": null,
      "docstring": "Restore memories from a backup file.\n\nRestores memory data from a JSON backup file, optionally clearing\nexisting memories first.",
      "exports": null
    },
    {
      "path": "ai/tools/production_memory_tools.py",
      "type": "class",
      "name": "SyncFirestoreMemory",
      "line_number": 115,
      "parent": null,
      "docstring": "Synchronize local memory with Firestore backend.\n\nEnsures consistency between local memory cache and Firestore\nby syncing missing memories in both directions.",
      "exports": null
    },
    {
      "path": "ai/tools/production_memory_tools.py",
      "type": "class",
      "name": "GetProductionAnalytics",
      "line_number": 156,
      "parent": null,
      "docstring": "Get comprehensive production analytics for memory usage.\n\nProvides detailed insights into memory usage, Firestore sync status,\nand production metrics for monitoring and optimization.",
      "exports": null
    },
    {
      "path": "ai/tools/production_memory_tools.py",
      "type": "class",
      "name": "OptimizeFirestoreMemory",
      "line_number": 229,
      "parent": null,
      "docstring": "Optimize Firestore memory by removing low-importance items.\n\nRemoves old, low-importance memories from both local cache and\nFirestore to maintain optimal performance.",
      "exports": null
    },
    {
      "path": "ai/tools/production_memory_tools.py",
      "type": "class",
      "name": "TestFirestoreConnection",
      "line_number": 273,
      "parent": null,
      "docstring": "Test connection to Enhanced Firestore Memory Store.\n\nValidates that Firestore credentials and connection are working properly\nfor production memory operations.",
      "exports": null
    },
    {
      "path": "ai/tools/production_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 33,
      "parent": "BackupMemoryStore",
      "docstring": "Execute memory backup operation.",
      "exports": null
    },
    {
      "path": "ai/tools/production_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 80,
      "parent": "RestoreMemoryStore",
      "docstring": "Execute memory restore operation.",
      "exports": null
    },
    {
      "path": "ai/tools/production_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 123,
      "parent": "SyncFirestoreMemory",
      "docstring": "Execute Firestore synchronization.",
      "exports": null
    },
    {
      "path": "ai/tools/production_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 164,
      "parent": "GetProductionAnalytics",
      "docstring": "Get production memory analytics.",
      "exports": null
    },
    {
      "path": "ai/tools/production_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 242,
      "parent": "OptimizeFirestoreMemory",
      "docstring": "Execute Firestore memory optimization.",
      "exports": null
    },
    {
      "path": "ai/tools/production_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 281,
      "parent": "TestFirestoreConnection",
      "docstring": "Test Firestore connection and setup.",
      "exports": null
    },
    {
      "path": "ai/tools/test_runner.py",
      "type": "module",
      "name": "test_runner",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "run_pytest"
      ]
    },
    {
      "path": "ai/tools/test_runner.py",
      "type": "function",
      "name": "run_pytest",
      "line_number": 7,
      "parent": null,
      "docstring": "Run pytest in the given path, returning (exit_code, output).",
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "module",
      "name": "persistent_memory_tools",
      "line_number": 1,
      "parent": null,
      "docstring": "Persistent Memory Tools\n\nEnhanced memory tools that work with FirestoreMemoryStore for persistent\nagent memory across sessions and deployments.\n\nFeatures:\n- Persistent memory search across sessions  \n- Memory consolidation and cleanup tools\n- Cross-session memory analytics\n- Learning pattern analysis\n\nCross-references:\n    - ai/memory/firestore_store.py: Firestore memory implementation\n    - ai/tools/enhanced_memory_tools.py: Base intelligent memory tools\n    - ADR-004: Persistent Agent Memory",
      "exports": [
        "PersistentMemorySearch",
        "MemoryConsolidation",
        "CrossSessionAnalytics",
        "MemoryLearningPatterns",
        "MemorySync",
        "run",
        "run",
        "run",
        "run",
        "run",
        "BaseTool",
        "Field",
        "run"
      ]
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "class",
      "name": "PersistentMemorySearch",
      "line_number": 46,
      "parent": null,
      "docstring": "Search persistent memory across all sessions and deployments.",
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "class",
      "name": "MemoryConsolidation",
      "line_number": 126,
      "parent": null,
      "docstring": "Consolidate and clean up persistent memories.",
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "class",
      "name": "CrossSessionAnalytics",
      "line_number": 192,
      "parent": null,
      "docstring": "Analyze memory patterns across sessions and time.",
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "class",
      "name": "MemoryLearningPatterns",
      "line_number": 289,
      "parent": null,
      "docstring": "Analyze learning patterns and knowledge evolution.",
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "class",
      "name": "MemorySync",
      "line_number": 400,
      "parent": null,
      "docstring": "Force synchronization of local memory to persistent storage.",
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 55,
      "parent": "PersistentMemorySearch",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 70,
      "parent": "PersistentMemorySearch",
      "docstring": "Search persistent memory with cross-session capability.",
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 134,
      "parent": "MemoryConsolidation",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 143,
      "parent": "MemoryConsolidation",
      "docstring": "Run memory consolidation and cleanup.",
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 198,
      "parent": "CrossSessionAnalytics",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 205,
      "parent": "CrossSessionAnalytics",
      "docstring": "Analyze memory patterns across sessions.",
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 295,
      "parent": "MemoryLearningPatterns",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 304,
      "parent": "MemoryLearningPatterns",
      "docstring": "Analyze learning patterns in persistent memory.",
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 403,
      "parent": "MemorySync",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 406,
      "parent": "MemorySync",
      "docstring": "Force sync local memories to Firestore.",
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "class",
      "name": "BaseTool",
      "line_number": 29,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "function",
      "name": "Field",
      "line_number": 35,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "method",
      "name": "__init__",
      "line_number": 30,
      "parent": "BaseTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/persistent_memory_tools.py",
      "type": "method",
      "name": "run",
      "line_number": 33,
      "parent": "BaseTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/mcp_client.py",
      "type": "module",
      "name": "mcp_client",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "DiscoverMCPServers",
        "CallMCPTool",
        "run",
        "run",
        "BaseTool",
        "Field",
        "run"
      ]
    },
    {
      "path": "ai/tools/mcp_client.py",
      "type": "class",
      "name": "DiscoverMCPServers",
      "line_number": 16,
      "parent": null,
      "docstring": "Discover available MCP servers in the environment.",
      "exports": null
    },
    {
      "path": "ai/tools/mcp_client.py",
      "type": "class",
      "name": "CallMCPTool",
      "line_number": 56,
      "parent": null,
      "docstring": "Safely call an MCP tool with specified arguments.",
      "exports": null
    },
    {
      "path": "ai/tools/mcp_client.py",
      "type": "method",
      "name": "run",
      "line_number": 19,
      "parent": "DiscoverMCPServers",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/mcp_client.py",
      "type": "method",
      "name": "run",
      "line_number": 63,
      "parent": "CallMCPTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/mcp_client.py",
      "type": "class",
      "name": "BaseTool",
      "line_number": 9,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/mcp_client.py",
      "type": "function",
      "name": "Field",
      "line_number": 12,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/tools/mcp_client.py",
      "type": "method",
      "name": "run",
      "line_number": 10,
      "parent": "BaseTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "module",
      "name": "adaptive_ui",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "RefreshController",
        "AdaptiveMonitorUI",
        "get_current_interval",
        "update_display",
        "start_live_display",
        "stop_live_display"
      ]
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "class",
      "name": "RefreshController",
      "line_number": 17,
      "parent": null,
      "docstring": "Controls adaptive refresh intervals based on activity.",
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "class",
      "name": "AdaptiveMonitorUI",
      "line_number": 32,
      "parent": null,
      "docstring": "Modern terminal UI for agent monitoring with adaptive refresh.",
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "method",
      "name": "__init__",
      "line_number": 20,
      "parent": "RefreshController",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "method",
      "name": "get_current_interval",
      "line_number": 24,
      "parent": "RefreshController",
      "docstring": "Get current recommended refresh interval.",
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "method",
      "name": "__init__",
      "line_number": 35,
      "parent": "AdaptiveMonitorUI",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "method",
      "name": "_get_activity_color",
      "line_number": 40,
      "parent": "AdaptiveMonitorUI",
      "docstring": "Get color for activity level.",
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "method",
      "name": "_format_memory",
      "line_number": 50,
      "parent": "AdaptiveMonitorUI",
      "docstring": "Format memory in human-readable units.",
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "method",
      "name": "_format_response_time",
      "line_number": 61,
      "parent": "AdaptiveMonitorUI",
      "docstring": "Format response time appropriately.",
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "method",
      "name": "_get_agent_health",
      "line_number": 70,
      "parent": "AdaptiveMonitorUI",
      "docstring": "Determine agent health status based on activity and system metrics.",
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "method",
      "name": "_generate_timeline_sparkline",
      "line_number": 92,
      "parent": "AdaptiveMonitorUI",
      "docstring": "Generate a simple timeline sparkline from events.",
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "method",
      "name": "_generate_agent_table",
      "line_number": 122,
      "parent": "AdaptiveMonitorUI",
      "docstring": "Generate the main agent status table.",
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "method",
      "name": "_generate_info_panel",
      "line_number": 171,
      "parent": "AdaptiveMonitorUI",
      "docstring": "Generate info panel with flows and next steps.",
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "method",
      "name": "update_display",
      "line_number": 190,
      "parent": "AdaptiveMonitorUI",
      "docstring": "Update the live display with current status.",
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "method",
      "name": "start_live_display",
      "line_number": 209,
      "parent": "AdaptiveMonitorUI",
      "docstring": "Start live updating display.",
      "exports": null
    },
    {
      "path": "ai/monitor/adaptive_ui.py",
      "type": "method",
      "name": "stop_live_display",
      "line_number": 215,
      "parent": "AdaptiveMonitorUI",
      "docstring": "Stop live updating display.",
      "exports": null
    },
    {
      "path": "ai/monitor/web.py",
      "type": "module",
      "name": "web",
      "line_number": 1,
      "parent": null,
      "docstring": "Simple browser-based monitor for Fresh.\n\nProvides:\n- GET /status  \u2192 JSON snapshot (uses ai.monitor.status.get_status)\n- GET /stream  \u2192 Server-Sent Events (SSE) streaming JSON snapshots\n- GET /ui      \u2192 Minimal HTML page subscribing to /stream\n\nNote: This reads in-process status (activity detector, agency view). For a\nseparate process running agents, use the live terminal monitor or start this\nserver within that process for the richest view. Cross-process production\nmonitoring should use a shared sink (e.g., persistent store/metrics/logs).",
      "exports": []
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "module",
      "name": "openai_tracker",
      "line_number": 1,
      "parent": null,
      "docstring": "OpenAI API Usage Tracker\n\nTracks OpenAI API usage including token consumption, model usage, and cost estimation.\nIntegrates with the cost monitoring system for comprehensive billing tracking.\n\nFeatures:\n- Token counting for completions and embeddings\n- Model-specific cost estimation\n- Request tracking and rate limiting awareness  \n- Integration with existing OpenAI client patterns\n- Support for streaming responses",
      "exports": [
        "TokenCounter",
        "OpenAIUsageTracker",
        "track_openai_call",
        "track_openai_streaming_call",
        "TrackedOpenAIClient",
        "TrackedChatCompletions",
        "TrackedEmbeddings",
        "wrap_openai_client",
        "track_completion_usage",
        "track_embedding_usage",
        "estimate_cost_for_messages",
        "estimate_tokens",
        "count_messages_tokens",
        "track_completion",
        "track_embedding",
        "estimate_and_track_from_messages",
        "decorator",
        "decorator",
        "chat",
        "embeddings",
        "create",
        "create",
        "wrapper",
        "wrapper"
      ]
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "class",
      "name": "TokenCounter",
      "line_number": 25,
      "parent": null,
      "docstring": "Token counting utilities for OpenAI models.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "class",
      "name": "OpenAIUsageTracker",
      "line_number": 77,
      "parent": null,
      "docstring": "Tracks OpenAI API usage and costs.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "function",
      "name": "track_openai_call",
      "line_number": 163,
      "parent": null,
      "docstring": "Decorator to automatically track OpenAI API calls.\n\nArgs:\n    model: Model name (if not provided in function args)\n    operation: Operation type (\"completion\" or \"embedding\")\n    estimate_tokens: Whether to estimate tokens from text content",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "function",
      "name": "track_openai_streaming_call",
      "line_number": 228,
      "parent": null,
      "docstring": "Decorator for streaming OpenAI calls.\n\nTracks input tokens immediately and accumulates output tokens as they stream.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "function",
      "name": "_track_streaming_tokens",
      "line_number": 263,
      "parent": null,
      "docstring": "Wrap a streaming response to track output tokens.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "class",
      "name": "TrackedOpenAIClient",
      "line_number": 287,
      "parent": null,
      "docstring": "OpenAI client wrapper with automatic usage tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "class",
      "name": "TrackedChatCompletions",
      "line_number": 308,
      "parent": null,
      "docstring": "Chat completions wrapper with usage tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "class",
      "name": "TrackedEmbeddings",
      "line_number": 355,
      "parent": null,
      "docstring": "Embeddings wrapper with usage tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "function",
      "name": "wrap_openai_client",
      "line_number": 392,
      "parent": null,
      "docstring": "Wrap an existing OpenAI client with usage tracking.\n\nUsage:\n    import openai\n    from ai.monitor.openai_tracker import wrap_openai_client\n    \n    # Original client\n    client = openai.OpenAI(api_key=\"your-key\")\n    \n    # Wrapped client with cost tracking\n    client = wrap_openai_client(client)\n    \n    # Use normally - all operations are automatically tracked\n    response = client.chat.completions.create(\n        model=\"gpt-3.5-turbo\",\n        messages=[{\"role\": \"user\", \"content\": \"Hello!\"}]\n    )",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "function",
      "name": "track_completion_usage",
      "line_number": 416,
      "parent": null,
      "docstring": "Manually track completion usage.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "function",
      "name": "track_embedding_usage",
      "line_number": 422,
      "parent": null,
      "docstring": "Manually track embedding usage.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "function",
      "name": "estimate_cost_for_messages",
      "line_number": 428,
      "parent": null,
      "docstring": "Estimate cost for a chat completion without making the API call.\n\nReturns:\n    Dict with token counts and estimated cost",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "estimate_tokens",
      "line_number": 29,
      "parent": "TokenCounter",
      "docstring": "Estimate token count for text.\n\nThis is a rough estimation. For accurate counting, use tiktoken library.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "count_messages_tokens",
      "line_number": 58,
      "parent": "TokenCounter",
      "docstring": "Estimate tokens for a list of chat messages.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "__init__",
      "line_number": 80,
      "parent": "OpenAIUsageTracker",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "track_completion",
      "line_number": 83,
      "parent": "OpenAIUsageTracker",
      "docstring": "Track a completion API call.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "track_embedding",
      "line_number": 121,
      "parent": "OpenAIUsageTracker",
      "docstring": "Track an embedding API call.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "estimate_and_track_from_messages",
      "line_number": 139,
      "parent": "OpenAIUsageTracker",
      "docstring": "Estimate and track usage from messages and response.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "function",
      "name": "decorator",
      "line_number": 176,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "function",
      "name": "decorator",
      "line_number": 237,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "__init__",
      "line_number": 290,
      "parent": "TrackedOpenAIClient",
      "docstring": "Initialize with existing OpenAI client.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "chat",
      "line_number": 295,
      "parent": "TrackedOpenAIClient",
      "docstring": "Get tracked chat completions interface.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "embeddings",
      "line_number": 299,
      "parent": "TrackedOpenAIClient",
      "docstring": "Get tracked embeddings interface.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "__getattr__",
      "line_number": 303,
      "parent": "TrackedOpenAIClient",
      "docstring": "Delegate unknown attributes to the wrapped client.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "__init__",
      "line_number": 311,
      "parent": "TrackedChatCompletions",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "create",
      "line_number": 315,
      "parent": "TrackedChatCompletions",
      "docstring": "Create chat completion with tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "__getattr__",
      "line_number": 350,
      "parent": "TrackedChatCompletions",
      "docstring": "Delegate unknown attributes to the wrapped completions.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "__init__",
      "line_number": 358,
      "parent": "TrackedEmbeddings",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "create",
      "line_number": 362,
      "parent": "TrackedEmbeddings",
      "docstring": "Create embeddings with tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "method",
      "name": "__getattr__",
      "line_number": 387,
      "parent": "TrackedEmbeddings",
      "docstring": "Delegate unknown attributes to the wrapped embeddings.",
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "function",
      "name": "wrapper",
      "line_number": 178,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/openai_tracker.py",
      "type": "function",
      "name": "wrapper",
      "line_number": 239,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "module",
      "name": "cost_tracker",
      "line_number": 1,
      "parent": null,
      "docstring": "Cost Monitoring System for Fresh AI\n\nComprehensive cost tracking and monitoring for:\n- Firebase Firestore operations (reads, writes, deletes)\n- OpenAI API usage (tokens, requests, models)\n- Google API usage (various services)\n\nFeatures:\n- Real-time usage tracking\n- Cost estimation based on current pricing\n- Budget management and alerts\n- Usage analytics and optimization recommendations\n- Integration with existing monitoring system",
      "exports": [
        "ServiceType",
        "OperationType",
        "UsageRecord",
        "ServicePricing",
        "BudgetAlert",
        "CostTracker",
        "get_cost_tracker",
        "record_usage",
        "get_usage_summary",
        "get_monthly_usage",
        "add_budget_alert",
        "get_optimization_suggestions",
        "export_usage_report"
      ]
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "class",
      "name": "ServiceType",
      "line_number": 31,
      "parent": null,
      "docstring": "Supported services for cost tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "class",
      "name": "OperationType",
      "line_number": 38,
      "parent": null,
      "docstring": "Types of operations being tracked.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "class",
      "name": "UsageRecord",
      "line_number": 54,
      "parent": null,
      "docstring": "Individual usage record for cost tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "class",
      "name": "ServicePricing",
      "line_number": 66,
      "parent": null,
      "docstring": "Pricing information for a service.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "class",
      "name": "BudgetAlert",
      "line_number": 74,
      "parent": null,
      "docstring": "Budget alert configuration.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "class",
      "name": "CostTracker",
      "line_number": 83,
      "parent": null,
      "docstring": "Main cost tracking and monitoring system.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "function",
      "name": "get_cost_tracker",
      "line_number": 559,
      "parent": null,
      "docstring": "Get the global cost tracker instance.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "method",
      "name": "__init__",
      "line_number": 86,
      "parent": "CostTracker",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "method",
      "name": "_load_data",
      "line_number": 102,
      "parent": "CostTracker",
      "docstring": "Load existing usage records and configuration.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "method",
      "name": "_save_data",
      "line_number": 142,
      "parent": "CostTracker",
      "docstring": "Save usage records and configuration.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "method",
      "name": "_initialize_default_pricing",
      "line_number": 181,
      "parent": "CostTracker",
      "docstring": "Initialize default pricing for supported services.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "method",
      "name": "record_usage",
      "line_number": 228,
      "parent": "CostTracker",
      "docstring": "Record a usage event and calculate estimated cost.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "method",
      "name": "_calculate_cost",
      "line_number": 271,
      "parent": "CostTracker",
      "docstring": "Calculate estimated cost for an operation.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "method",
      "name": "get_usage_summary",
      "line_number": 298,
      "parent": "CostTracker",
      "docstring": "Get usage summary for specified period.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "method",
      "name": "get_monthly_usage",
      "line_number": 360,
      "parent": "CostTracker",
      "docstring": "Get detailed usage for a specific month.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "method",
      "name": "add_budget_alert",
      "line_number": 395,
      "parent": "CostTracker",
      "docstring": "Add a budget alert.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "method",
      "name": "_clear_cache",
      "line_number": 480,
      "parent": "CostTracker",
      "docstring": "Clear usage caches.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "method",
      "name": "get_optimization_suggestions",
      "line_number": 486,
      "parent": "CostTracker",
      "docstring": "Get cost optimization suggestions based on usage patterns.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_tracker.py",
      "type": "method",
      "name": "export_usage_report",
      "line_number": 520,
      "parent": "CostTracker",
      "docstring": "Export detailed usage report to JSON file.",
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "module",
      "name": "activity",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "ActivityLevel",
        "ActivityEvent",
        "AgentMetrics",
        "ActivityDetection",
        "get_activity_detector",
        "record_memory_operation",
        "record_agent_activity",
        "record_flow_activity",
        "record_event",
        "compute_activity_level",
        "get_refresh_interval",
        "get_recent_events",
        "get_bus",
        "append",
        "read_recent"
      ]
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "class",
      "name": "ActivityLevel",
      "line_number": 22,
      "parent": null,
      "docstring": "Agent activity levels for adaptive monitoring refresh rates.",
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "class",
      "name": "ActivityEvent",
      "line_number": 31,
      "parent": null,
      "docstring": "Single activity event with timestamp and type.",
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "class",
      "name": "AgentMetrics",
      "line_number": 40,
      "parent": null,
      "docstring": "Performance metrics for a single agent.",
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "class",
      "name": "ActivityDetection",
      "line_number": 49,
      "parent": null,
      "docstring": "Detects agent activity levels for adaptive monitoring.",
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "function",
      "name": "get_activity_detector",
      "line_number": 179,
      "parent": null,
      "docstring": "Get or create the global activity detector.",
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "function",
      "name": "record_memory_operation",
      "line_number": 187,
      "parent": null,
      "docstring": "Hook function for memory operations.",
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "function",
      "name": "record_agent_activity",
      "line_number": 193,
      "parent": null,
      "docstring": "Hook function for agent lifecycle events.",
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "function",
      "name": "record_flow_activity",
      "line_number": 199,
      "parent": null,
      "docstring": "Hook function for flow events.",
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "method",
      "name": "__init__",
      "line_number": 52,
      "parent": "ActivityDetection",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "method",
      "name": "record_event",
      "line_number": 59,
      "parent": "ActivityDetection",
      "docstring": "Record an activity event (and optionally persist).",
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "method",
      "name": "_cleanup_old_events",
      "line_number": 82,
      "parent": "ActivityDetection",
      "docstring": "Remove events older than the window.",
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "method",
      "name": "compute_activity_level",
      "line_number": 88,
      "parent": "ActivityDetection",
      "docstring": "Compute current activity level based on recent events.\nIf a persistent bus exists and MONITOR_READ_PERSIST is enabled (or default),\nincorporate recent persisted events for computation.",
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "method",
      "name": "get_refresh_interval",
      "line_number": 140,
      "parent": "ActivityDetection",
      "docstring": "Get recommended refresh interval in seconds.",
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "method",
      "name": "get_recent_events",
      "line_number": 151,
      "parent": "ActivityDetection",
      "docstring": "Get recent events for timeline display. If a persistent bus exists, prefer it.",
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "function",
      "name": "get_bus",
      "line_number": 13,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "class",
      "name": "_Nop",
      "line_number": 14,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "method",
      "name": "append",
      "line_number": 15,
      "parent": "_Nop",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/activity.py",
      "type": "method",
      "name": "read_recent",
      "line_number": 17,
      "parent": "_Nop",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "module",
      "name": "cost_dashboard",
      "line_number": 1,
      "parent": null,
      "docstring": "Cost Monitoring Dashboard\n\nInteractive dashboard for monitoring API costs, usage patterns, and budget management.\nBuilt using Rich for terminal UI with real-time updates.\n\nFeatures:\n- Real-time cost and usage display\n- Service breakdown (Firestore, OpenAI, Google APIs)\n- Budget management and alerts\n- Historical usage charts\n- Cost optimization recommendations\n- Export capabilities",
      "exports": [
        "CostDashboard",
        "run_cost_dashboard",
        "quick_cost_summary",
        "create_layout",
        "create_header",
        "create_current_usage_panel",
        "create_service_breakdown_panel",
        "create_budget_status_panel",
        "create_recent_activity_panel",
        "create_optimization_panel",
        "create_controls_panel",
        "create_footer",
        "stop_dashboard",
        "show_budget_management",
        "export_report",
        "show_detailed_usage"
      ]
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "class",
      "name": "CostDashboard",
      "line_number": 40,
      "parent": null,
      "docstring": "Interactive cost monitoring dashboard.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "function",
      "name": "run_cost_dashboard",
      "line_number": 385,
      "parent": null,
      "docstring": "Run the cost monitoring dashboard.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "function",
      "name": "quick_cost_summary",
      "line_number": 397,
      "parent": null,
      "docstring": "Show a quick cost summary without full dashboard.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "method",
      "name": "__init__",
      "line_number": 43,
      "parent": "CostDashboard",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "method",
      "name": "create_layout",
      "line_number": 49,
      "parent": "CostDashboard",
      "docstring": "Create the dashboard layout.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "method",
      "name": "create_header",
      "line_number": 78,
      "parent": "CostDashboard",
      "docstring": "Create dashboard header.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "method",
      "name": "create_current_usage_panel",
      "line_number": 86,
      "parent": "CostDashboard",
      "docstring": "Create current usage summary panel.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "method",
      "name": "create_service_breakdown_panel",
      "line_number": 117,
      "parent": "CostDashboard",
      "docstring": "Create service breakdown panel.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "method",
      "name": "create_budget_status_panel",
      "line_number": 150,
      "parent": "CostDashboard",
      "docstring": "Create budget status panel.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "method",
      "name": "create_recent_activity_panel",
      "line_number": 206,
      "parent": "CostDashboard",
      "docstring": "Create recent activity panel.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "method",
      "name": "create_optimization_panel",
      "line_number": 238,
      "parent": "CostDashboard",
      "docstring": "Create cost optimization recommendations panel.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "method",
      "name": "create_controls_panel",
      "line_number": 253,
      "parent": "CostDashboard",
      "docstring": "Create controls panel.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "method",
      "name": "create_footer",
      "line_number": 266,
      "parent": "CostDashboard",
      "docstring": "Create dashboard footer.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "method",
      "name": "stop_dashboard",
      "line_number": 319,
      "parent": "CostDashboard",
      "docstring": "Stop the dashboard.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "method",
      "name": "show_budget_management",
      "line_number": 323,
      "parent": "CostDashboard",
      "docstring": "Show budget management interface.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "method",
      "name": "export_report",
      "line_number": 353,
      "parent": "CostDashboard",
      "docstring": "Export cost report.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_dashboard.py",
      "type": "method",
      "name": "show_detailed_usage",
      "line_number": 364,
      "parent": "CostDashboard",
      "docstring": "Show detailed usage breakdown.",
      "exports": null
    },
    {
      "path": "ai/monitor/event_bus.py",
      "type": "module",
      "name": "event_bus",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "PersistentEventBus",
        "get_bus",
        "append",
        "read_recent"
      ]
    },
    {
      "path": "ai/monitor/event_bus.py",
      "type": "function",
      "name": "_find_project_root",
      "line_number": 10,
      "parent": null,
      "docstring": "Best-effort project root detection by walking up for .git or pyproject.toml.",
      "exports": null
    },
    {
      "path": "ai/monitor/event_bus.py",
      "type": "function",
      "name": "_bus_path",
      "line_number": 19,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/event_bus.py",
      "type": "class",
      "name": "PersistentEventBus",
      "line_number": 27,
      "parent": null,
      "docstring": "Simple JSONL-backed event bus for cross-process monitoring visibility.\n\nEach line is a JSON object with keys: timestamp, event_type, agent_name, details.",
      "exports": null
    },
    {
      "path": "ai/monitor/event_bus.py",
      "type": "function",
      "name": "get_bus",
      "line_number": 78,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/event_bus.py",
      "type": "method",
      "name": "__init__",
      "line_number": 33,
      "parent": "PersistentEventBus",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/event_bus.py",
      "type": "method",
      "name": "append",
      "line_number": 38,
      "parent": "PersistentEventBus",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/event_bus.py",
      "type": "method",
      "name": "_compact",
      "line_number": 52,
      "parent": "PersistentEventBus",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/event_bus.py",
      "type": "method",
      "name": "read_recent",
      "line_number": 61,
      "parent": "PersistentEventBus",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "module",
      "name": "firestore_tracker",
      "line_number": 1,
      "parent": null,
      "docstring": "Firestore Usage Tracker\n\nWrapper around Firestore operations to automatically track usage and costs.\nIntegrates with the cost monitoring system to provide accurate billing estimates.\n\nFeatures:\n- Transparent wrapper around existing Firestore operations\n- Automatic cost tracking for reads, writes, deletes\n- Batch operation support\n- Collection and document level tracking\n- Real-time cost estimation",
      "exports": [
        "FirestoreUsageTracker",
        "TrackedFirestoreClient",
        "TrackedCollectionReference",
        "TrackedDocumentReference",
        "TrackedQuery",
        "TrackedQuerySnapshot",
        "TrackedDocumentSnapshot",
        "TrackedWriteBatch",
        "create_tracked_firestore_client",
        "wrap_firestore_client",
        "track_read",
        "track_write",
        "track_delete",
        "collection",
        "document",
        "batch",
        "get",
        "stream",
        "add",
        "document",
        "where",
        "order_by",
        "limit",
        "get",
        "set",
        "update",
        "delete",
        "collection",
        "get",
        "stream",
        "where",
        "order_by",
        "limit",
        "to_dict",
        "get",
        "reference",
        "set",
        "update",
        "delete",
        "commit"
      ]
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "class",
      "name": "FirestoreUsageTracker",
      "line_number": 25,
      "parent": null,
      "docstring": "Tracks Firestore operations and costs.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "class",
      "name": "TrackedFirestoreClient",
      "line_number": 71,
      "parent": null,
      "docstring": "Firestore client wrapper with automatic usage tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "class",
      "name": "TrackedCollectionReference",
      "line_number": 108,
      "parent": null,
      "docstring": "Collection reference wrapper with usage tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "class",
      "name": "TrackedDocumentReference",
      "line_number": 168,
      "parent": null,
      "docstring": "Document reference wrapper with usage tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "class",
      "name": "TrackedQuery",
      "line_number": 218,
      "parent": null,
      "docstring": "Query wrapper with usage tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "class",
      "name": "TrackedQuerySnapshot",
      "line_number": 264,
      "parent": null,
      "docstring": "Query snapshot wrapper with usage tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "class",
      "name": "TrackedDocumentSnapshot",
      "line_number": 286,
      "parent": null,
      "docstring": "Document snapshot wrapper with usage tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "class",
      "name": "TrackedWriteBatch",
      "line_number": 316,
      "parent": null,
      "docstring": "Write batch wrapper with usage tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "function",
      "name": "create_tracked_firestore_client",
      "line_number": 388,
      "parent": null,
      "docstring": "Create a tracked Firestore client from an existing client.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "function",
      "name": "wrap_firestore_client",
      "line_number": 394,
      "parent": null,
      "docstring": "Wrap an existing Firestore client with cost tracking.\n\nUsage:\n    from google.cloud import firestore\n    from ai.monitor.firestore_tracker import wrap_firestore_client\n    \n    # Original client\n    db = firestore.Client()\n    \n    # Wrapped client with cost tracking\n    db = wrap_firestore_client(db)\n    \n    # Use normally - all operations are automatically tracked\n    doc_ref = db.collection('users').document('user123')\n    doc_ref.set({'name': 'John', 'email': 'john@example.com'})",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__init__",
      "line_number": 28,
      "parent": "FirestoreUsageTracker",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "track_read",
      "line_number": 31,
      "parent": "FirestoreUsageTracker",
      "docstring": "Track document read operations.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "track_write",
      "line_number": 44,
      "parent": "FirestoreUsageTracker",
      "docstring": "Track document write operations.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "track_delete",
      "line_number": 57,
      "parent": "FirestoreUsageTracker",
      "docstring": "Track document delete operations.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__init__",
      "line_number": 74,
      "parent": "TrackedFirestoreClient",
      "docstring": "Initialize with existing Firestore client.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "collection",
      "line_number": 79,
      "parent": "TrackedFirestoreClient",
      "docstring": "Get a tracked collection reference.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "document",
      "line_number": 87,
      "parent": "TrackedFirestoreClient",
      "docstring": "Get a tracked document reference.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "batch",
      "line_number": 97,
      "parent": "TrackedFirestoreClient",
      "docstring": "Create a tracked batch write context.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__getattr__",
      "line_number": 103,
      "parent": "TrackedFirestoreClient",
      "docstring": "Delegate unknown attributes to the wrapped client.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__init__",
      "line_number": 111,
      "parent": "TrackedCollectionReference",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "get",
      "line_number": 116,
      "parent": "TrackedCollectionReference",
      "docstring": "Get all documents with tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "stream",
      "line_number": 125,
      "parent": "TrackedCollectionReference",
      "docstring": "Stream documents with tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "add",
      "line_number": 136,
      "parent": "TrackedCollectionReference",
      "docstring": "Add document with tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "document",
      "line_number": 143,
      "parent": "TrackedCollectionReference",
      "docstring": "Get tracked document reference.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "where",
      "line_number": 148,
      "parent": "TrackedCollectionReference",
      "docstring": "Create tracked query.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "order_by",
      "line_number": 153,
      "parent": "TrackedCollectionReference",
      "docstring": "Create tracked ordered query.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "limit",
      "line_number": 158,
      "parent": "TrackedCollectionReference",
      "docstring": "Create tracked limited query.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__getattr__",
      "line_number": 163,
      "parent": "TrackedCollectionReference",
      "docstring": "Delegate unknown attributes to the wrapped collection reference.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__init__",
      "line_number": 171,
      "parent": "TrackedDocumentReference",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "get",
      "line_number": 176,
      "parent": "TrackedDocumentReference",
      "docstring": "Get document with tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "set",
      "line_number": 183,
      "parent": "TrackedDocumentReference",
      "docstring": "Set document with tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "update",
      "line_number": 192,
      "parent": "TrackedDocumentReference",
      "docstring": "Update document with tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "delete",
      "line_number": 201,
      "parent": "TrackedDocumentReference",
      "docstring": "Delete document with tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "collection",
      "line_number": 207,
      "parent": "TrackedDocumentReference",
      "docstring": "Get subcollection with tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__getattr__",
      "line_number": 213,
      "parent": "TrackedDocumentReference",
      "docstring": "Delegate unknown attributes to the wrapped document reference.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__init__",
      "line_number": 221,
      "parent": "TrackedQuery",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "get",
      "line_number": 226,
      "parent": "TrackedQuery",
      "docstring": "Execute query with tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "stream",
      "line_number": 234,
      "parent": "TrackedQuery",
      "docstring": "Stream query results with tracking.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "where",
      "line_number": 244,
      "parent": "TrackedQuery",
      "docstring": "Chain where clause.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "order_by",
      "line_number": 249,
      "parent": "TrackedQuery",
      "docstring": "Chain order by clause.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "limit",
      "line_number": 254,
      "parent": "TrackedQuery",
      "docstring": "Chain limit clause.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__getattr__",
      "line_number": 259,
      "parent": "TrackedQuery",
      "docstring": "Delegate unknown attributes to the wrapped query.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__init__",
      "line_number": 267,
      "parent": "TrackedQuerySnapshot",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__iter__",
      "line_number": 272,
      "parent": "TrackedQuerySnapshot",
      "docstring": "Iterate over documents.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__len__",
      "line_number": 277,
      "parent": "TrackedQuerySnapshot",
      "docstring": "Get document count.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__getattr__",
      "line_number": 281,
      "parent": "TrackedQuerySnapshot",
      "docstring": "Delegate unknown attributes to the wrapped snapshot.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__init__",
      "line_number": 289,
      "parent": "TrackedDocumentSnapshot",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "to_dict",
      "line_number": 294,
      "parent": "TrackedDocumentSnapshot",
      "docstring": "Get document data.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "get",
      "line_number": 298,
      "parent": "TrackedDocumentSnapshot",
      "docstring": "Get field value.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "reference",
      "line_number": 303,
      "parent": "TrackedDocumentSnapshot",
      "docstring": "Get tracked document reference.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__getattr__",
      "line_number": 311,
      "parent": "TrackedDocumentSnapshot",
      "docstring": "Delegate unknown attributes to the wrapped snapshot.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__init__",
      "line_number": 319,
      "parent": "TrackedWriteBatch",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "set",
      "line_number": 328,
      "parent": "TrackedWriteBatch",
      "docstring": "Set document in batch.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "update",
      "line_number": 335,
      "parent": "TrackedWriteBatch",
      "docstring": "Update document in batch.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "delete",
      "line_number": 342,
      "parent": "TrackedWriteBatch",
      "docstring": "Delete document in batch.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "commit",
      "line_number": 349,
      "parent": "TrackedWriteBatch",
      "docstring": "Commit batch and track usage.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "_extract_collection_path",
      "line_number": 371,
      "parent": "TrackedWriteBatch",
      "docstring": "Extract collection path from document reference.",
      "exports": null
    },
    {
      "path": "ai/monitor/firestore_tracker.py",
      "type": "method",
      "name": "__getattr__",
      "line_number": 383,
      "parent": "TrackedWriteBatch",
      "docstring": "Delegate unknown attributes to the wrapped batch.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "module",
      "name": "cost_optimizer",
      "line_number": 1,
      "parent": null,
      "docstring": "Cost Optimization Utilities\n\nAdvanced cost optimization tools for analyzing usage patterns,\nidentifying waste, and providing actionable recommendations.\n\nFeatures:\n- Usage pattern analysis\n- Cost anomaly detection\n- Model optimization suggestions\n- Batch operation recommendations\n- Rate limiting guidance\n- Cost forecasting",
      "exports": [
        "OptimizationRecommendation",
        "UsagePattern",
        "CostOptimizer",
        "get_cost_optimizer",
        "quick_optimization_report",
        "analyze_usage_patterns",
        "generate_recommendations",
        "forecast_monthly_cost",
        "get_cost_breakdown_analysis"
      ]
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "class",
      "name": "OptimizationRecommendation",
      "line_number": 28,
      "parent": null,
      "docstring": "Single optimization recommendation.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "class",
      "name": "UsagePattern",
      "line_number": 40,
      "parent": null,
      "docstring": "Detected usage pattern.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "class",
      "name": "CostOptimizer",
      "line_number": 49,
      "parent": null,
      "docstring": "Advanced cost optimization analyzer.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "function",
      "name": "get_cost_optimizer",
      "line_number": 432,
      "parent": null,
      "docstring": "Get cost optimizer instance.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "function",
      "name": "quick_optimization_report",
      "line_number": 437,
      "parent": null,
      "docstring": "Generate a quick optimization report.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "method",
      "name": "__init__",
      "line_number": 52,
      "parent": "CostOptimizer",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "method",
      "name": "analyze_usage_patterns",
      "line_number": 55,
      "parent": "CostOptimizer",
      "docstring": "Analyze usage patterns to identify optimization opportunities.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "method",
      "name": "_detect_high_cost_model_patterns",
      "line_number": 83,
      "parent": "CostOptimizer",
      "docstring": "Detect patterns with high-cost models that could be optimized.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "method",
      "name": "_detect_batching_opportunities",
      "line_number": 118,
      "parent": "CostOptimizer",
      "docstring": "Detect opportunities for batching operations.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "method",
      "name": "_detect_repetitive_operations",
      "line_number": 153,
      "parent": "CostOptimizer",
      "docstring": "Detect repetitive operations that could benefit from caching.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "method",
      "name": "_detect_usage_spikes",
      "line_number": 187,
      "parent": "CostOptimizer",
      "docstring": "Detect usage spikes that might indicate inefficient patterns.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "method",
      "name": "_detect_firestore_inefficiencies",
      "line_number": 227,
      "parent": "CostOptimizer",
      "docstring": "Detect inefficient Firestore usage patterns.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "method",
      "name": "generate_recommendations",
      "line_number": 265,
      "parent": "CostOptimizer",
      "docstring": "Generate comprehensive optimization recommendations.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "method",
      "name": "forecast_monthly_cost",
      "line_number": 348,
      "parent": "CostOptimizer",
      "docstring": "Forecast monthly costs based on recent usage trends.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "method",
      "name": "get_cost_breakdown_analysis",
      "line_number": 389,
      "parent": "CostOptimizer",
      "docstring": "Get detailed cost breakdown analysis.",
      "exports": null
    },
    {
      "path": "ai/monitor/cost_optimizer.py",
      "type": "method",
      "name": "_get_service_optimization_priority",
      "line_number": 419,
      "parent": "CostOptimizer",
      "docstring": "Determine optimization priority for a service.",
      "exports": null
    },
    {
      "path": "ai/monitor/status.py",
      "type": "module",
      "name": "status",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "MonitorStatus",
        "get_status",
        "to_dict"
      ]
    },
    {
      "path": "ai/monitor/status.py",
      "type": "class",
      "name": "MonitorStatus",
      "line_number": 14,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/status.py",
      "type": "function",
      "name": "get_status",
      "line_number": 26,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/monitor/status.py",
      "type": "method",
      "name": "to_dict",
      "line_number": 22,
      "parent": "MonitorStatus",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "module",
      "name": "status",
      "line_number": 1,
      "parent": null,
      "docstring": "Enhanced status update system for real-time agent coordination.\n\nThis module provides comprehensive status tracking and real-time updates\nfor agent coordination, including progress tracking, dependency management,\nand user notification integration.\n\nCross-references:\n    - Execution Monitor: ai/execution/monitor.py for execution status\n    - Telegram Bot: ai/interface/telegram_bot.py for user notifications\n    - Memory System: ai/memory/README.md for status persistence\n    - Agent Spawner: ai/interface/agent_spawner.py for agent lifecycle\n\nRelated:\n    - Real-time progress tracking across agent teams\n    - Dependency resolution and coordination messaging\n    - Status aggregation and reporting for complex workflows",
      "exports": [
        "StatusLevel",
        "UpdateType",
        "StatusUpdate",
        "CoordinationContext",
        "StatusSummary",
        "StatusCoordinator",
        "get_status_coordinator",
        "register_context",
        "subscribe_to_updates",
        "unsubscribe_from_updates"
      ]
    },
    {
      "path": "ai/coordination/status.py",
      "type": "class",
      "name": "StatusLevel",
      "line_number": 36,
      "parent": null,
      "docstring": "Status update severity levels.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "class",
      "name": "UpdateType",
      "line_number": 45,
      "parent": null,
      "docstring": "Types of status updates.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "class",
      "name": "StatusUpdate",
      "line_number": 56,
      "parent": null,
      "docstring": "Individual status update record.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "class",
      "name": "CoordinationContext",
      "line_number": 73,
      "parent": null,
      "docstring": "Context for coordinating related status updates.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "class",
      "name": "StatusSummary",
      "line_number": 87,
      "parent": null,
      "docstring": "Aggregated status summary for reporting.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "class",
      "name": "StatusCoordinator",
      "line_number": 101,
      "parent": null,
      "docstring": "Coordinates status updates and notifications across agent teams.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "function",
      "name": "get_status_coordinator",
      "line_number": 600,
      "parent": null,
      "docstring": "Get the global status coordinator instance.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "method",
      "name": "__init__",
      "line_number": 104,
      "parent": "StatusCoordinator",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "method",
      "name": "register_context",
      "line_number": 139,
      "parent": "StatusCoordinator",
      "docstring": "Register a new coordination context for status tracking.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "method",
      "name": "subscribe_to_updates",
      "line_number": 346,
      "parent": "StatusCoordinator",
      "docstring": "Subscribe to status updates for a specific context.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "method",
      "name": "unsubscribe_from_updates",
      "line_number": 350,
      "parent": "StatusCoordinator",
      "docstring": "Unsubscribe from status updates.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "method",
      "name": "_generate_standard_milestones",
      "line_number": 358,
      "parent": "StatusCoordinator",
      "docstring": "Generate standard milestones based on agent types.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "method",
      "name": "_should_notify_user",
      "line_number": 421,
      "parent": "StatusCoordinator",
      "docstring": "Determine if user should be notified about this update.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "method",
      "name": "_create_progress_bar",
      "line_number": 504,
      "parent": "StatusCoordinator",
      "docstring": "Create a visual progress bar.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "method",
      "name": "_analyze_agent_statuses",
      "line_number": 510,
      "parent": "StatusCoordinator",
      "docstring": "Analyze current status of all agents.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "method",
      "name": "_get_phase_status",
      "line_number": 531,
      "parent": "StatusCoordinator",
      "docstring": "Get status of different execution phases.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "method",
      "name": "_get_next_milestones",
      "line_number": 542,
      "parent": "StatusCoordinator",
      "docstring": "Get the next milestones that are not yet completed.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "method",
      "name": "_identify_blocking_dependencies",
      "line_number": 546,
      "parent": "StatusCoordinator",
      "docstring": "Identify dependencies that are currently blocking progress.",
      "exports": null
    },
    {
      "path": "ai/coordination/status.py",
      "type": "method",
      "name": "_estimate_completion",
      "line_number": 563,
      "parent": "StatusCoordinator",
      "docstring": "Estimate completion time based on progress velocity.",
      "exports": null
    },
    {
      "path": "ai/memory/store.py",
      "type": "module",
      "name": "store",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "set_memory_store",
        "get_store",
        "render_context",
        "MemoryItem",
        "MemoryStore",
        "InMemoryMemoryStore",
        "write",
        "query",
        "write",
        "query"
      ]
    },
    {
      "path": "ai/memory/store.py",
      "type": "function",
      "name": "set_memory_store",
      "line_number": 13,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/memory/store.py",
      "type": "function",
      "name": "get_store",
      "line_number": 18,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/memory/store.py",
      "type": "function",
      "name": "render_context",
      "line_number": 26,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/memory/store.py",
      "type": "class",
      "name": "MemoryItem",
      "line_number": 33,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/memory/store.py",
      "type": "class",
      "name": "MemoryStore",
      "line_number": 40,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/memory/store.py",
      "type": "class",
      "name": "InMemoryMemoryStore",
      "line_number": 48,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/memory/store.py",
      "type": "method",
      "name": "write",
      "line_number": 41,
      "parent": "MemoryStore",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/memory/store.py",
      "type": "method",
      "name": "query",
      "line_number": 44,
      "parent": "MemoryStore",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/memory/store.py",
      "type": "method",
      "name": "__init__",
      "line_number": 51,
      "parent": "InMemoryMemoryStore",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/memory/store.py",
      "type": "method",
      "name": "write",
      "line_number": 54,
      "parent": "InMemoryMemoryStore",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/memory/store.py",
      "type": "method",
      "name": "query",
      "line_number": 60,
      "parent": "InMemoryMemoryStore",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "module",
      "name": "intelligent_store",
      "line_number": 1,
      "parent": null,
      "docstring": "Intelligent Memory Store\n\nEnhanced memory system with semantic search, auto-tagging, and context intelligence.\nExtends the basic memory store with AI-powered features for better agent coordination.\n\nCross-references:\n    - Base implementation: ai/memory/store.py\n    - Memory tools: ai/tools/memory_tools.py\n    - ADR-008: Intelligent Memory System (to be created)",
      "exports": [
        "MemoryType",
        "EnhancedMemoryItem",
        "IntelligentMemoryStore",
        "write",
        "query",
        "search_by_keywords",
        "search_by_type",
        "get_related_memories",
        "get_by_id",
        "get_memory_analytics",
        "optimize_memory"
      ]
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "class",
      "name": "MemoryType",
      "line_number": 25,
      "parent": null,
      "docstring": "Classification of memory content types.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "class",
      "name": "EnhancedMemoryItem",
      "line_number": 37,
      "parent": null,
      "docstring": "Enhanced memory item with intelligent metadata.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "class",
      "name": "IntelligentMemoryStore",
      "line_number": 46,
      "parent": null,
      "docstring": "Enhanced memory store with semantic search and auto-classification.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "__init__",
      "line_number": 49,
      "parent": "IntelligentMemoryStore",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "_generate_id",
      "line_number": 55,
      "parent": "IntelligentMemoryStore",
      "docstring": "Generate unique memory ID.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "_extract_keywords",
      "line_number": 60,
      "parent": "IntelligentMemoryStore",
      "docstring": "Extract relevant keywords from content.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "_classify_content",
      "line_number": 80,
      "parent": "IntelligentMemoryStore",
      "docstring": "Auto-classify memory content type.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "_calculate_importance",
      "line_number": 123,
      "parent": "IntelligentMemoryStore",
      "docstring": "Calculate importance score for memory item.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "_generate_summary",
      "line_number": 152,
      "parent": "IntelligentMemoryStore",
      "docstring": "Generate a summary for long content.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "_find_related_items",
      "line_number": 164,
      "parent": "IntelligentMemoryStore",
      "docstring": "Find related memory items based on keyword overlap.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "_update_indexes",
      "line_number": 179,
      "parent": "IntelligentMemoryStore",
      "docstring": "Update internal indexes for fast lookup.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "write",
      "line_number": 188,
      "parent": "IntelligentMemoryStore",
      "docstring": "Write enhanced memory item with automatic intelligence.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "query",
      "line_number": 253,
      "parent": "IntelligentMemoryStore",
      "docstring": "Enhanced query with intelligent filtering.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "search_by_keywords",
      "line_number": 267,
      "parent": "IntelligentMemoryStore",
      "docstring": "Search memories by keywords.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "search_by_type",
      "line_number": 284,
      "parent": "IntelligentMemoryStore",
      "docstring": "Search memories by type.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "get_related_memories",
      "line_number": 290,
      "parent": "IntelligentMemoryStore",
      "docstring": "Get memories related to a specific memory.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "get_by_id",
      "line_number": 304,
      "parent": "IntelligentMemoryStore",
      "docstring": "Get memory by ID.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "get_memory_analytics",
      "line_number": 311,
      "parent": "IntelligentMemoryStore",
      "docstring": "Get analytics about memory usage.",
      "exports": null
    },
    {
      "path": "ai/memory/intelligent_store.py",
      "type": "method",
      "name": "optimize_memory",
      "line_number": 331,
      "parent": "IntelligentMemoryStore",
      "docstring": "Optimize memory by removing low-importance old items.",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "module",
      "name": "firestore_store",
      "line_number": 1,
      "parent": null,
      "docstring": "Firestore Memory Store\n\nPersistent memory store implementation using Google Cloud Firestore for\nlong-term agent memory across sessions and deployments.\n\nFeatures:\n- Persistent storage across agent sessions\n- Automatic memory consolidation and cleanup\n- Activity-based memory scoring and relevance\n- Graceful fallback to in-memory store if Firestore unavailable\n\nCross-references:\n    - ADR-004: Persistent Agent Memory\n    - ai/memory/store.py: Base memory store interface\n    - ai/memory/intelligent_store.py: Enhanced memory features",
      "exports": [
        "FirestoreMemoryStore",
        "create_firestore_memory_store",
        "write",
        "consolidate_memories",
        "search_firestore",
        "get_memory_stats",
        "force_sync"
      ]
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "class",
      "name": "FirestoreMemoryStore",
      "line_number": 41,
      "parent": null,
      "docstring": "Firestore-backed intelligent memory store for persistent agent memory.\n\nExtends IntelligentMemoryStore with:\n- Persistent storage in Google Cloud Firestore\n- Automatic memory consolidation and cleanup\n- Cross-session memory persistence\n- Activity-based memory relevance scoring",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "function",
      "name": "create_firestore_memory_store",
      "line_number": 438,
      "parent": null,
      "docstring": "Factory function to create FirestoreMemoryStore with error handling.\n\nArgs:\n    project_id: Google Cloud project ID\n    **kwargs: Additional arguments for FirestoreMemoryStore\n    \nReturns:\n    FirestoreMemoryStore instance (may fallback to in-memory if Firestore unavailable)",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "method",
      "name": "__init__",
      "line_number": 52,
      "parent": "FirestoreMemoryStore",
      "docstring": "Initialize Firestore memory store.\n\nArgs:\n    project_id: Google Cloud project ID. If None, will use default.\n    collection_name: Firestore collection name for memories\n    max_local_cache: Maximum items to keep in local cache\n    sync_on_write: Whether to sync to Firestore on every write",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "method",
      "name": "_init_firestore",
      "line_number": 82,
      "parent": "FirestoreMemoryStore",
      "docstring": "Initialize Firestore client with error handling.",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "method",
      "name": "_load_from_firestore",
      "line_number": 100,
      "parent": "FirestoreMemoryStore",
      "docstring": "Load existing memories from Firestore into local cache.",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "method",
      "name": "_dict_to_memory_item",
      "line_number": 137,
      "parent": "FirestoreMemoryStore",
      "docstring": "Convert Firestore document data to EnhancedMemoryItem.",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "method",
      "name": "_memory_item_to_dict",
      "line_number": 165,
      "parent": "FirestoreMemoryStore",
      "docstring": "Convert EnhancedMemoryItem to Firestore document data.",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "method",
      "name": "_sync_to_firestore",
      "line_number": 181,
      "parent": "FirestoreMemoryStore",
      "docstring": "Sync a single memory item to Firestore.",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "method",
      "name": "write",
      "line_number": 195,
      "parent": "FirestoreMemoryStore",
      "docstring": "Write enhanced memory item with Firestore persistence.",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "method",
      "name": "_manage_local_cache",
      "line_number": 209,
      "parent": "FirestoreMemoryStore",
      "docstring": "Manage local cache size by removing least important old items.",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "method",
      "name": "consolidate_memories",
      "line_number": 229,
      "parent": "FirestoreMemoryStore",
      "docstring": "Consolidate and clean up old memories in Firestore.\n\nArgs:\n    days_back: How many days back to consider for consolidation\n    min_importance: Minimum importance score to keep memories\n    \nReturns:\n    Stats about consolidation process",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "method",
      "name": "_update_access_times",
      "line_number": 287,
      "parent": "FirestoreMemoryStore",
      "docstring": "Update last_accessed times for frequently used memories.",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "method",
      "name": "search_firestore",
      "line_number": 324,
      "parent": "FirestoreMemoryStore",
      "docstring": "Search Firestore directly for memories (beyond local cache).\n\nArgs:\n    keywords: Keywords to search for\n    limit: Maximum results to return\n    memory_type: Filter by memory type\n    \nReturns:\n    List of matching memory items",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "method",
      "name": "get_memory_stats",
      "line_number": 378,
      "parent": "FirestoreMemoryStore",
      "docstring": "Get comprehensive memory statistics including Firestore metrics.",
      "exports": null
    },
    {
      "path": "ai/memory/firestore_store.py",
      "type": "method",
      "name": "force_sync",
      "line_number": 409,
      "parent": "FirestoreMemoryStore",
      "docstring": "Force sync all local memories to Firestore.",
      "exports": null
    },
    {
      "path": "ai/memory/firestore.py",
      "type": "module",
      "name": "firestore",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "FirestoreMemoryStore",
        "write",
        "query"
      ]
    },
    {
      "path": "ai/memory/firestore.py",
      "type": "class",
      "name": "FirestoreMemoryStore",
      "line_number": 10,
      "parent": null,
      "docstring": "Firestore-backed memory store (staging-only as per ADR-002/003).\n\nRequires google-cloud-firestore and FIREBASE_* env vars. If prerequisites are\nnot met, raises RuntimeError at init.",
      "exports": null
    },
    {
      "path": "ai/memory/firestore.py",
      "type": "method",
      "name": "__init__",
      "line_number": 17,
      "parent": "FirestoreMemoryStore",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/memory/firestore.py",
      "type": "method",
      "name": "write",
      "line_number": 36,
      "parent": "FirestoreMemoryStore",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/memory/firestore.py",
      "type": "method",
      "name": "query",
      "line_number": 47,
      "parent": "FirestoreMemoryStore",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/integration/mcp_discovery.py",
      "type": "module",
      "name": "mcp_discovery",
      "line_number": 1,
      "parent": null,
      "docstring": "Advanced MCP Server Discovery and Integration System.\n\nThis module provides intelligent discovery, capability mapping, and enhanced\nintegration with MCP servers for research and documentation tasks. It includes\nautomatic server discovery, health monitoring, and dynamic capability routing.\n\nCross-references:\n    - MCP Client: ai/tools/mcp_client.py for core MCP functionality\n    - Agent Spawner: ai/interface/agent_spawner.py for tool assignment\n    - Performance Analytics: ai/analytics/performance.py for server metrics\n    - Memory System: ai/memory/README.md for capability caching\n\nRelated:\n    - Dynamic server discovery and health monitoring\n    - Intelligent capability mapping and routing\n    - Enhanced error handling and retry mechanisms\n    - Automated server performance optimization",
      "exports": [
        "MCPServerCapability",
        "MCPServerInfo",
        "CapabilityRequest",
        "MCPDiscoverySystem",
        "get_mcp_discovery",
        "get_discovery_summary"
      ]
    },
    {
      "path": "ai/integration/mcp_discovery.py",
      "type": "class",
      "name": "MCPServerCapability",
      "line_number": 40,
      "parent": null,
      "docstring": "Represents a specific capability of an MCP server.",
      "exports": null
    },
    {
      "path": "ai/integration/mcp_discovery.py",
      "type": "class",
      "name": "MCPServerInfo",
      "line_number": 54,
      "parent": null,
      "docstring": "Information about a discovered MCP server.",
      "exports": null
    },
    {
      "path": "ai/integration/mcp_discovery.py",
      "type": "class",
      "name": "CapabilityRequest",
      "line_number": 75,
      "parent": null,
      "docstring": "Request for a specific capability from MCP servers.",
      "exports": null
    },
    {
      "path": "ai/integration/mcp_discovery.py",
      "type": "class",
      "name": "MCPDiscoverySystem",
      "line_number": 87,
      "parent": null,
      "docstring": "Advanced MCP server discovery and integration system.",
      "exports": null
    },
    {
      "path": "ai/integration/mcp_discovery.py",
      "type": "function",
      "name": "get_mcp_discovery",
      "line_number": 782,
      "parent": null,
      "docstring": "Get the global MCP discovery system instance.",
      "exports": null
    },
    {
      "path": "ai/integration/mcp_discovery.py",
      "type": "method",
      "name": "__init__",
      "line_number": 90,
      "parent": "MCPDiscoverySystem",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/integration/mcp_discovery.py",
      "type": "method",
      "name": "_categorize_capability",
      "line_number": 457,
      "parent": "MCPDiscoverySystem",
      "docstring": "Categorize a capability based on its name and description.",
      "exports": null
    },
    {
      "path": "ai/integration/mcp_discovery.py",
      "type": "method",
      "name": "_update_capability_index",
      "line_number": 480,
      "parent": "MCPDiscoverySystem",
      "docstring": "Update the capability index for fast lookups.",
      "exports": null
    },
    {
      "path": "ai/integration/mcp_discovery.py",
      "type": "method",
      "name": "get_discovery_summary",
      "line_number": 757,
      "parent": "MCPDiscoverySystem",
      "docstring": "Get a summary of discovered servers and capabilities.",
      "exports": null
    },
    {
      "path": "ai/integration/github.py",
      "type": "module",
      "name": "github",
      "line_number": 1,
      "parent": null,
      "docstring": "GitHub integration for automated PR creation from agent work.\n\nThis module provides functionality to automatically create pull requests\nwhen agents complete development tasks, including code changes, tests,\nand documentation updates.\n\nCross-references:\n    - Agent Spawner: ai/interface/agent_spawner.py for agent completion events\n    - Telegram Bot: ai/interface/telegram_bot.py for user notification integration\n    - Memory System: ai/memory/README.md for tracking PR status and history\n    - Tool Reference: docs/TOOLS.md for GitHub tool availability\n\nRelated:\n    - GitHub CLI integration for PR creation and management\n    - Branch management for agent work isolation\n    - Automated commit generation with context and attribution",
      "exports": [
        "GitHubPRRequest",
        "PRResult",
        "GitHubIntegration",
        "get_github_integration",
        "is_configured"
      ]
    },
    {
      "path": "ai/integration/github.py",
      "type": "class",
      "name": "GitHubPRRequest",
      "line_number": 36,
      "parent": null,
      "docstring": "Request for creating a GitHub pull request from agent work.",
      "exports": null
    },
    {
      "path": "ai/integration/github.py",
      "type": "class",
      "name": "PRResult",
      "line_number": 51,
      "parent": null,
      "docstring": "Result of PR creation attempt.",
      "exports": null
    },
    {
      "path": "ai/integration/github.py",
      "type": "class",
      "name": "GitHubIntegration",
      "line_number": 61,
      "parent": null,
      "docstring": "Manages GitHub integration for automated PR creation from agent work.",
      "exports": null
    },
    {
      "path": "ai/integration/github.py",
      "type": "function",
      "name": "get_github_integration",
      "line_number": 485,
      "parent": null,
      "docstring": "Get the global GitHub integration instance.",
      "exports": null
    },
    {
      "path": "ai/integration/github.py",
      "type": "method",
      "name": "__init__",
      "line_number": 64,
      "parent": "GitHubIntegration",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/integration/github.py",
      "type": "method",
      "name": "is_configured",
      "line_number": 70,
      "parent": "GitHubIntegration",
      "docstring": "Check if GitHub integration is properly configured.",
      "exports": null
    },
    {
      "path": "ai/integration/github.py",
      "type": "method",
      "name": "_is_gh_cli_available",
      "line_number": 264,
      "parent": "GitHubIntegration",
      "docstring": "Check if GitHub CLI is available.",
      "exports": null
    },
    {
      "path": "ai/integration/github.py",
      "type": "method",
      "name": "_generate_pr_title",
      "line_number": 341,
      "parent": "GitHubIntegration",
      "docstring": "Generate a descriptive PR title based on user request and analysis.",
      "exports": null
    },
    {
      "path": "ai/integration/github.py",
      "type": "method",
      "name": "_generate_pr_description",
      "line_number": 360,
      "parent": "GitHubIntegration",
      "docstring": "Generate comprehensive PR description with agent attribution.",
      "exports": null
    },
    {
      "path": "ai/integration/github.py",
      "type": "method",
      "name": "_generate_commit_message",
      "line_number": 438,
      "parent": "GitHubIntegration",
      "docstring": "Generate detailed commit message with agent attribution.",
      "exports": null
    },
    {
      "path": "ai/runner/mvp.py",
      "type": "module",
      "name": "mvp",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "MVPSummary",
        "run_mvp",
        "to_dict"
      ]
    },
    {
      "path": "ai/runner/mvp.py",
      "type": "class",
      "name": "MVPSummary",
      "line_number": 13,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/runner/mvp.py",
      "type": "function",
      "name": "run_mvp",
      "line_number": 24,
      "parent": null,
      "docstring": "Run an offline, safe MVP planning pass using local tools.\n\n- Initializes in-memory store\n- Writes the goal to memory\n- Proposes next steps (heuristic)\n- Generates release notes from memory\n- Runs DoD checks (local)\nReturns a dict summary for easy printing/automation.",
      "exports": null
    },
    {
      "path": "ai/runner/mvp.py",
      "type": "method",
      "name": "to_dict",
      "line_number": 20,
      "parent": "MVPSummary",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "module",
      "name": "__init__",
      "line_number": 1,
      "parent": null,
      "docstring": "Advanced Agent Workflow Orchestration System (AAWOS) - Main Module.\n\nThis module provides the main entry point for the Advanced Agent Workflow\nOrchestration System, bringing together all components for comprehensive\nworkflow management and execution.\n\nCross-references:\n    - Workflow Types: ai/workflows/types.py for core data structures\n    - Workflow Language: ai/workflows/language.py for WDL\n    - Workflow Engine: ai/workflows/engine.py for execution\n    - Workflow Templates: ai/workflows/templates.py for common patterns\n    - Enhanced MCP: ai/tools/enhanced_mcp.py for external services\n    - Agent System: ai/interface/agent_spawner.py for agent coordination\n\nFeatures:\n    - Complete workflow lifecycle management\n    - Template-based workflow creation\n    - Real-time execution monitoring\n    - Advanced error recovery and adaptation\n    - Integration with agent spawning and MCP services\n    - Comprehensive testing and validation",
      "exports": [
        "WorkflowDefinition",
        "WorkflowExecution",
        "WorkflowTemplate",
        "WorkflowNode",
        "WorkflowEdge",
        "WorkflowCondition",
        "WorkflowVariable",
        "WorkflowStatus",
        "NodeType",
        "ExecutionStrategy",
        "RetryStrategy",
        "AgentSpawnNode",
        "AgentExecuteNode",
        "ConditionNode",
        "ParallelNode",
        "LoopNode",
        "MCPCallNode",
        "HumanApprovalNode",
        "WorkflowBuilder",
        "WDLParser",
        "WDLExporter",
        "WorkflowSyntaxError",
        "create_workflow",
        "parse_workflow",
        "load_workflow",
        "save_workflow",
        "WorkflowExecutionEngine",
        "WorkflowExecutionError",
        "NodeExecutionError",
        "get_workflow_engine",
        "TemplateLibrary",
        "get_template_library",
        "list_workflow_templates",
        "get_workflow_template",
        "create_workflow_from_template",
        "get_template_categories",
        "WorkflowOrchestrator"
      ]
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "class",
      "name": "WorkflowOrchestrator",
      "line_number": 84,
      "parent": null,
      "docstring": "Main orchestrator for the Advanced Agent Workflow System.\n\nThis class provides a high-level interface for creating, managing,\nand executing workflows with full integration of all AAWOS components.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "function",
      "name": "quick_workflow",
      "line_number": 254,
      "parent": null,
      "docstring": "Create a workflow builder quickly.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "__init__",
      "line_number": 91,
      "parent": "WorkflowOrchestrator",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "create_workflow_builder",
      "line_number": 106,
      "parent": "WorkflowOrchestrator",
      "docstring": "Create a new workflow builder.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "load_workflow_from_file",
      "line_number": 110,
      "parent": "WorkflowOrchestrator",
      "docstring": "Load a workflow from a file.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "parse_workflow_from_string",
      "line_number": 114,
      "parent": "WorkflowOrchestrator",
      "docstring": "Parse a workflow from string content.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "save_workflow_to_file",
      "line_number": 118,
      "parent": "WorkflowOrchestrator",
      "docstring": "Save a workflow to a file.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "list_templates",
      "line_number": 123,
      "parent": "WorkflowOrchestrator",
      "docstring": "List available workflow templates.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "get_template",
      "line_number": 127,
      "parent": "WorkflowOrchestrator",
      "docstring": "Get a workflow template by ID.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "create_from_template",
      "line_number": 131,
      "parent": "WorkflowOrchestrator",
      "docstring": "Create a workflow from a template.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "get_template_categories",
      "line_number": 140,
      "parent": "WorkflowOrchestrator",
      "docstring": "Get all available template categories.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "get_execution_status",
      "line_number": 169,
      "parent": "WorkflowOrchestrator",
      "docstring": "Get the status of a workflow execution.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "get_execution_log",
      "line_number": 185,
      "parent": "WorkflowOrchestrator",
      "docstring": "Get the execution log for a workflow.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "get_system_metrics",
      "line_number": 190,
      "parent": "WorkflowOrchestrator",
      "docstring": "Get comprehensive system metrics.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "validate_workflow",
      "line_number": 209,
      "parent": "WorkflowOrchestrator",
      "docstring": "Validate a workflow definition.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "test_workflow_syntax",
      "line_number": 213,
      "parent": "WorkflowOrchestrator",
      "docstring": "Test workflow syntax and return validation results.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "export_workflow_to_yaml",
      "line_number": 238,
      "parent": "WorkflowOrchestrator",
      "docstring": "Export workflow to YAML format.",
      "exports": null
    },
    {
      "path": "ai/workflows/__init__.py",
      "type": "method",
      "name": "export_workflow_to_json",
      "line_number": 242,
      "parent": "WorkflowOrchestrator",
      "docstring": "Export workflow to JSON format.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "module",
      "name": "types",
      "line_number": 1,
      "parent": null,
      "docstring": "Advanced Agent Workflow Orchestration System - Core Types and Models.\n\nThis module defines the foundational data types, models, and enums for the\nAdvanced Agent Workflow Orchestration System (AAWOS). It provides a comprehensive\nframework for defining, executing, and monitoring complex multi-agent workflows.\n\nCross-references:\n    - Workflow Engine: ai/workflows/engine.py for execution logic\n    - Workflow Language: ai/workflows/language.py for WDL parsing\n    - Agent Integration: ai/interface/agent_spawner.py for agent lifecycle\n    - Memory System: ai/memory/README.md for workflow state persistence\n\nRelated:\n    - Complex multi-step agent coordination\n    - Conditional workflow execution with branching logic\n    - Parallel execution with dependency management\n    - Error recovery and alternative path execution\n    - Dynamic workflow adaptation based on results",
      "exports": [
        "WorkflowStatus",
        "NodeType",
        "ExecutionStrategy",
        "RetryStrategy",
        "ConditionOperator",
        "WorkflowVariable",
        "WorkflowCondition",
        "RetryConfig",
        "WorkflowEdge",
        "WorkflowNode",
        "AgentSpawnNode",
        "AgentExecuteNode",
        "ConditionNode",
        "ParallelNode",
        "LoopNode",
        "MCPCallNode",
        "HumanApprovalNode",
        "NodeExecution",
        "WorkflowDefinition",
        "WorkflowExecution",
        "WorkflowTemplate",
        "evaluate",
        "evaluate_conditions",
        "add_node",
        "add_edge",
        "connect",
        "validate",
        "add_log",
        "set_variable",
        "get_variable",
        "mark_node_completed",
        "mark_node_failed",
        "calculate_progress",
        "is_completed",
        "has_failed",
        "instantiate"
      ]
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "WorkflowStatus",
      "line_number": 32,
      "parent": null,
      "docstring": "Status of a workflow execution.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "NodeType",
      "line_number": 43,
      "parent": null,
      "docstring": "Types of nodes in a workflow graph.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "ExecutionStrategy",
      "line_number": 60,
      "parent": null,
      "docstring": "Strategies for executing workflow nodes.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "RetryStrategy",
      "line_number": 68,
      "parent": null,
      "docstring": "Retry strategies for failed workflow nodes.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "ConditionOperator",
      "line_number": 77,
      "parent": null,
      "docstring": "Operators for workflow conditions.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "WorkflowVariable",
      "line_number": 93,
      "parent": null,
      "docstring": "Variable definition for workflow context.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "WorkflowCondition",
      "line_number": 104,
      "parent": null,
      "docstring": "Condition definition for conditional workflow execution.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "RetryConfig",
      "line_number": 150,
      "parent": null,
      "docstring": "Configuration for retry behavior.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "WorkflowEdge",
      "line_number": 162,
      "parent": null,
      "docstring": "Edge connecting two workflow nodes.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "WorkflowNode",
      "line_number": 173,
      "parent": null,
      "docstring": "Base workflow node definition.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "AgentSpawnNode",
      "line_number": 199,
      "parent": null,
      "docstring": "Node for spawning new agents during workflow execution.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "AgentExecuteNode",
      "line_number": 212,
      "parent": null,
      "docstring": "Node for executing tasks with spawned agents.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "ConditionNode",
      "line_number": 224,
      "parent": null,
      "docstring": "Node for conditional workflow branching.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "ParallelNode",
      "line_number": 252,
      "parent": null,
      "docstring": "Node for parallel execution of multiple branches.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "LoopNode",
      "line_number": 264,
      "parent": null,
      "docstring": "Node for loop execution with various loop types.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "MCPCallNode",
      "line_number": 285,
      "parent": null,
      "docstring": "Node for calling MCP (Model Context Protocol) services.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "HumanApprovalNode",
      "line_number": 298,
      "parent": null,
      "docstring": "Node for human approval/intervention in workflow.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "NodeExecution",
      "line_number": 311,
      "parent": null,
      "docstring": "Runtime execution state for a workflow node.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "WorkflowDefinition",
      "line_number": 333,
      "parent": null,
      "docstring": "Complete definition of a workflow.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "WorkflowExecution",
      "line_number": 418,
      "parent": null,
      "docstring": "Runtime execution state of a workflow.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "class",
      "name": "WorkflowTemplate",
      "line_number": 504,
      "parent": null,
      "docstring": "Template for creating workflow definitions.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "evaluate",
      "line_number": 111,
      "parent": "WorkflowCondition",
      "docstring": "Evaluate the condition against the workflow context.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "__post_init__",
      "line_number": 207,
      "parent": "AgentSpawnNode",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "__post_init__",
      "line_number": 219,
      "parent": "AgentExecuteNode",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "__post_init__",
      "line_number": 231,
      "parent": "ConditionNode",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "evaluate_conditions",
      "line_number": 234,
      "parent": "ConditionNode",
      "docstring": "Evaluate all conditions based on logic operator.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "__post_init__",
      "line_number": 259,
      "parent": "ParallelNode",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "__post_init__",
      "line_number": 280,
      "parent": "LoopNode",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "__post_init__",
      "line_number": 293,
      "parent": "MCPCallNode",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "__post_init__",
      "line_number": 306,
      "parent": "HumanApprovalNode",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "add_node",
      "line_number": 361,
      "parent": "WorkflowDefinition",
      "docstring": "Add a node to the workflow.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "add_edge",
      "line_number": 367,
      "parent": "WorkflowDefinition",
      "docstring": "Add an edge to the workflow.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "connect",
      "line_number": 373,
      "parent": "WorkflowDefinition",
      "docstring": "Convenience method to connect two nodes.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "validate",
      "line_number": 384,
      "parent": "WorkflowDefinition",
      "docstring": "Validate the workflow definition and return any errors.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "add_log",
      "line_number": 444,
      "parent": "WorkflowExecution",
      "docstring": "Add an entry to the execution log.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "set_variable",
      "line_number": 450,
      "parent": "WorkflowExecution",
      "docstring": "Set a workflow variable.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "get_variable",
      "line_number": 455,
      "parent": "WorkflowExecution",
      "docstring": "Get a workflow variable.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "mark_node_completed",
      "line_number": 459,
      "parent": "WorkflowExecution",
      "docstring": "Mark a node as completed.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "mark_node_failed",
      "line_number": 471,
      "parent": "WorkflowExecution",
      "docstring": "Mark a node as failed.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "calculate_progress",
      "line_number": 483,
      "parent": "WorkflowExecution",
      "docstring": "Calculate workflow execution progress as percentage.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "is_completed",
      "line_number": 492,
      "parent": "WorkflowExecution",
      "docstring": "Check if workflow execution is completed.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "has_failed",
      "line_number": 498,
      "parent": "WorkflowExecution",
      "docstring": "Check if workflow execution has failed.",
      "exports": null
    },
    {
      "path": "ai/workflows/types.py",
      "type": "method",
      "name": "instantiate",
      "line_number": 523,
      "parent": "WorkflowTemplate",
      "docstring": "Create a workflow definition from this template with given parameters.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "module",
      "name": "templates",
      "line_number": 1,
      "parent": null,
      "docstring": "Workflow Template Library - Common Patterns and Templates.\n\nThis module provides a comprehensive library of common workflow templates for \ntypical scenarios in software development, research projects, documentation \ngeneration, system analysis, and other common agent tasks. Templates provide\nreusable workflow patterns that can be instantiated with specific parameters.\n\nCross-references:\n    - Workflow Types: ai/workflows/types.py for data structures\n    - Workflow Language: ai/workflows/language.py for WDL building  \n    - Workflow Engine: ai/workflows/engine.py for execution\n    - Agent System: ai/interface/agent_spawner.py for agent coordination\n    - MCP Integration: ai/tools/enhanced_mcp.py for external services\n\nFeatures:\n    - Pre-built templates for common workflows\n    - Parameter-driven template instantiation\n    - Best practice workflow patterns\n    - Extensible template system\n    - Template validation and testing",
      "exports": [
        "TemplateLibrary",
        "get_template_library",
        "list_workflow_templates",
        "get_workflow_template",
        "create_workflow_from_template",
        "get_template_categories",
        "register_template",
        "get_template",
        "list_templates",
        "get_template_categories",
        "instantiate_template"
      ]
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "class",
      "name": "TemplateLibrary",
      "line_number": 34,
      "parent": null,
      "docstring": "Central repository for workflow templates.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "function",
      "name": "get_template_library",
      "line_number": 700,
      "parent": null,
      "docstring": "Get the global template library instance.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "function",
      "name": "list_workflow_templates",
      "line_number": 708,
      "parent": null,
      "docstring": "List available workflow templates.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "function",
      "name": "get_workflow_template",
      "line_number": 713,
      "parent": null,
      "docstring": "Get a workflow template by ID.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "function",
      "name": "create_workflow_from_template",
      "line_number": 718,
      "parent": null,
      "docstring": "Create a workflow from a template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "function",
      "name": "get_template_categories",
      "line_number": 727,
      "parent": null,
      "docstring": "Get all available template categories.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "__init__",
      "line_number": 37,
      "parent": "TemplateLibrary",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_initialize_builtin_templates",
      "line_number": 41,
      "parent": "TemplateLibrary",
      "docstring": "Initialize the library with built-in templates.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "register_template",
      "line_number": 69,
      "parent": "TemplateLibrary",
      "docstring": "Register a new template in the library.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "get_template",
      "line_number": 73,
      "parent": "TemplateLibrary",
      "docstring": "Get a template by ID.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "list_templates",
      "line_number": 77,
      "parent": "TemplateLibrary",
      "docstring": "List all templates, optionally filtered by category.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "get_template_categories",
      "line_number": 83,
      "parent": "TemplateLibrary",
      "docstring": "Get all template categories.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "instantiate_template",
      "line_number": 87,
      "parent": "TemplateLibrary",
      "docstring": "Instantiate a template with given parameters.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_software_development_template",
      "line_number": 116,
      "parent": "TemplateLibrary",
      "docstring": "Create a comprehensive software development workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_instantiate_software_development",
      "line_number": 145,
      "parent": "TemplateLibrary",
      "docstring": "Instantiate software development workflow.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_code_review_template",
      "line_number": 265,
      "parent": "TemplateLibrary",
      "docstring": "Create code review workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_bug_fix_template",
      "line_number": 280,
      "parent": "TemplateLibrary",
      "docstring": "Create bug fix workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_feature_development_template",
      "line_number": 295,
      "parent": "TemplateLibrary",
      "docstring": "Create feature development workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_research_analysis_template",
      "line_number": 311,
      "parent": "TemplateLibrary",
      "docstring": "Create research analysis workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_competitive_analysis_template",
      "line_number": 326,
      "parent": "TemplateLibrary",
      "docstring": "Create competitive analysis workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_literature_review_template",
      "line_number": 341,
      "parent": "TemplateLibrary",
      "docstring": "Create literature review workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_api_documentation_template",
      "line_number": 357,
      "parent": "TemplateLibrary",
      "docstring": "Create API documentation workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_user_manual_template",
      "line_number": 373,
      "parent": "TemplateLibrary",
      "docstring": "Create user manual workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_technical_specification_template",
      "line_number": 388,
      "parent": "TemplateLibrary",
      "docstring": "Create technical specification workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_system_audit_template",
      "line_number": 404,
      "parent": "TemplateLibrary",
      "docstring": "Create system audit workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_performance_analysis_template",
      "line_number": 419,
      "parent": "TemplateLibrary",
      "docstring": "Create performance analysis workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_security_assessment_template",
      "line_number": 434,
      "parent": "TemplateLibrary",
      "docstring": "Create security assessment workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_data_processing_pipeline_template",
      "line_number": 450,
      "parent": "TemplateLibrary",
      "docstring": "Create data processing pipeline workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_approval_workflow_template",
      "line_number": 466,
      "parent": "TemplateLibrary",
      "docstring": "Create approval workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_create_parallel_processing_template",
      "line_number": 481,
      "parent": "TemplateLibrary",
      "docstring": "Create parallel processing workflow template.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_instantiate_research_analysis",
      "line_number": 497,
      "parent": "TemplateLibrary",
      "docstring": "Instantiate research analysis workflow.",
      "exports": null
    },
    {
      "path": "ai/workflows/templates.py",
      "type": "method",
      "name": "_instantiate_api_documentation",
      "line_number": 600,
      "parent": "TemplateLibrary",
      "docstring": "Instantiate API documentation workflow.",
      "exports": null
    },
    {
      "path": "ai/workflows/engine.py",
      "type": "module",
      "name": "engine",
      "line_number": 1,
      "parent": null,
      "docstring": "Advanced Workflow Execution Engine - Core Runtime System.\n\nThis module implements a robust execution engine for the Advanced Agent Workflow\nOrchestration System (AAWOS). It provides sophisticated workflow execution with\nreal-time monitoring, dependency management, error recovery, and intelligent\ncoordination of agents and external services.\n\nCross-references:\n    - Workflow Types: ai/workflows/types.py for data structures  \n    - Workflow Language: ai/workflows/language.py for WDL parsing\n    - Agent System: ai/interface/agent_spawner.py for agent management\n    - MCP Integration: ai/tools/enhanced_mcp.py for external services\n    - Memory System: ai/memory/store.py for state persistence\n\nFeatures:\n    - Real-time workflow execution with dependency resolution\n    - Parallel and conditional execution strategies\n    - Advanced error recovery and retry mechanisms\n    - Dynamic workflow adaptation based on results\n    - Comprehensive monitoring and status reporting\n    - Integration with agent spawning and MCP services",
      "exports": [
        "WorkflowExecutionError",
        "WorkflowTimeoutError",
        "NodeExecutionError",
        "WorkflowExecutionEngine",
        "get_workflow_engine",
        "get_execution_status",
        "register_execution_callback",
        "get_execution_log",
        "get_engine_metrics"
      ]
    },
    {
      "path": "ai/workflows/engine.py",
      "type": "class",
      "name": "WorkflowExecutionError",
      "line_number": 48,
      "parent": null,
      "docstring": "Exception raised during workflow execution.",
      "exports": null
    },
    {
      "path": "ai/workflows/engine.py",
      "type": "class",
      "name": "WorkflowTimeoutError",
      "line_number": 53,
      "parent": null,
      "docstring": "Exception raised when workflow execution times out.",
      "exports": null
    },
    {
      "path": "ai/workflows/engine.py",
      "type": "class",
      "name": "NodeExecutionError",
      "line_number": 58,
      "parent": null,
      "docstring": "Exception raised when a specific node fails execution.",
      "exports": null
    },
    {
      "path": "ai/workflows/engine.py",
      "type": "class",
      "name": "WorkflowExecutionEngine",
      "line_number": 66,
      "parent": null,
      "docstring": "Advanced execution engine for agent workflows.",
      "exports": null
    },
    {
      "path": "ai/workflows/engine.py",
      "type": "function",
      "name": "get_workflow_engine",
      "line_number": 916,
      "parent": null,
      "docstring": "Get the global workflow execution engine instance.",
      "exports": null
    },
    {
      "path": "ai/workflows/engine.py",
      "type": "method",
      "name": "__init__",
      "line_number": 60,
      "parent": "NodeExecutionError",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/engine.py",
      "type": "method",
      "name": "__init__",
      "line_number": 69,
      "parent": "WorkflowExecutionEngine",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/engine.py",
      "type": "method",
      "name": "_initialize_node_executors",
      "line_number": 87,
      "parent": "WorkflowExecutionEngine",
      "docstring": "Initialize the mapping of node types to execution methods.",
      "exports": null
    },
    {
      "path": "ai/workflows/engine.py",
      "type": "method",
      "name": "_calculate_retry_delay",
      "line_number": 463,
      "parent": "WorkflowExecutionEngine",
      "docstring": "Calculate delay before retry attempt.",
      "exports": null
    },
    {
      "path": "ai/workflows/engine.py",
      "type": "method",
      "name": "get_execution_status",
      "line_number": 824,
      "parent": "WorkflowExecutionEngine",
      "docstring": "Get the status of a workflow execution.",
      "exports": null
    },
    {
      "path": "ai/workflows/engine.py",
      "type": "method",
      "name": "register_execution_callback",
      "line_number": 885,
      "parent": "WorkflowExecutionEngine",
      "docstring": "Register a callback for workflow execution completion.",
      "exports": null
    },
    {
      "path": "ai/workflows/engine.py",
      "type": "method",
      "name": "get_execution_log",
      "line_number": 889,
      "parent": "WorkflowExecutionEngine",
      "docstring": "Get the execution log for a workflow.",
      "exports": null
    },
    {
      "path": "ai/workflows/engine.py",
      "type": "method",
      "name": "get_engine_metrics",
      "line_number": 897,
      "parent": "WorkflowExecutionEngine",
      "docstring": "Get execution engine performance metrics.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "module",
      "name": "language",
      "line_number": 1,
      "parent": null,
      "docstring": "Workflow Definition Language (WDL) - Parser and Builder System.\n\nThis module provides a comprehensive Workflow Definition Language that allows users\nto define complex agent workflows as code. It supports conditions, loops, parallel\nbranches, error handling, dynamic agent spawning, and advanced workflow patterns.\n\nCross-references:\n    - Workflow Types: ai/workflows/types.py for core data structures\n    - Workflow Engine: ai/workflows/engine.py for execution logic\n    - Agent Integration: ai/interface/agent_spawner.py for agent management\n    - MCP Integration: ai/tools/enhanced_mcp.py for external service calls\n\nFeatures:\n    - Human-readable YAML/JSON workflow definitions\n    - Programmatic workflow builder API\n    - Template parameter substitution\n    - Workflow validation and optimization\n    - Import/export functionality\n    - Visual workflow representation",
      "exports": [
        "WorkflowSyntaxError",
        "WorkflowBuilder",
        "WDLParser",
        "WDLExporter",
        "create_workflow",
        "parse_workflow",
        "load_workflow",
        "save_workflow",
        "add_start",
        "add_end",
        "spawn_agent",
        "execute_agent",
        "add_condition",
        "add_parallel",
        "add_loop",
        "call_mcp",
        "add_human_approval",
        "connect",
        "set_variable",
        "build",
        "parse_file",
        "parse_yaml",
        "parse_json",
        "export_to_yaml",
        "export_to_json",
        "save_to_file"
      ]
    },
    {
      "path": "ai/workflows/language.py",
      "type": "class",
      "name": "WorkflowSyntaxError",
      "line_number": 38,
      "parent": null,
      "docstring": "Exception raised for syntax errors in workflow definitions.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "class",
      "name": "WorkflowBuilder",
      "line_number": 55,
      "parent": null,
      "docstring": "Builder class for creating workflow definitions programmatically.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "class",
      "name": "WDLParser",
      "line_number": 315,
      "parent": null,
      "docstring": "Parser for Workflow Definition Language (WDL) files.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "class",
      "name": "WDLExporter",
      "line_number": 769,
      "parent": null,
      "docstring": "Exporter for converting workflow definitions to WDL format.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "function",
      "name": "create_workflow",
      "line_number": 972,
      "parent": null,
      "docstring": "Create a new workflow builder.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "function",
      "name": "parse_workflow",
      "line_number": 976,
      "parent": null,
      "docstring": "Parse workflow definition from string content.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "function",
      "name": "load_workflow",
      "line_number": 986,
      "parent": null,
      "docstring": "Load workflow definition from file.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "function",
      "name": "save_workflow",
      "line_number": 991,
      "parent": null,
      "docstring": "Save workflow definition to file.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "__init__",
      "line_number": 40,
      "parent": "WorkflowSyntaxError",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "_format_message",
      "line_number": 46,
      "parent": "WorkflowSyntaxError",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "__init__",
      "line_number": 58,
      "parent": "WorkflowBuilder",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "add_start",
      "line_number": 66,
      "parent": "WorkflowBuilder",
      "docstring": "Add a start node to the workflow.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "add_end",
      "line_number": 81,
      "parent": "WorkflowBuilder",
      "docstring": "Add an end node to the workflow.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "spawn_agent",
      "line_number": 96,
      "parent": "WorkflowBuilder",
      "docstring": "Add an agent spawn node.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "execute_agent",
      "line_number": 122,
      "parent": "WorkflowBuilder",
      "docstring": "Add an agent execution node.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "add_condition",
      "line_number": 148,
      "parent": "WorkflowBuilder",
      "docstring": "Add a conditional branch node.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "add_parallel",
      "line_number": 170,
      "parent": "WorkflowBuilder",
      "docstring": "Add a parallel execution node.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "add_loop",
      "line_number": 194,
      "parent": "WorkflowBuilder",
      "docstring": "Add a loop node.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "call_mcp",
      "line_number": 220,
      "parent": "WorkflowBuilder",
      "docstring": "Add an MCP service call node.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "add_human_approval",
      "line_number": 246,
      "parent": "WorkflowBuilder",
      "docstring": "Add a human approval node.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "connect",
      "line_number": 272,
      "parent": "WorkflowBuilder",
      "docstring": "Connect two nodes with an edge.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "set_variable",
      "line_number": 282,
      "parent": "WorkflowBuilder",
      "docstring": "Set a default workflow variable.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "build",
      "line_number": 293,
      "parent": "WorkflowBuilder",
      "docstring": "Build and validate the workflow definition.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "_next_node_id",
      "line_number": 309,
      "parent": "WorkflowBuilder",
      "docstring": "Generate the next node ID with given prefix.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "__init__",
      "line_number": 318,
      "parent": "WDLParser",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "parse_file",
      "line_number": 321,
      "parent": "WDLParser",
      "docstring": "Parse a WDL file and return a workflow definition.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "parse_yaml",
      "line_number": 337,
      "parent": "WDLParser",
      "docstring": "Parse YAML workflow definition.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "parse_json",
      "line_number": 345,
      "parent": "WDLParser",
      "docstring": "Parse JSON workflow definition.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "_parse_workflow_dict",
      "line_number": 353,
      "parent": "WDLParser",
      "docstring": "Parse workflow definition from dictionary.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "_parse_node",
      "line_number": 416,
      "parent": "WDLParser",
      "docstring": "Parse a single node definition.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "_parse_condition",
      "line_number": 631,
      "parent": "WDLParser",
      "docstring": "Parse a workflow condition.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "_parse_string_condition",
      "line_number": 673,
      "parent": "WDLParser",
      "docstring": "Parse a string-based condition like 'status == completed'.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "_parse_edge",
      "line_number": 704,
      "parent": "WDLParser",
      "docstring": "Parse an edge definition.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "_parse_retry_config",
      "line_number": 731,
      "parent": "WDLParser",
      "docstring": "Parse retry configuration.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "_infer_type",
      "line_number": 753,
      "parent": "WDLParser",
      "docstring": "Infer the type of a value.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "export_to_yaml",
      "line_number": 772,
      "parent": "WDLExporter",
      "docstring": "Export workflow definition to YAML format.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "export_to_json",
      "line_number": 777,
      "parent": "WDLExporter",
      "docstring": "Export workflow definition to JSON format.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "save_to_file",
      "line_number": 782,
      "parent": "WDLExporter",
      "docstring": "Save workflow definition to a file.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "_workflow_to_dict",
      "line_number": 795,
      "parent": "WDLExporter",
      "docstring": "Convert workflow definition to dictionary representation.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "_node_to_dict",
      "line_number": 840,
      "parent": "WDLExporter",
      "docstring": "Convert a node to dictionary representation.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "_condition_to_dict",
      "line_number": 942,
      "parent": "WDLExporter",
      "docstring": "Convert a condition to dictionary representation.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "_retry_config_to_dict",
      "line_number": 951,
      "parent": "WDLExporter",
      "docstring": "Convert retry config to dictionary representation.",
      "exports": null
    },
    {
      "path": "ai/workflows/language.py",
      "type": "method",
      "name": "_json_serializer",
      "line_number": 962,
      "parent": "WDLExporter",
      "docstring": "Custom JSON serializer for complex objects.",
      "exports": null
    },
    {
      "path": "ai/agents/Father.py",
      "type": "module",
      "name": "Father",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": []
    },
    {
      "path": "ai/agents/EnhancedFather.py",
      "type": "module",
      "name": "EnhancedFather",
      "line_number": 1,
      "parent": null,
      "docstring": "Enhanced Father Agent with Intelligent Memory and Analytics\n\nStrategic planner and delegator with advanced memory intelligence for better\ndecision-making and context awareness. Includes memory analytics for optimization.",
      "exports": []
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "module",
      "name": "enhanced_agents",
      "line_number": 1,
      "parent": null,
      "docstring": "Enhanced Agent Configurations\n\nUpgraded agent configurations that use the intelligent memory system for\npersistent learning and cross-session knowledge retention.\n\nThese agents integrate:\n- Intelligent memory classification and storage\n- Persistent memory across sessions\n- Learning pattern analysis  \n- Cross-session context retrieval\n\nCross-references:\n    - ADR-004: Persistent Agent Memory\n    - ai/memory/firestore_store.py: Persistent storage\n    - ai/tools/enhanced_memory_tools.py: Intelligent memory tools",
      "exports": [
        "EnhancedFather",
        "EnhancedDeveloper",
        "EnhancedArchitect",
        "EnhancedQA",
        "create_enhanced_agents",
        "get_agent",
        "Agent",
        "DummyTool"
      ]
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "class",
      "name": "EnhancedFather",
      "line_number": 70,
      "parent": null,
      "docstring": "Enhanced Father agent with intelligent persistent memory.\n\nThe Father agent is the strategic planner and uses memory to:\n- Track long-term goals across sessions\n- Learn from past decisions and outcomes\n- Analyze development patterns and focus areas\n- Maintain strategic context across deployments",
      "exports": null
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "class",
      "name": "EnhancedDeveloper",
      "line_number": 127,
      "parent": null,
      "docstring": "Enhanced Developer agent with intelligent persistent memory.\n\nThe Developer agent uses memory to:\n- Remember successful implementation patterns\n- Learn from past bugs and solutions\n- Track refactoring techniques that worked\n- Build knowledge of codebase patterns",
      "exports": null
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "class",
      "name": "EnhancedArchitect",
      "line_number": 183,
      "parent": null,
      "docstring": "Enhanced Architect agent with intelligent persistent memory.\n\nThe Architect agent uses memory to:\n- Learn from past architectural decisions\n- Track TDD patterns and their effectiveness\n- Build knowledge of design patterns that work\n- Remember ADR outcomes and lessons",
      "exports": null
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "class",
      "name": "EnhancedQA",
      "line_number": 238,
      "parent": null,
      "docstring": "Enhanced QA agent with intelligent persistent memory.\n\nThe QA agent uses memory to:\n- Learn from past bugs and edge cases\n- Remember effective testing strategies\n- Track which test patterns catch real issues\n- Build knowledge of failure modes",
      "exports": null
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "function",
      "name": "create_enhanced_agents",
      "line_number": 296,
      "parent": null,
      "docstring": "Create all enhanced agents with intelligent memory capabilities.\n\nReturns:\n    dict: Dictionary mapping agent names to enhanced agent instances",
      "exports": null
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "function",
      "name": "get_agent",
      "line_number": 312,
      "parent": null,
      "docstring": "Get an agent instance, optionally using enhanced memory capabilities.\n\nArgs:\n    name: Agent name ('Father', 'Architect', 'Developer', 'QA')\n    enhanced: Whether to use enhanced memory capabilities\n    \nReturns:\n    Agent instance with appropriate memory capabilities",
      "exports": null
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "method",
      "name": "__init__",
      "line_number": 81,
      "parent": "EnhancedFather",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "method",
      "name": "__init__",
      "line_number": 138,
      "parent": "EnhancedDeveloper",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "method",
      "name": "__init__",
      "line_number": 194,
      "parent": "EnhancedArchitect",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "method",
      "name": "__init__",
      "line_number": 249,
      "parent": "EnhancedQA",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "class",
      "name": "Agent",
      "line_number": 22,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "class",
      "name": "DummyTool",
      "line_number": 43,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "method",
      "name": "__init__",
      "line_number": 23,
      "parent": "Agent",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/agents/enhanced_agents.py",
      "type": "method",
      "name": "__init__",
      "line_number": 44,
      "parent": "DummyTool",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/agents/DocumentationAgent.py",
      "type": "module",
      "name": "DocumentationAgent",
      "line_number": 1,
      "parent": null,
      "docstring": "DocumentationAgent\n\nSpecialized agent responsible for documentation management and alignment.",
      "exports": [
        "Agent"
      ]
    },
    {
      "path": "ai/agents/DocumentationAgent.py",
      "type": "class",
      "name": "Agent",
      "line_number": 11,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/agents/DocumentationAgent.py",
      "type": "method",
      "name": "__init__",
      "line_number": 12,
      "parent": "Agent",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/agents/mother.py",
      "type": "module",
      "name": "mother",
      "line_number": 1,
      "parent": null,
      "docstring": "Mother Agent that spawns and manages child agents.\n\nThe Mother Agent is responsible for creating and managing child agents\nbased on task requirements. It implements the core spawning interface\nexpected by the mission: run(name, instructions, model, output_type).\n\nCross-references:\n    - ADR-008: Autonomous Development Loop Architecture\n    - Father Agent: ai/agents/father.py for strategic planning\n    - Memory Store: ai/memory/store.py for persistent context",
      "exports": [
        "SpawnRequest",
        "AgentResult",
        "MotherAgent",
        "is_valid",
        "to_dict",
        "run",
        "get_statistics"
      ]
    },
    {
      "path": "ai/agents/mother.py",
      "type": "class",
      "name": "SpawnRequest",
      "line_number": 25,
      "parent": null,
      "docstring": "Request to spawn a new agent.",
      "exports": null
    },
    {
      "path": "ai/agents/mother.py",
      "type": "class",
      "name": "AgentResult",
      "line_number": 39,
      "parent": null,
      "docstring": "Result from an agent execution.",
      "exports": null
    },
    {
      "path": "ai/agents/mother.py",
      "type": "class",
      "name": "MotherAgent",
      "line_number": 70,
      "parent": null,
      "docstring": "Mother Agent that spawns and manages child agents.\n\nThis agent implements the core spawning interface for creating\nspecialized agents based on task requirements. It maintains\nhistory of spawned agents and persists context to memory.",
      "exports": null
    },
    {
      "path": "ai/agents/mother.py",
      "type": "method",
      "name": "is_valid",
      "line_number": 33,
      "parent": "SpawnRequest",
      "docstring": "Validate the spawn request.",
      "exports": null
    },
    {
      "path": "ai/agents/mother.py",
      "type": "method",
      "name": "to_dict",
      "line_number": 53,
      "parent": "AgentResult",
      "docstring": "Convert to dictionary representation.",
      "exports": null
    },
    {
      "path": "ai/agents/mother.py",
      "type": "method",
      "name": "__init__",
      "line_number": 78,
      "parent": "MotherAgent",
      "docstring": "Initialize Mother Agent.\n\nArgs:\n    memory_store: Memory store for persistence (uses global if None)\n    max_history: Maximum number of spawn requests to keep in history",
      "exports": null
    },
    {
      "path": "ai/agents/mother.py",
      "type": "method",
      "name": "_initialize_agent_registry",
      "line_number": 91,
      "parent": "MotherAgent",
      "docstring": "Initialize mapping of task types to agent types.",
      "exports": null
    },
    {
      "path": "ai/agents/mother.py",
      "type": "method",
      "name": "run",
      "line_number": 111,
      "parent": "MotherAgent",
      "docstring": "Spawn and run a child agent for the given task.\n\nThis is the core interface method that implements the mission requirement:\nspawning agents with name, instructions, model, and output_type.\n\nArgs:\n    name: Name/identifier for the agent\n    instructions: Task instructions for the agent\n    model: AI model to use (default: gpt-4)\n    output_type: Expected output type (code/tests/docs/design/review)\n    \nReturns:\n    AgentResult with execution details and output",
      "exports": null
    },
    {
      "path": "ai/agents/mother.py",
      "type": "method",
      "name": "_track_spawn",
      "line_number": 185,
      "parent": "MotherAgent",
      "docstring": "Track spawn request in history.",
      "exports": null
    },
    {
      "path": "ai/agents/mother.py",
      "type": "method",
      "name": "_determine_agent_type",
      "line_number": 194,
      "parent": "MotherAgent",
      "docstring": "Determine which agent type to spawn based on instructions.",
      "exports": null
    },
    {
      "path": "ai/agents/mother.py",
      "type": "method",
      "name": "_persist_spawn_to_memory",
      "line_number": 216,
      "parent": "MotherAgent",
      "docstring": "Persist spawn request to memory store.",
      "exports": null
    },
    {
      "path": "ai/agents/mother.py",
      "type": "method",
      "name": "_execute_agent",
      "line_number": 230,
      "parent": "MotherAgent",
      "docstring": "Execute the appropriate agent (placeholder for now).\n\nThis will be integrated with the actual agency agents later.\nFor now, returns simulated results for testing.",
      "exports": null
    },
    {
      "path": "ai/agents/mother.py",
      "type": "method",
      "name": "get_statistics",
      "line_number": 263,
      "parent": "MotherAgent",
      "docstring": "Get statistics about spawned agents.",
      "exports": null
    },
    {
      "path": "ai/agents/__init__.py",
      "type": "module",
      "name": "__init__",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": []
    },
    {
      "path": "ai/agents/Architect.py",
      "type": "module",
      "name": "Architect",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": []
    },
    {
      "path": "ai/agents/EnhancedArchitect.py",
      "type": "module",
      "name": "EnhancedArchitect",
      "line_number": 1,
      "parent": null,
      "docstring": "Enhanced Architect Agent with Intelligent Memory Capabilities\n\nExtends the base Architect with advanced memory tools for better context awareness\nand decision tracking. Uses semantic search to find related ADRs and decisions.",
      "exports": []
    },
    {
      "path": "ai/agents/Reviewer.py",
      "type": "module",
      "name": "Reviewer",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": []
    },
    {
      "path": "ai/agents/EnhancedDeveloper.py",
      "type": "module",
      "name": "EnhancedDeveloper",
      "line_number": 1,
      "parent": null,
      "docstring": "Enhanced Developer Agent with Intelligent Memory Capabilities\n\nExtends the base Developer with advanced memory tools for learning from past\nimplementations and finding related solutions.",
      "exports": []
    },
    {
      "path": "ai/agents/Developer.py",
      "type": "module",
      "name": "Developer",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": []
    },
    {
      "path": "ai/agents/QA.py",
      "type": "module",
      "name": "QA",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": []
    },
    {
      "path": "ai/utils/clock.py",
      "type": "module",
      "name": "clock",
      "line_number": 1,
      "parent": null,
      "docstring": "Injectable clock system for deterministic time handling in tests.\nEnables fast-forward testing without real time delays.",
      "exports": [
        "Clock",
        "SystemClock",
        "MockClock",
        "now",
        "sleep",
        "set_clock",
        "get_clock",
        "reset_to_system_clock",
        "now",
        "sleep",
        "now",
        "sleep",
        "now",
        "sleep",
        "advance"
      ]
    },
    {
      "path": "ai/utils/clock.py",
      "type": "class",
      "name": "Clock",
      "line_number": 10,
      "parent": null,
      "docstring": "Clock interface for time operations.",
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "class",
      "name": "SystemClock",
      "line_number": 22,
      "parent": null,
      "docstring": "Production clock using system time.",
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "class",
      "name": "MockClock",
      "line_number": 32,
      "parent": null,
      "docstring": "Test clock with controllable time.",
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "function",
      "name": "now",
      "line_number": 54,
      "parent": null,
      "docstring": "Get current time from active clock.",
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "function",
      "name": "sleep",
      "line_number": 59,
      "parent": null,
      "docstring": "Sleep using active clock.",
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "function",
      "name": "set_clock",
      "line_number": 64,
      "parent": null,
      "docstring": "Set the global clock instance (for tests).",
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "function",
      "name": "get_clock",
      "line_number": 70,
      "parent": null,
      "docstring": "Get the current clock instance.",
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "function",
      "name": "reset_to_system_clock",
      "line_number": 75,
      "parent": null,
      "docstring": "Reset to system clock (cleanup after tests).",
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "method",
      "name": "now",
      "line_number": 13,
      "parent": "Clock",
      "docstring": "Get current timestamp.",
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "method",
      "name": "sleep",
      "line_number": 17,
      "parent": "Clock",
      "docstring": "Sleep for given seconds.",
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "method",
      "name": "now",
      "line_number": 25,
      "parent": "SystemClock",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "method",
      "name": "sleep",
      "line_number": 28,
      "parent": "SystemClock",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "method",
      "name": "__init__",
      "line_number": 35,
      "parent": "MockClock",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "method",
      "name": "now",
      "line_number": 38,
      "parent": "MockClock",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "method",
      "name": "sleep",
      "line_number": 41,
      "parent": "MockClock",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/utils/clock.py",
      "type": "method",
      "name": "advance",
      "line_number": 45,
      "parent": "MockClock",
      "docstring": "Manually advance clock by seconds.",
      "exports": null
    },
    {
      "path": "ai/utils/__init__.py",
      "type": "module",
      "name": "__init__",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": []
    },
    {
      "path": "ai/cli/fresh.py",
      "type": "module",
      "name": "fresh",
      "line_number": 1,
      "parent": null,
      "docstring": "Fresh CLI - Command-line interface for autonomous development.\n\nThis module provides the main CLI commands for the Fresh autonomous\ndevelopment system, including repository scanning, agent spawning,\nand monitoring.\n\nUsage:\n    fresh scan              # Scan repository for issues\n    fresh run --once        # Run one development cycle\n    fresh run --watch       # Continuous monitoring mode\n    fresh spawn \"task\"      # Spawn agent for specific task\n\nCross-references:\n    - ADR-008: Autonomous Development Loop Architecture\n    - Repository Scanner: ai/loop/repo_scanner.py\n    - Mother Agent: ai/agents/mother.py\n    - Development Loop: ai/loop/dev_loop.py",
      "exports": [
        "cmd_scan",
        "cmd_spawn",
        "cmd_run",
        "main"
      ]
    },
    {
      "path": "ai/cli/fresh.py",
      "type": "function",
      "name": "cmd_scan",
      "line_number": 31,
      "parent": null,
      "docstring": "Scan repository for issues and print as JSON.\n\nArgs:\n    args: Parsed command-line arguments",
      "exports": null
    },
    {
      "path": "ai/cli/fresh.py",
      "type": "function",
      "name": "cmd_spawn",
      "line_number": 74,
      "parent": null,
      "docstring": "Spawn an agent for a specific task.\n\nArgs:\n    args: Parsed command-line arguments",
      "exports": null
    },
    {
      "path": "ai/cli/fresh.py",
      "type": "function",
      "name": "cmd_run",
      "line_number": 102,
      "parent": null,
      "docstring": "Run autonomous development loop.\n\nArgs:\n    args: Parsed command-line arguments",
      "exports": null
    },
    {
      "path": "ai/cli/fresh.py",
      "type": "function",
      "name": "main",
      "line_number": 120,
      "parent": null,
      "docstring": "Main CLI entry point.",
      "exports": null
    },
    {
      "path": "ai/system/coordinator.py",
      "type": "module",
      "name": "coordinator",
      "line_number": 1,
      "parent": null,
      "docstring": "Fresh Agent System Initialization and Coordination.\n\nThis module provides comprehensive initialization and coordination for all\nagent system components, ensuring proper startup order, dependency resolution,\nand graceful shutdown handling.\n\nCross-references:\n    - Agent Spawner: ai/interface/agent_spawner.py for agent lifecycle\n    - Execution Monitor: ai/execution/monitor.py for real-time execution\n    - Status Coordinator: ai/coordination/status.py for status updates\n    - GitHub Integration: ai/integration/github.py for PR automation\n    - Performance Analytics: ai/analytics/performance.py for optimization\n    - Telegram Bot: ai/interface/telegram_bot.py for user interface\n\nRelated:\n    - System startup and shutdown coordination\n    - Health monitoring and status checks\n    - Configuration management and validation\n    - Error recovery and graceful degradation",
      "exports": [
        "SystemComponent",
        "SystemStatus",
        "FreshAgentSystem",
        "get_system",
        "add_shutdown_handler",
        "signal_handler",
        "can_start",
        "add_to_shutdown_order"
      ]
    },
    {
      "path": "ai/system/coordinator.py",
      "type": "class",
      "name": "SystemComponent",
      "line_number": 40,
      "parent": null,
      "docstring": "Represents a system component with its lifecycle management.",
      "exports": null
    },
    {
      "path": "ai/system/coordinator.py",
      "type": "class",
      "name": "SystemStatus",
      "line_number": 55,
      "parent": null,
      "docstring": "Overall system status information.",
      "exports": null
    },
    {
      "path": "ai/system/coordinator.py",
      "type": "class",
      "name": "FreshAgentSystem",
      "line_number": 66,
      "parent": null,
      "docstring": "Coordinates initialization and lifecycle of all agent system components.",
      "exports": null
    },
    {
      "path": "ai/system/coordinator.py",
      "type": "function",
      "name": "get_system",
      "line_number": 594,
      "parent": null,
      "docstring": "Get the global Fresh Agent System instance.",
      "exports": null
    },
    {
      "path": "ai/system/coordinator.py",
      "type": "method",
      "name": "__init__",
      "line_number": 69,
      "parent": "FreshAgentSystem",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/system/coordinator.py",
      "type": "method",
      "name": "_setup_signal_handlers",
      "line_number": 80,
      "parent": "FreshAgentSystem",
      "docstring": "Setup signal handlers for graceful shutdown.",
      "exports": null
    },
    {
      "path": "ai/system/coordinator.py",
      "type": "method",
      "name": "add_shutdown_handler",
      "line_number": 501,
      "parent": "FreshAgentSystem",
      "docstring": "Add a shutdown handler function.",
      "exports": null
    },
    {
      "path": "ai/system/coordinator.py",
      "type": "method",
      "name": "_determine_shutdown_order",
      "line_number": 564,
      "parent": "FreshAgentSystem",
      "docstring": "Determine the order to shutdown components (reverse of startup order).",
      "exports": null
    },
    {
      "path": "ai/system/coordinator.py",
      "type": "function",
      "name": "signal_handler",
      "line_number": 82,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/system/coordinator.py",
      "type": "function",
      "name": "can_start",
      "line_number": 260,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/system/coordinator.py",
      "type": "function",
      "name": "add_to_shutdown_order",
      "line_number": 570,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "module",
      "name": "memory_integration",
      "line_number": 1,
      "parent": null,
      "docstring": "Memory Integration System\n\nIntegrates persistent memory capabilities into agent workflows, providing\nseamless initialization and configuration of the intelligent memory system.\n\nThis module handles:\n- Memory store initialization and configuration\n- Environment-based store selection (Firestore vs local)\n- Agent workflow integration points\n- Memory system health monitoring\n\nCross-references:\n    - ADR-004: Persistent Agent Memory\n    - ai/memory/firestore_store.py: Firestore implementation\n    - ai/memory/intelligent_store.py: Intelligent memory features",
      "exports": [
        "MemoryIntegrationConfig",
        "MemoryIntegrationManager",
        "get_memory_integration_manager",
        "initialize_agent_memory_system",
        "get_memory_system_status",
        "ensure_memory_system_ready",
        "initialize_memory_system",
        "get_memory_store",
        "get_integration_status",
        "health_check"
      ]
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "class",
      "name": "MemoryIntegrationConfig",
      "line_number": 30,
      "parent": null,
      "docstring": "Configuration for memory system integration.",
      "exports": null
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "class",
      "name": "MemoryIntegrationManager",
      "line_number": 92,
      "parent": null,
      "docstring": "Manages memory system integration for agent workflows.",
      "exports": null
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "function",
      "name": "get_memory_integration_manager",
      "line_number": 251,
      "parent": null,
      "docstring": "Get the global memory integration manager.\n\nArgs:\n    config: Configuration for new manager (ignored if manager exists)\n    \nReturns:\n    MemoryIntegrationManager instance",
      "exports": null
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "function",
      "name": "initialize_agent_memory_system",
      "line_number": 269,
      "parent": null,
      "docstring": "Initialize the memory system for agent workflows.\n\nThis is the main entry point for integrating persistent memory into\nagent workflows. It handles environment detection, store selection,\nand graceful fallback.\n\nArgs:\n    config: Memory integration configuration\n    \nReturns:\n    dict: Status information about initialization\n    \nExamples:\n    Basic initialization:\n        status = initialize_agent_memory_system()\n        \n    With explicit configuration:\n        config = MemoryIntegrationConfig(\n            use_firestore=True,\n            project_id=\"my-project\",\n            max_local_cache=200\n        )\n        status = initialize_agent_memory_system(config)",
      "exports": null
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "function",
      "name": "get_memory_system_status",
      "line_number": 299,
      "parent": null,
      "docstring": "Get current memory system status and health information.",
      "exports": null
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "function",
      "name": "ensure_memory_system_ready",
      "line_number": 312,
      "parent": null,
      "docstring": "Ensure the memory system is initialized and ready for use.\n\nReturns:\n    bool: True if memory system is ready, False otherwise",
      "exports": null
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "method",
      "name": "__init__",
      "line_number": 33,
      "parent": "MemoryIntegrationConfig",
      "docstring": "Initialize memory integration configuration.\n\nArgs:\n    use_firestore: Whether to use Firestore (None = auto-detect from env)\n    project_id: Google Cloud project ID for Firestore\n    collection_name: Firestore collection name\n    max_local_cache: Maximum items in local cache\n    sync_on_write: Whether to sync to Firestore on every write\n    fallback_to_intelligent: Whether to fallback to IntelligentMemoryStore",
      "exports": null
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "method",
      "name": "_should_use_firestore",
      "line_number": 66,
      "parent": "MemoryIntegrationConfig",
      "docstring": "Determine if Firestore should be used based on environment.",
      "exports": null
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "method",
      "name": "_get_project_id",
      "line_number": 83,
      "parent": "MemoryIntegrationConfig",
      "docstring": "Get Google Cloud project ID from environment.",
      "exports": null
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "method",
      "name": "__init__",
      "line_number": 95,
      "parent": "MemoryIntegrationManager",
      "docstring": "Initialize memory integration manager.\n\nArgs:\n    config: Memory integration configuration (auto-created if None)",
      "exports": null
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "method",
      "name": "initialize_memory_system",
      "line_number": 106,
      "parent": "MemoryIntegrationManager",
      "docstring": "Initialize the memory system based on configuration.\n\nReturns:\n    dict: Status information about the initialized memory system",
      "exports": null
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "method",
      "name": "get_memory_store",
      "line_number": 185,
      "parent": "MemoryIntegrationManager",
      "docstring": "Get the current memory store instance.",
      "exports": null
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "method",
      "name": "get_integration_status",
      "line_number": 191,
      "parent": "MemoryIntegrationManager",
      "docstring": "Get current integration status.",
      "exports": null
    },
    {
      "path": "ai/system/memory_integration.py",
      "type": "method",
      "name": "health_check",
      "line_number": 195,
      "parent": "MemoryIntegrationManager",
      "docstring": "Perform health check on the memory system.\n\nReturns:\n    dict: Health status including connectivity and performance metrics",
      "exports": null
    },
    {
      "path": "ai/system/docs_alignment.py",
      "type": "module",
      "name": "docs_alignment",
      "line_number": 1,
      "parent": null,
      "docstring": "Docs Alignment Service\n\nRuns documentation alignment checks periodically in the background and stores\nissues/recoveries into memory. Designed to be managed by the system coordinator.",
      "exports": [
        "DocsAlignmentConfig",
        "DocsAlignmentService",
        "get_docs_alignment_service",
        "health_check"
      ]
    },
    {
      "path": "ai/system/docs_alignment.py",
      "type": "class",
      "name": "DocsAlignmentConfig",
      "line_number": 26,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/system/docs_alignment.py",
      "type": "class",
      "name": "DocsAlignmentService",
      "line_number": 31,
      "parent": null,
      "docstring": "Periodic documentation alignment runner.",
      "exports": null
    },
    {
      "path": "ai/system/docs_alignment.py",
      "type": "function",
      "name": "get_docs_alignment_service",
      "line_number": 98,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/system/docs_alignment.py",
      "type": "method",
      "name": "__init__",
      "line_number": 33,
      "parent": "DocsAlignmentService",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/system/docs_alignment.py",
      "type": "function",
      "name": "health_check",
      "line_number": 109,
      "parent": null,
      "docstring": "Return True if the service appears healthy.\nHealthy if:\n- Task is running AND\n- Last run executed within 2x interval (or no run yet shortly after start)",
      "exports": null
    },
    {
      "path": "ai/execution/monitor.py",
      "type": "module",
      "name": "monitor",
      "line_number": 1,
      "parent": null,
      "docstring": "Real-time agent execution monitor with agency swarm integration.\n\nThis module provides real-time monitoring and execution of spawned agents\nusing the agency swarm framework, with status updates back to users via\nthe Telegram bot interface.\n\nCross-references:\n    - Agent Spawner: ai/interface/agent_spawner.py for spawn coordination\n    - Telegram Bot: ai/interface/telegram_bot.py for user status updates  \n    - Memory System: ai/memory/README.md for execution context and results\n    - GitHub Integration: ai/integration/github.py for automated PR creation\n\nRelated:\n    - Agency Swarm framework for multi-agent coordination\n    - Persistent execution state management\n    - Real-time progress tracking and user notification",
      "exports": [
        "ExecutionStatus",
        "ExecutionStep",
        "AgentExecution",
        "ExecutionBatch",
        "AgentExecutionMonitor",
        "get_execution_monitor",
        "get_execution_status",
        "get_batch_status",
        "list_active_executions",
        "list_active_batches"
      ]
    },
    {
      "path": "ai/execution/monitor.py",
      "type": "class",
      "name": "ExecutionStatus",
      "line_number": 39,
      "parent": null,
      "docstring": "Status of agent execution.",
      "exports": null
    },
    {
      "path": "ai/execution/monitor.py",
      "type": "class",
      "name": "ExecutionStep",
      "line_number": 49,
      "parent": null,
      "docstring": "Individual step in agent execution.",
      "exports": null
    },
    {
      "path": "ai/execution/monitor.py",
      "type": "class",
      "name": "AgentExecution",
      "line_number": 63,
      "parent": null,
      "docstring": "Execution context for a spawned agent.",
      "exports": null
    },
    {
      "path": "ai/execution/monitor.py",
      "type": "class",
      "name": "ExecutionBatch",
      "line_number": 80,
      "parent": null,
      "docstring": "Batch execution for multiple agents working together.",
      "exports": null
    },
    {
      "path": "ai/execution/monitor.py",
      "type": "class",
      "name": "AgentExecutionMonitor",
      "line_number": 94,
      "parent": null,
      "docstring": "Monitors and coordinates real-time agent execution with agency swarm.",
      "exports": null
    },
    {
      "path": "ai/execution/monitor.py",
      "type": "function",
      "name": "get_execution_monitor",
      "line_number": 603,
      "parent": null,
      "docstring": "Get the global agent execution monitor instance.",
      "exports": null
    },
    {
      "path": "ai/execution/monitor.py",
      "type": "method",
      "name": "__init__",
      "line_number": 97,
      "parent": "AgentExecutionMonitor",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/execution/monitor.py",
      "type": "method",
      "name": "_generate_execution_steps",
      "line_number": 324,
      "parent": "AgentExecutionMonitor",
      "docstring": "Generate execution steps based on agent type and instructions.",
      "exports": null
    },
    {
      "path": "ai/execution/monitor.py",
      "type": "method",
      "name": "_determine_batch_status",
      "line_number": 442,
      "parent": "AgentExecutionMonitor",
      "docstring": "Determine overall batch status based on individual agent statuses.",
      "exports": null
    },
    {
      "path": "ai/execution/monitor.py",
      "type": "method",
      "name": "get_execution_status",
      "line_number": 583,
      "parent": "AgentExecutionMonitor",
      "docstring": "Get current status of an agent execution.",
      "exports": null
    },
    {
      "path": "ai/execution/monitor.py",
      "type": "method",
      "name": "get_batch_status",
      "line_number": 587,
      "parent": "AgentExecutionMonitor",
      "docstring": "Get current status of an execution batch.",
      "exports": null
    },
    {
      "path": "ai/execution/monitor.py",
      "type": "method",
      "name": "list_active_executions",
      "line_number": 591,
      "parent": "AgentExecutionMonitor",
      "docstring": "Get all currently active executions.",
      "exports": null
    },
    {
      "path": "ai/execution/monitor.py",
      "type": "method",
      "name": "list_active_batches",
      "line_number": 595,
      "parent": "AgentExecutionMonitor",
      "docstring": "Get all currently active batches.",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "module",
      "name": "repo_scanner",
      "line_number": 1,
      "parent": null,
      "docstring": "Repository Scanner for detecting issues in codebase.\n\nThis module scans the repository for various issues that agents can\nautonomously fix, including TODOs, FIXMEs, failing tests, type errors,\nand uncommitted changes.\n\nCross-references:\n    - ADR-008: Autonomous Development Loop Architecture\n    - Mother Agent: ai/agents/mother.py for task dispatch\n    - Development Loop: ai/loop/dev_loop.py for task execution",
      "exports": [
        "TaskType",
        "Task",
        "RepoScanner",
        "scan_repository",
        "find_todos",
        "find_failing_tests",
        "parse_git_diff",
        "to_dict",
        "scan",
        "find_todos",
        "find_failing_tests",
        "find_type_errors",
        "parse_git_diff",
        "prioritize_tasks"
      ]
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "class",
      "name": "TaskType",
      "line_number": 23,
      "parent": null,
      "docstring": "Types of tasks that can be detected.",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "class",
      "name": "Task",
      "line_number": 34,
      "parent": null,
      "docstring": "Represents a task found in the repository.",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "class",
      "name": "RepoScanner",
      "line_number": 66,
      "parent": null,
      "docstring": "Scans repository for issues that agents can fix.",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "function",
      "name": "scan_repository",
      "line_number": 330,
      "parent": null,
      "docstring": "Scan repository for issues.\n\nArgs:\n    repo_path: Path to repository\n    \nReturns:\n    List of tasks found",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "function",
      "name": "find_todos",
      "line_number": 343,
      "parent": null,
      "docstring": "Find TODO and FIXME comments.\n\nArgs:\n    repo_path: Path to repository\n    \nReturns:\n    List of TODO/FIXME tasks",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "function",
      "name": "find_failing_tests",
      "line_number": 356,
      "parent": null,
      "docstring": "Find failing tests.\n\nArgs:\n    repo_path: Path to repository\n    \nReturns:\n    List of failing test tasks",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "function",
      "name": "parse_git_diff",
      "line_number": 369,
      "parent": null,
      "docstring": "Parse git diff for uncommitted changes.\n\nArgs:\n    repo_path: Path to repository\n    \nReturns:\n    List of uncommitted change tasks",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "method",
      "name": "to_dict",
      "line_number": 43,
      "parent": "Task",
      "docstring": "Convert task to dictionary for JSON serialization.",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "method",
      "name": "__eq__",
      "line_number": 54,
      "parent": "Task",
      "docstring": "Check equality based on core attributes.",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "method",
      "name": "__init__",
      "line_number": 79,
      "parent": "RepoScanner",
      "docstring": "Initialize scanner with repository path.\n\nArgs:\n    repo_path: Path to repository to scan\n    ignore_patterns: Patterns to ignore during scanning",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "method",
      "name": "scan",
      "line_number": 89,
      "parent": "RepoScanner",
      "docstring": "Perform comprehensive repository scan.\n\nReturns:\n    List of tasks found, prioritized by importance",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "method",
      "name": "find_todos",
      "line_number": 112,
      "parent": "RepoScanner",
      "docstring": "Find TODO and FIXME comments in code.\n\nReturns:\n    List of TODO/FIXME tasks",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "method",
      "name": "find_failing_tests",
      "line_number": 154,
      "parent": "RepoScanner",
      "docstring": "Find failing tests using pytest.\n\nReturns:\n    List of failing test tasks",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "method",
      "name": "find_type_errors",
      "line_number": 198,
      "parent": "RepoScanner",
      "docstring": "Find type errors using mypy.\n\nReturns:\n    List of type error tasks",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "method",
      "name": "parse_git_diff",
      "line_number": 243,
      "parent": "RepoScanner",
      "docstring": "Parse git diff for uncommitted changes.\n\nReturns:\n    List of uncommitted change tasks",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "method",
      "name": "prioritize_tasks",
      "line_number": 277,
      "parent": "RepoScanner",
      "docstring": "Sort tasks by priority (highest first).\n\nArgs:\n    tasks: List of tasks to prioritize\n    \nReturns:\n    Sorted list of tasks",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "method",
      "name": "_find_source_files",
      "line_number": 288,
      "parent": "RepoScanner",
      "docstring": "Find all source files in repository.\n\nReturns:\n    List of source file paths",
      "exports": null
    },
    {
      "path": "ai/loop/repo_scanner.py",
      "type": "method",
      "name": "_should_ignore",
      "line_number": 302,
      "parent": "RepoScanner",
      "docstring": "Check if file should be ignored based on patterns.\n\nArgs:\n    file_path: Path to check\n    \nReturns:\n    True if file should be ignored",
      "exports": null
    },
    {
      "path": "ai/loop/devcycle.py",
      "type": "module",
      "name": "devcycle",
      "line_number": 1,
      "parent": null,
      "docstring": null,
      "exports": [
        "run_devcycle_slugify_sandbox"
      ]
    },
    {
      "path": "ai/loop/devcycle.py",
      "type": "function",
      "name": "_write",
      "line_number": 9,
      "parent": null,
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/loop/devcycle.py",
      "type": "function",
      "name": "run_devcycle_slugify_sandbox",
      "line_number": 14,
      "parent": null,
      "docstring": "Demonstrate an iterative TDD dev cycle in a sandbox.\n\nSteps:\n  1) Write failing tests for slugify in sandbox/tests/\n  2) Run pytest (expect failure)\n  3) Implement minimal slugify in sandbox/src/utils/slugify.py\n  4) Run pytest (expect success)\nReturns a result dict with fields: iterations, first_fail, final_pass, output.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "module",
      "name": "performance",
      "line_number": 1,
      "parent": null,
      "docstring": "Agent Performance Analytics and Optimization System.\n\nThis module tracks and analyzes agent spawn success rates, execution times,\nuser satisfaction, and other metrics to optimize Father's decision-making\nand improve the overall agent system performance.\n\nCross-references:\n    - Agent Spawner: ai/interface/agent_spawner.py for spawn metrics\n    - Execution Monitor: ai/execution/monitor.py for execution metrics\n    - Father Agent: ai/agents/Father.py for decision optimization\n    - Memory System: ai/memory/README.md for analytics storage\n\nRelated:\n    - Performance tracking across agent lifecycles\n    - Success rate analysis by agent types and task types\n    - User feedback integration for satisfaction metrics\n    - Continuous improvement recommendations",
      "exports": [
        "PerformanceMetrics",
        "TaskTypeAnalysis",
        "AgentTypeAnalysis",
        "PerformanceAnalytics",
        "get_performance_analytics",
        "ensure_db_directory",
        "init_database",
        "record_spawn_metrics",
        "record_execution_metrics",
        "record_completion_metrics",
        "record_user_feedback",
        "get_optimization_recommendations"
      ]
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "class",
      "name": "PerformanceMetrics",
      "line_number": 38,
      "parent": null,
      "docstring": "Metrics for a single agent or batch execution.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "class",
      "name": "TaskTypeAnalysis",
      "line_number": 75,
      "parent": null,
      "docstring": "Analysis results for a specific task type.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "class",
      "name": "AgentTypeAnalysis",
      "line_number": 89,
      "parent": null,
      "docstring": "Analysis results for a specific agent type.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "class",
      "name": "PerformanceAnalytics",
      "line_number": 101,
      "parent": null,
      "docstring": "Tracks and analyzes agent performance for optimization.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "function",
      "name": "get_performance_analytics",
      "line_number": 715,
      "parent": null,
      "docstring": "Get the global performance analytics instance.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "method",
      "name": "__init__",
      "line_number": 104,
      "parent": "PerformanceAnalytics",
      "docstring": null,
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "method",
      "name": "ensure_db_directory",
      "line_number": 119,
      "parent": "PerformanceAnalytics",
      "docstring": "Ensure the database directory exists.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "method",
      "name": "init_database",
      "line_number": 124,
      "parent": "PerformanceAnalytics",
      "docstring": "Initialize SQLite database for performance metrics.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "method",
      "name": "record_spawn_metrics",
      "line_number": 167,
      "parent": "PerformanceAnalytics",
      "docstring": "Record metrics for agent spawning.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "method",
      "name": "record_execution_metrics",
      "line_number": 203,
      "parent": "PerformanceAnalytics",
      "docstring": "Record metrics for agent execution.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "method",
      "name": "record_completion_metrics",
      "line_number": 242,
      "parent": "PerformanceAnalytics",
      "docstring": "Record metrics for agent completion.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "method",
      "name": "record_user_feedback",
      "line_number": 273,
      "parent": "PerformanceAnalytics",
      "docstring": "Record user satisfaction feedback (1-5 scale).",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "method",
      "name": "get_optimization_recommendations",
      "line_number": 477,
      "parent": "PerformanceAnalytics",
      "docstring": "Get optimization recommendations for Father's decision-making.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "method",
      "name": "_store_metrics",
      "line_number": 559,
      "parent": "PerformanceAnalytics",
      "docstring": "Store metrics to database.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "method",
      "name": "_analyze_failure_reasons",
      "line_number": 586,
      "parent": "PerformanceAnalytics",
      "docstring": "Analyze common failure reasons from failed executions.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "method",
      "name": "_determine_optimal_configurations",
      "line_number": 614,
      "parent": "PerformanceAnalytics",
      "docstring": "Determine optimal agent configurations for a task type.",
      "exports": null
    },
    {
      "path": "ai/analytics/performance.py",
      "type": "method",
      "name": "_generate_improvement_suggestions",
      "line_number": 656,
      "parent": "PerformanceAnalytics",
      "docstring": "Generate improvement suggestions for an agent type.",
      "exports": null
    }
  ],
  "doc_items": [
    {
      "path": "WARP.md",
      "title": "\u26a1 WARP Terminal Guide",
      "anchors": [
        "-warp-terminal-guide",
        "-initialization",
        "-quick-command-reference",
        "agent-operations",
        "deploy-agent-swarms",
        "request-autonomous-features",
        "monitor-agent-status",
        "development-workflow",
        "bootstrap-environment",
        "testing-matches-ci",
        "planning-and-release",
        "documentation-guardrails",
        "run-documentation-alignment-checks",
        "show-full-system-status-includes-docs-alignment-metrics"
      ],
      "links_to": [
        "docs/INDEX.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/DEPLOYMENT.md",
        "docs/INTERFACES.md",
        "docs/CAPABILITIES.md",
        "docs/INDEX.md"
      ],
      "cross_references": []
    },
    {
      "path": "SYSTEM_INTEGRITY_REPORT.md",
      "title": "\ud83c\udfaf AAWOS SYSTEM INTEGRITY REPORT",
      "anchors": [
        "-aawos-system-integrity-report",
        "-broken-windows-fixed",
        "1-documentationagent-import-issue---fixed-",
        "2-enhanced-agency-system-integrity---fixed-",
        "-system-status-100-operational",
        "core-infrastructure-health",
        "validated-capabilities",
        "strategic-implementation-results",
        "-autonomous-development-validation",
        "test-results",
        "generated-artifacts",
        "-strategic-recommendations",
        "immediate-actions--complete",
        "next-steps-system-100-ready",
        "-quality-assurance",
        "no-broken-windows-compliance",
        "reliability-metrics",
        "-conclusion"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "README.md",
      "title": "Fresh AI - Enhanced Agent System with Persistent Memory",
      "anchors": [
        "fresh-ai---enhanced-agent-system-with-persistent-memory",
        "-mission--accomplished",
        "-quick-start",
        "1-install-and-setup",
        "2-test-the-memory-system",
        "3-test-enhanced-agents",
        "4-run-the-test-suite",
        "-documentation-system",
        "-core-guides",
        "-architecture",
        "-implementation",
        "-memory-system",
        "three-tier-architecture",
        "1-inmemorymemorystore---development",
        "2-intelligentmemorystore---enhanced-development",
        "3-firestorememorystore---production",
        "memory-classification",
        "-enhanced-agents",
        "agent-capabilities",
        "-enhancedfather---strategic-intelligence",
        "-enhancedarchitect---design-intelligence",
        "-enhanceddeveloper---implementation-learning",
        "-enhancedqa---quality-intelligence",
        "memory-driven-development",
        "example-enhanced-agent-workflow",
        "1-consult-memory-before-starting",
        "2-apply-learned-patterns",
        "-implementation-with-memory-insights-",
        "3-store-new-learnings",
        "-api-reference",
        "memory-store-apis",
        "automatic-store-selection",
        "enhanced-memory-operations",
        "returns-enhancedmemoryitem-with-typegoal-importance085-keywords",
        "memory-tools",
        "smart-memory-storage-with-auto-classification",
        "semantic-keyword-search",
        "enhanced-agents",
        "create-memory-driven-agents",
        "returns-father-enhancedfather-architect-enhancedarchitect-",
        "gradual-migration-support",
        "-deployment",
        "local-development",
        "quick-setup",
        "test-memory-system",
        "production-with-firestore",
        "set-up-persistent-memory",
        "deploy-enhanced-agents",
        "-testing",
        "test-status",
        "running-tests",
        "core-memory-tests",
        "full-test-suite",
        "test-enhanced-agents",
        "-documentation-alignment",
        "warp-helper-after-source-warp",
        "or-directly",
        "look-for-docs_alignment_last_status-docs_alignment_last_run_age_sec-docs_alignment_interval_sec",
        "-project-structure",
        "-performance--analytics",
        "system-metrics-latest-demo",
        "memory-analytics-features",
        "-legacy-commands",
        "development-commands",
        "bootstrap-development-environment",
        "run-comprehensive-tests",
        "local-dev-quality-check-advisory-lint-tests-docs-alignment",
        "optional-install-pre-commit-locally",
        "create-architecture-decision-records",
        "adaptive-agent-monitoring",
        "tdd-sandbox-demo",
        "architecture-implementation",
        "-whats-new",
        "-recently-implemented",
        "-coming-next",
        "-getting-started-paths",
        "-for-developers",
        "-for-ai-agents",
        "-for-devopssre",
        "-for-architects",
        "-complete-documentation-index",
        "-core-documentation",
        "-architecture-decisions",
        "-testing-and-examples",
        "-implementation-files"
      ],
      "links_to": [
        "docs/MEMORY_SYSTEM.md",
        "docs/ENHANCED_AGENTS.md",
        "docs/API_REFERENCE.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/DEPLOYMENT.md",
        ".cursor/rules/ADR-004.md",
        "docs/MEMORY_SYSTEM.md",
        "docs/ENHANCED_AGENTS.md",
        "docs/MEMORY_SYSTEM.md#memory-store-implementations",
        "docs/API_REFERENCE.md#memory-store-apis",
        "docs/ENHANCED_AGENTS.md#memory-integration",
        "docs/AGENT_DEVELOPMENT.md#memory-driven-development-practices",
        "docs/MEMORY_SYSTEM.md",
        "ai/memory",
        "docs/ENHANCED_AGENTS.md",
        "ai/agents/enhanced_agents.py",
        "docs/API_REFERENCE.md#memory-tool-apis",
        "ai/tools",
        "docs/API_REFERENCE.md#usage-examples",
        "tests",
        "docs/MEMORY_SYSTEM.md#memory-classification",
        "docs/ENHANCED_AGENTS.md",
        "docs/API_REFERENCE.md",
        "docs/DEPLOYMENT.md",
        "docs/API_REFERENCE.md#crosssessionanalytics",
        "ai/agents",
        "ai/agency.py",
        "ai/loop/devcycle.py",
        "#quick-start",
        "docs/API_REFERENCE.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/ENHANCED_AGENTS.md",
        "docs/MEMORY_SYSTEM.md",
        "docs/DEPLOYMENT.md",
        "docs/API_REFERENCE.md#error-handling",
        "docs/MEMORY_SYSTEM.md#memory-store-implementations",
        ".cursor/rules/ADR-004.md",
        "docs/MEMORY_SYSTEM.md#architecture-overview",
        "docs/ENHANCED_AGENTS.md#architecture-overview",
        "docs/MEMORY_SYSTEM.md",
        "docs/ENHANCED_AGENTS.md",
        "docs/API_REFERENCE.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/DEPLOYMENT.md",
        ".cursor/rules/ADR-004.md",
        "tests/test_intelligent_memory.py",
        "tests/test_firestore_memory.py",
        "scripts/demo-persistent-memory.py",
        "scripts/demo-agent-activity.py",
        "ai/memory/store.py",
        "ai/memory/intelligent_store.py",
        "ai/memory/firestore_store.py",
        "ai/agents/enhanced_agents.py",
        "ai/tools/enhanced_memory_tools.py",
        "ai/tools/persistent_memory_tools.py",
        "docs/AGENT_DEVELOPMENT.md"
      ],
      "cross_references": []
    },
    {
      "path": "agency_manifesto.md",
      "title": "Agency Manifesto",
      "anchors": [
        "agency-manifesto"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "AUTONOMOUS_DEVELOPMENT_SUCCESS_REPORT.md",
      "title": "\ud83c\udf89 AUTONOMOUS DEVELOPMENT SUCCESS REPORT",
      "anchors": [
        "-autonomous-development-success-report",
        "-mission-accomplished",
        "-delivery-metrics",
        "-perfect-execution-100-success-rate",
        "-delivered-components",
        "-quality-achievements",
        "production-ready-features-delivered",
        "code-quality-standards-met",
        "-testing-excellence",
        "-strategic-validation",
        "no-broken-windows-policy-success",
        "strategic-project-selection-validated",
        "-business-value-delivered",
        "immediate-value",
        "strategic-value",
        "-autonomous-development-insights",
        "what-worked-exceptionally-well",
        "system-capabilities-validated",
        "-next-steps--recommendations",
        "immediate-actions",
        "strategic-roadmap",
        "-project-usage",
        "navigate-to-project",
        "install-dependencies",
        "run-the-api",
        "access-interactive-docs",
        "-conclusion"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "ENHANCED_MEMORY_SUMMARY.md",
      "title": "Enhanced Intelligent Memory System - Implementation Summary",
      "anchors": [
        "enhanced-intelligent-memory-system---implementation-summary",
        "-project-completion-status",
        "-core-achievements",
        "1-intelligent-memory-store-aimemoryintelligent_storepy",
        "2-enhanced-memory-tools-aitoolsenhanced_memory_toolspy",
        "3-production-firestore-backend-aimemoryenhanced_firestorepy",
        "4-production-memory-tools-aitoolsproduction_memory_toolspy",
        "5-enhanced-agency-integration-aienhanced_agencypy",
        "6-enhanced-agent-configurations",
        "-production-features",
        "memory-intelligence",
        "production-backend",
        "performance-optimization",
        "-testing--validation",
        "comprehensive-test-suites",
        "test-results",
        "-deployment-ready",
        "environment-support",
        "configuration-options",
        "enhanced-agency-with-production-firestore",
        "enhanced-agency-with-local-intelligent-memory",
        "lightweight-enhanced-agency-no-qareview",
        "required-environment-variables-production",
        "-business-impact",
        "agent-intelligence",
        "operational-benefits",
        "development-productivity",
        "-technical-specifications",
        "performance-metrics",
        "architecture",
        "reliability-features",
        "-success-metrics",
        "feature-completeness",
        "quality-assurance",
        "integration-success",
        "-final-status"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "AUTONOMOUS_DEV_FINAL_STATUS.md",
      "title": "\ud83c\udf89 AUTONOMOUS DEVELOPMENT INTEGRATION - COMPLETE!",
      "anchors": [
        "-autonomous-development-integration---complete",
        "-mission-accomplished",
        "-integration-results",
        "-problems-solved",
        "-current-status",
        "-how-to-use-your-autonomous-development-system",
        "quick-start",
        "activate-the-working-environment",
        "launch-autonomous-development-system",
        "or-run-specific-demos",
        "-what-your-system-can-do",
        "real-autonomous-development-capabilities",
        "-system-architecture-assessment",
        "infrastructure-quality-9510-",
        "-ready-for-production-use",
        "what-works-now",
        "-all-systems-operational",
        "-ready-for-autonomous-development",
        "-ai-agents-will-create-real-code-files",
        "example-autonomous-development",
        "-key-insights",
        "what-was-actually-missing",
        "what-you-have",
        "-congratulations",
        "-the-future-is-here"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "HOW_TO_START_AUTONOMOUS_DEV.md",
      "title": "\ud83d\ude80 HOW TO START AUTONOMOUS DEVELOPMENT",
      "anchors": [
        "-how-to-start-autonomous-development",
        "-your-system-is-ready",
        "-three-ways-to-start-autonomous-development",
        "-method-1-enhanced-agent-team-recommended",
        "1-activate-your-working-environment",
        "2-start-enhanced-ai-agents",
        "build-your-ai-agent-team",
        "make-an-autonomous-development-request",
        "-method-2-aawos-workflow-orchestration",
        "1-activate-environment",
        "2-create-custom-autonomous-workflow",
        "create-autonomous-development-workflow",
        "execute-workflow-when-orchestrator-is-ready",
        "orchestrator--workfloworchestrator",
        "execution_id--await-orchestratorexecute_workflowworkflow",
        "-method-3-interactive-development-session",
        "1-start-interactive-autonomous-session",
        "2-follow-interactive-prompts",
        "3-choose-development-type-and-requirements",
        "4-watch-ai-agents-work-autonomously",
        "-practical-examples",
        "example-1-simple-fastapi-20-minutes",
        "example-2-react-component-library-35-minutes",
        "example-3-full-stack-application-60-minutes",
        "-github-integration",
        "1-authenticate-github-cli",
        "2-set-environment-variables-optional",
        "3-ai-agents-will-automatically",
        "--create-feature-branches-git-checkout--b-agentstodo_api_20250101",
        "--commit-code-git-commit--m-ai-generated-todo-api-with-tests",
        "--create-prs-gh-pr-create---title-ai-generated-todo-api",
        "-system-status-check",
        "quick-status-check",
        "detailed-system-test",
        "-youre-ready",
        "what-your-system-can-do",
        "business-impact",
        "-start-your-first-autonomous-project-now",
        "the-simplest-way-to-start",
        "request-your-autonomous-development-project"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "AAWOS_STATUS_REPORT.md",
      "title": "Advanced Agent Workflow Orchestration System (AAWOS) - Status Report",
      "anchors": [
        "advanced-agent-workflow-orchestration-system-aawos---status-report",
        "-system-overview",
        "-implementation-status-complete",
        "-implementation-metrics",
        "-system-architecture",
        "core-components",
        "1-workflow-types-and-models-aiworkflowstypespy",
        "2-workflow-definition-language-wdl-aiworkflowslanguagepy",
        "3-template-library-aiworkflowstemplatespy",
        "4-workflow-execution-engine-aiworkflowsenginepy",
        "5-orchestration-interface-aiworkflows__init__py",
        "-validated-capabilities",
        "-core-functionality",
        "-advanced-features",
        "-integration-points",
        "-technical-specifications",
        "node-types-supported-13-types",
        "template-categories-5-categories",
        "execution-strategies-4-types",
        "-testing-and-validation",
        "test-results-summary",
        "system-health-check",
        "-performance-characteristics",
        "scalability",
        "reliability",
        "-usage-examples",
        "basic-workflow-creation",
        "create-workflow-using-builder-pattern",
        "execute-workflow",
        "template-based-workflow",
        "use-built-in-template",
        "-business-value",
        "development-efficiency",
        "operational-excellence",
        "integration-benefits",
        "-integration-with-fresh-agent-system",
        "enhanced-mcp-integration",
        "agent-coordination",
        "memory-system-integration",
        "-next-steps-and-recommendations",
        "immediate-actions",
        "future-enhancements",
        "recommended-use-cases",
        "-conclusion"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "autonomous_todo_api/README.md",
      "title": "\ud83c\udfaf Todo Management API",
      "anchors": [
        "-todo-management-api",
        "-features",
        "-quick-start",
        "prerequisites",
        "installation",
        "-api-endpoints",
        "-data-model",
        "todo-item-structure",
        "field-specifications",
        "-usage-examples",
        "create-a-todo",
        "get-all-todos",
        "get-a-specific-todo",
        "update-a-todo",
        "delete-a-todo",
        "pagination",
        "get-first-10-todos",
        "skip-first-5-get-next-10",
        "-testing",
        "run-tests",
        "run-all-tests",
        "run-with-verbose-output",
        "run-with-coverage-report",
        "run-specific-test-class",
        "test-coverage",
        "-project-structure",
        "-configuration",
        "environment-variables",
        "production-deployment",
        "-error-handling",
        "-performance-considerations",
        "-contributing",
        "-license",
        "-aawos-generation-report"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "docs/COST_MONITORING.md",
      "title": "Cost Monitoring System",
      "anchors": [
        "cost-monitoring-system",
        "overview",
        "quick-start",
        "1-setup-cost-monitoring",
        "basic-setup-with-default-budget-alerts",
        "run-with-demo-data-to-see-it-in-action",
        "launch-the-interactive-dashboard",
        "2-integrate-with-your-code",
        "firestore-integration",
        "before-original-firestore-usage",
        "after-with-cost-tracking",
        "use-exactly-as-before---all-operations-are-automatically-tracked",
        "openai-integration",
        "before-original-openai-usage",
        "after-with-cost-tracking",
        "use-exactly-as-before---all-operations-are-automatically-tracked",
        "manual-tracking",
        "track-openai-usage",
        "track-firestore-usage",
        "3-monitor-usage",
        "quick-summary",
        "show-quick-cost-summary",
        "interactive-dashboard",
        "launch-full-dashboard",
        "programmatic-access",
        "get-usage-summary",
        "get-monthly-breakdown",
        "core-components",
        "1-cost-tracker-aimonitorcost_tracker",
        "record-usage",
        "get-usage-summary",
        "2-service-wrappers",
        "firestore-tracker-aimonitorfirestore_tracker",
        "wrap-your-existing-client",
        "all-operations-are-automatically-tracked",
        "batch-operations-are-also-tracked",
        "openai-tracker-aimonitoropenai_tracker",
        "wrap-your-existing-client",
        "all-operations-are-automatically-tracked",
        "automatically-tracks-inputoutput-tokens-and-calculates-cost",
        "streaming-is-also-supported",
        "tracks-input-tokens-immediately-output-tokens-as-they-arrive",
        "embeddings",
        "tracks-token-usage-and-cost",
        "3-cost-dashboard-aimonitorcost_dashboard",
        "quick-summary",
        "full-dashboard",
        "4-cost-optimizer-aimonitorcost_optimizer",
        "analyze-usage-patterns",
        "get-recommendations",
        "forecast-costs",
        "budget-management",
        "setting-up-budget-alerts",
        "total-budget-alert-all-services",
        "service-specific-alerts",
        "budget-alert-configuration",
        "environment-variables",
        "optional-telegram-chat-id-for-budget-alerts",
        "firestore-configuration-if-using-firestore",
        "cost-optimization",
        "automatic-recommendations",
        "example-recommendations",
        "cost-forecasting",
        "advanced-usage",
        "custom-pricing",
        "update-openai-pricing",
        "export-and-reporting",
        "export-detailed-report",
        "get-detailed-analytics",
        "integration-with-monitoring",
        "contains",
        "--dailyweeklymonthly-summaries",
        "--budget-alert-counts",
        "--total-records-tracked",
        "pricing-information",
        "openai-api",
        "firestore",
        "google-apis",
        "file-structure",
        "best-practices",
        "1-regular-monitoring",
        "2-integration-strategy",
        "3-optimization-implementation",
        "4-budget-management",
        "troubleshooting",
        "common-issues",
        "debug-commands",
        "check-data",
        "recent-usage",
        "contributing",
        "adding-new-services",
        "enhancing-optimization",
        "dashboard-extensions",
        "license"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "docs/DOCS_STANDARDS.md",
      "title": "\ud83d\udcdd Documentation Standards & Templates",
      "anchors": [
        "-documentation-standards--templates",
        "-documentation-philosophy",
        "-document-types--templates",
        "1-guide-documents",
        "purpose",
        "template-structure",
        "-title-guide",
        "-overview",
        "concept-name",
        "-major-section",
        "subsection",
        "code-examples-with-proper-formatting",
        "-getting-started",
        "-related-documentation",
        "2-reference-documents",
        "purpose",
        "template-structure",
        "-component-reference",
        "-overview",
        "-api-reference",
        "core-apis",
        "classnamefunctionname",
        "actual-code-from-implementation",
        "practical-usage-example",
        "-configuration",
        "-troubleshooting",
        "3-architecture-decision-records-adrs",
        "purpose",
        "template-structure",
        "adr-xxx-decision-title",
        "context",
        "decision",
        "consequences",
        "positive",
        "negative",
        "risks",
        "implementation",
        "alternatives-considered",
        "related-documentation",
        "4-component-readme-files",
        "purpose",
        "template-structure",
        "-component-name",
        "-overview",
        "-structure",
        "-usage",
        "basic-usage",
        "-api-reference",
        "-related-documentation",
        "-style-guidelines",
        "file-naming-conventions",
        "header-conventions",
        "-level-1---document-title",
        "-level-2---major-sections",
        "-level-3---subsections",
        "-level-4---details",
        "emoji-usage-standards",
        "code-block-standards",
        "real-code-from-repository",
        "hypothetical-examples",
        "shell-commands",
        "install-dependencies",
        "run-tests",
        "configuration-examples",
        "docker-composeyml",
        "cross-reference-standards",
        "bidirectional-linking",
        "link-formats",
        "internal-documentation-links",
        "code-references",
        "cross-reference-blocks",
        "-related-documentation",
        "-quality-standards",
        "content-quality-requirements",
        "completeness-checklist",
        "accuracy-requirements",
        "language-standards",
        "tone-and-voice",
        "writing-conventions",
        "use-active-voice",
        "be-specific",
        "include-context",
        "provide-alternatives",
        "-agent-friendly-standards",
        "programmatic-navigation",
        "document-metadata",
        "structured-information",
        "use-consistent-patterns-agents-can-parse",
        "-quick-reference",
        "-commands",
        "environment-setup",
        "test-system",
        "anchor-conventions",
        "use-predictable-anchor-naming",
        "-overview------------------overview",
        "-architecture--------------architecture",
        "-getting-started-----------getting-started",
        "-configuration-------------configuration",
        "-api-reference-------------api-reference",
        "-troubleshooting-----------troubleshooting",
        "-related-documentation-----related-documentation",
        "-documentation-workflow",
        "creation-process",
        "update-process",
        "-documentation-tools",
        "automated-quality-checks",
        "link-validation",
        "check-all-internal-links",
        "validate-documentation-alignment",
        "generate-documentation-audit",
        "content-validation",
        "test-all-code-examples",
        "check-style-compliance",
        "validate-cross-references",
        "documentation-generation",
        "index-generation",
        "regenerate-documentation-index",
        "update-cross-reference-web",
        "template-usage",
        "create-new-guide-from-template",
        "create-new-reference-from-template",
        "create-new-adr",
        "-quality-metrics",
        "documentation-health-indicators",
        "automated-metrics",
        "-testing-documentation",
        "documentation-tests",
        "file-testsdocstest_documentationpy",
        "quality-gates",
        "pre-commit-hooks-for-documentation",
        "ci-documentation-checks",
        "-quick-start-for-contributors",
        "creating-new-documentation",
        "1-choose-template-based-on-purpose",
        "--guide-instructional-content",
        "--reference-apitechnical-specs",
        "--adr-architectural-decisions",
        "--readme-component-documentation",
        "2-create-from-template",
        "3-follow-template-structure",
        "4-add-cross-references",
        "5-test-all-examples",
        "6-run-quality-checks",
        "7-update-related-documents-with-back-references",
        "8-update-documentation-index",
        "updating-existing-documentation",
        "1-identify-affected-documents",
        "2-update-content",
        "3-test-examples",
        "4-validate-changes",
        "5-update-cross-references",
        "-related-documentation",
        "core-documentation-process",
        "implementation-references",
        "development-guides",
        "-template-files",
        "available-templates",
        "template-usage",
        "copy-template-for-new-document",
        "replace-template-placeholders",
        "follow-template-structure-and-complete-all-sections"
      ],
      "links_to": [
        "docs/INDEX.md",
        "docs/ARCHITECTURE.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/TESTING.md",
        "docs/link",
        "docs/link",
        "docs/link",
        "docs/link",
        "docs/link",
        "docs/DOCUMENT.md",
        "docs/DOCUMENT.md#section-anchor",
        "path/to/code.py",
        "path/to/code.py#L42",
        "docs/link",
        "docs/link",
        "docs/link",
        "docs/link",
        "docs/link",
        "docs/INDEX.md",
        "docs/ARCHITECTURE.md",
        "docs/QUALITY_GATES.md",
        "ai/system/docs_alignment.py",
        "scripts/docs_audit.py",
        "scripts/fix_crossrefs.py",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/CONTRIBUTING.md",
        "docs/TESTING.md",
        "docs/templates/guide_template.md",
        "docs/templates/reference_template.md",
        "docs/templates/adr_template.md",
        "docs/templates/readme_template.md"
      ],
      "cross_references": []
    },
    {
      "path": "docs/AGENT_DEVELOPMENT.md",
      "title": "\ud83e\udd16 Agent Development Guide",
      "anchors": [
        "-agent-development-guide",
        "-agent-development-overview",
        "standard-agents-legacy",
        "enhanced-agents-recommended",
        "agent-lifecycle",
        "-agent-architecture",
        "enhanced-agents-recommended",
        "legacy-agents-standard",
        "enhanced-agent-flow-patterns",
        "-available-tools",
        "enhanced-memory-tools",
        "basic-memory-tools-legacy",
        "planning--quality",
        "external-integration",
        "utility--normalization",
        "-creating-enhanced-agents",
        "1-enhanced-agent-class-structure",
        "2-legacy-agent-class-structure-standard",
        "2-instructions-template",
        "youragent-instructions",
        "role--responsibilities",
        "available-tools",
        "workflow-patterns",
        "quality-standards",
        "3-update-agency-configuration",
        "in-aiagencypy",
        "-memory-driven-development-practices",
        "enhanced-agent-workflow-patterns",
        "pre-task-memory-consultation",
        "before-starting-any-task-consult-memory",
        "search-for-similar-past-work",
        "get-relevant-context-by-type",
        "during-task-learning-capture",
        "store-progress-and-insights-as-you-work",
        "store-progress-updates",
        "store-insights-discovered-during-work",
        "post-task-memory-consolidation",
        "after-completing-work-consolidate-learnings",
        "store-completion-and-outcome",
        "store-lessons-learned",
        "cross-agent-memory-sharing",
        "memory-context-in-delegation",
        "when-delegating-to-other-agents-include-relevant-memory-context",
        "get-relevant-context-for-delegation",
        "learning-from-other-agent-experiences",
        "learn-from-insights-captured-by-other-agents",
        "memory-driven-decision-making",
        "pattern-based-implementation-choices",
        "use-memory-to-guide-technical-decisions",
        "analyze-patterns-for-similar-technical-challenges",
        "make-informed-decisions-based-on-past-outcomes",
        "risk-mitigation-through-memory",
        "identify-and-avoid-past-failure-patterns",
        "plan-implementation-to-avoid-these-issues",
        "memory-analytics-for-continuous-improvement",
        "performance-pattern-analysis",
        "use-analytics-to-improve-development-patterns",
        "extract-improvement-opportunities",
        "learning-velocity-tracking",
        "track-learning-and-improvement-over-time",
        "identify-areas-for-skill-development",
        "-documentation-standards",
        "cross-reference-requirements",
        "documentation-file-template",
        "-your-document-title",
        "-overview",
        "-related-documentation",
        "inline-code-documentation",
        "-reading-documentation-as-an-agent",
        "navigation-strategy",
        "documentation-discovery-commands",
        "list-all-documentation",
        "search-for-specific-topics",
        "check-cross-references-to-a-specific-doc",
        "understanding-agent-context",
        "-maintaining-documentation-quality",
        "when-adding-new-features",
        "when-modifying-existing-features",
        "documentation-validation-checklist",
        "-related-documentation"
      ],
      "links_to": [
        "docs/INDEX.md",
        "docs/API_REFERENCE.md",
        "docs/ENHANCED_AGENTS.md",
        "docs/MEMORY_SYSTEM.md",
        "docs/DEPLOYMENT.md",
        "docs/ENHANCED_AGENTS.md#agent-specifications",
        "docs/MEMORY_SYSTEM.md#memory-store-implementations",
        "docs/DEPLOYMENT.md#enhanced-agent-deployment",
        "docs/ENHANCED_AGENTS.md#learning-workflows",
        "docs/API_REFERENCE.md#crosssessionanalytics",
        "docs/ENHANCED_AGENTS.md#enhancedfather---strategic-planner",
        "docs/ENHANCED_AGENTS.md#enhancedarchitect---design-intelligence",
        "docs/ENHANCED_AGENTS.md#enhanceddeveloper---implementation-learning",
        "docs/ENHANCED_AGENTS.md#enhancedqa---quality-intelligence",
        "ai/agents/Father.py",
        "ai/agents/Architect.py",
        "ai/agents/Developer.py",
        "ai/agents/QA.py",
        "ai/agents/enhanced_agents.py",
        "docs/ENHANCED_AGENTS.md#memory-integration",
        "docs/API_REFERENCE.md",
        "docs/MEMORY_SYSTEM.md",
        "docs/MCP.md",
        "docs/TOOLS.md",
        "ai/memory/README.md",
        ".cursor/rules/ADR.md",
        "docs/AGENCY_CONFIG.md",
        "docs/DEPLOYMENT.md",
        "docs/INDEX.md",
        "docs/INDEX.md",
        "docs/doc1.md",
        "docs/doc2.md",
        "docs/path.md#specific-section",
        "docs/guide.md",
        "docs/docs/TOOLS.md#tool-name",
        "docs/docs/PATTERNS.md#pattern-name",
        "docs/ai/memory/README.md",
        "docs/docs/ARCHITECTURE.md",
        "docs/INDEX.md",
        "docs/docs/ADR_INDEX.md",
        "docs/DEPLOYMENT.md#current-deployment",
        "ai/memory/README.md#reading-context",
        "docs/TOOLS.md",
        "docs/QUALITY_GATES.md",
        "docs/TOOLS.md",
        "docs/INDEX.md",
        "docs/INDEX.md",
        "docs/TOOLS.md",
        "docs/AGENCY_CONFIG.md",
        "docs/DEPLOYMENT.md",
        "ai/memory/README.md",
        "docs/INTERFACES.md",
        "docs/QUALITY_GATES.md",
        "docs/INDEX.md"
      ],
      "cross_references": []
    },
    {
      "path": "docs/ARCHITECTURE.md",
      "title": "\ud83c\udfdb\ufe0f Fresh AI Architecture Overview",
      "anchors": [
        "-fresh-ai-architecture-overview",
        "-system-overview",
        "core-design-principles",
        "-system-architecture-layers",
        "1-foundation-layer",
        "2-agent-layer",
        "3-system-coordination-layer",
        "4-execution-layer",
        "5-integration-layer",
        "6-analytics-layer",
        "7-interface-layer",
        "-memory-system-architecture",
        "memory-store-hierarchy",
        "memory-classification-system",
        "-enhanced-agent-architecture",
        "agent-enhancement-pattern",
        "agent-specializations",
        "-enhancedfather---strategic-intelligence",
        "-enhancedarchitect---design-intelligence",
        "-enhanceddeveloper---implementation-learning",
        "-enhancedqa---quality-intelligence",
        "-system-coordination-architecture",
        "system-lifecycle-management",
        "component-dependencies",
        "health-monitoring",
        "-execution--monitoring-architecture",
        "real-time-execution-flow",
        "execution-monitoring",
        "status-coordination",
        "-integration-architecture",
        "github-integration",
        "mcp-model-context-protocol-integration",
        "telegram-bot-interface",
        "-tool-architecture",
        "memory-tools-hierarchy",
        "external-integration-tools",
        "-quality-architecture",
        "testing-strategy",
        "quality-gates",
        "adr-architecture-decision-record-system",
        "-deployment-architecture",
        "environment-tiers",
        "configuration-management",
        "-performance--analytics-architecture",
        "performance-monitoring",
        "system-metrics",
        "-component-communication",
        "inter-component-communication",
        "api-boundaries",
        "-security-architecture",
        "security-principles",
        "security-boundaries",
        "-data-flow-architecture",
        "primary-data-flow",
        "memory-flow-pattern",
        "-architectural-patterns",
        "core-patterns-used",
        "1-memory-first-pattern",
        "2-enhanced-wrapper-pattern",
        "3-auto-discovery-pattern",
        "4-graceful-degradation-pattern",
        "5-event-driven-coordination-pattern",
        "6-dependency-injection-pattern",
        "-architecture-evolution",
        "planned-enhancements",
        "migration-strategy",
        "-related-documentation",
        "core-architecture-references",
        "implementation-guides",
        "architectural-decisions"
      ],
      "links_to": [
        "docs/INDEX.md",
        "docs/#system-components",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/MEMORY_SYSTEM.md",
        "docs/DEPLOYMENT.md",
        "docs/MEMORY_SYSTEM.md",
        "ai/memory",
        "docs/ENHANCED_AGENTS.md",
        "ai/agents/enhanced_agents.py",
        "ai/system/coordinator.py",
        "ai/execution/monitor.py",
        "ai/coordination/status.py",
        "ai/integration",
        "docs/TELEGRAM_BOT.md",
        "docs/TOOLS.md",
        "ai/tools",
        "docs/TESTING.md",
        "docs/QUALITY_GATES.md",
        ".cursor/rules/ADR.md",
        "docs/DEPLOYMENT.md",
        "scripts/bootstrap.sh",
        "ai/analytics/performance.py",
        "docs/MONITORING.md",
        "docs/SECURITY.md",
        "docs/MEMORY_SYSTEM.md",
        "docs/ENHANCED_AGENTS.md",
        "docs/API_REFERENCE.md",
        "docs/#system-components",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/DEPLOYMENT.md",
        "docs/TESTING.md",
        "docs/ADR_INDEX.md",
        ".cursor/rules/ADR-004.md",
        "docs/AGENT_DEVELOPMENT.md"
      ],
      "cross_references": []
    },
    {
      "path": "docs/CAPABILITIES.md",
      "title": "\u2705 Capabilities vs Claims Matrix",
      "anchors": [
        "-capabilities-vs-claims-matrix",
        "-implementation-summary",
        "memory-system",
        "-basic-memory-store",
        "-firestore-memory-store",
        "-intelligent-memory-store",
        "enhanced-agents",
        "-agent-system",
        "-enhanced-agent-system",
        "agent-tools",
        "-basic-agent-tools",
        "-enhanced-memory-tools",
        "-persistent-memory-tools",
        "system-coordination",
        "-system-coordinator",
        "-memory-integration",
        "execution--monitoring",
        "-execution-monitor",
        "-status-coordination",
        "integration-layer",
        "-github-integration",
        "-mcp-integration",
        "-telegram-bot-interface",
        "-agent-spawner",
        "analytics--performance",
        "-performance-analytics",
        "quality--testing",
        "-memory-system-tests",
        "-firestore-integration-tests",
        "-requirements--dependencies",
        "required-dependencies",
        "optional-dependencies",
        "environment-configuration",
        "basic-setup",
        "production-memory-optional",
        "agent-execution-optional",
        "-validation",
        "quick-validation",
        "test-core-memory-system",
        "test-enhanced-agents-requires-openai-api-key",
        "run-test-suite",
        "component-validation",
        "memory-system-tests",
        "integration-tests",
        "system-health-check",
        "-related-documentation",
        "core-architecture",
        "implementation-guides",
        "quality-assurance"
      ],
      "links_to": [
        "docs/ARCHITECTURE.md",
        "docs/INDEX.md",
        "docs/TESTING.md",
        "tests/test_memory_store.py",
        "autonomous_env/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/hstore.py",
        "autonomous_env/lib/python3.13/site-packages/openai/types/vector_store.py",
        "ai/memory/store.py",
        "tests/test_memory_store.py",
        "tests/test_memory_store.py",
        "tests/test_firestore_memory.py",
        "docs/docs/ARCHITECTURE.md",
        "docs/docs/AGENCY_CONFIG.md",
        "docs/docs/MEMORY_SYSTEM.md",
        "autonomous_env/lib/python3.13/site-packages/google/cloud/firestore_v1/types/firestore.py",
        "ai/memory/firestore_store.py",
        "ai/memory/firestore.py",
        "ai/memory/firestore_store.py",
        "tests/test_firestore_memory.py",
        "tests/test_firestore_memory.py",
        "docs/docs/ARCHITECTURE.md",
        "docs/docs/AGENCY_CONFIG.md",
        "docs/docs/MEMORY_SYSTEM.md",
        "ai/memory/intelligent_store.py",
        "ai/memory/intelligent_store.py",
        "docs/docs/ARCHITECTURE.md",
        "docs/docs/AGENCY_CONFIG.md",
        "docs/docs/MEMORY_SYSTEM.md",
        "ai/agents/Father.py",
        "ai/agents/EnhancedFather.py",
        "ai/agents/__init__.py",
        "ai/agents/Architect.py",
        "ai/agents/EnhancedArchitect.py",
        "ai/agents/Reviewer.py",
        "ai/agents/EnhancedDeveloper.py",
        "ai/agents/Developer.py",
        "ai/agents/QA.py",
        "docs/docs/ARCHITECTURE.md",
        "docs/docs/MCP.md",
        "docs/docs/AGENCY_CONFIG.md",
        "docs/docs/PATTERNS.md",
        "docs/docs/AGENT_SYSTEM_GUIDE.md",
        "ai/agents/enhanced_agents.py",
        "docs/docs/ARCHITECTURE.md",
        "docs/docs/MCP.md",
        "docs/docs/AGENCY_CONFIG.md",
        "docs/docs/PATTERNS.md",
        "ai/tools/__init__.py",
        "ai/tools/enhanced_memory_tools.py",
        "ai/tools/persistent_memory_tools.py",
        "ai/system/coordinator.py",
        "ai/system/memory_integration.py",
        "scripts/demo-adaptive-monitor.py",
        "autonomous_env/lib/python3.13/site-packages/tqdm/_monitor.py",
        "ai/execution/monitor.py",
        "tests/test_monitor_status.py",
        "tests/test_monitor_event_bus.py",
        "tests/test_monitor_status.py",
        "tests/test_monitor_event_bus.py",
        "tests/test_monitor_status.py",
        "tests/test_monitor_status.py",
        "docs/docs/COST_MONITORING.md",
        "docs/docs/MONITORING.md",
        "autonomous_env/lib/python3.13/site-packages/starlette/status.py",
        "autonomous_env/lib/python3.13/site-packages/grpc_status/rpc_status.py",
        "autonomous_env/lib/python3.13/site-packages/rich/status.py",
        "autonomous_env/lib/python3.13/site-packages/pip/_vendor/rich/status.py",
        "autonomous_env/lib/python3.13/site-packages/openai/types/responses/response_status.py",
        "autonomous_env/lib/python3.13/site-packages/openai/types/beta/realtime/realtime_response_status.py",
        "autonomous_env/lib/python3.13/site-packages/openai/types/beta/threads/run_status.py",
        "ai/monitor/status.py",
        "ai/coordination/status.py",
        "tests/test_monitor_status.py",
        "tests/test_monitor_status.py",
        "tests/test_monitor_status.py",
        "tests/test_monitor_status.py",
        "tests/test_monitor_status.py",
        "ai/integration/github.py",
        "ai/integration/mcp_discovery.py",
        "docs/docs/MCP.md",
        "ai/interface/telegram_bot.py",
        "docs/docs/TELEGRAM_BOT.md",
        "ai/interface/agent_spawner.py",
        "ai/analytics/performance.py",
        "docs/docs/PERFORMANCE.md",
        "tests/test_intelligent_memory.py",
        "tests/test_intelligent_memory.py",
        "tests/test_firestore_memory.py",
        "tests/test_firestore_memory.py",
        "docs/ARCHITECTURE.md",
        "docs/MEMORY_SYSTEM.md",
        "docs/ENHANCED_AGENTS.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/TESTING.md",
        "docs/DEPLOYMENT.md",
        "docs/QUALITY_GATES.md",
        "docs/DOCS_STANDARDS.md"
      ],
      "cross_references": []
    },
    {
      "path": "docs/API_REFERENCE.md",
      "title": "API Reference",
      "anchors": [
        "api-reference",
        "table-of-contents",
        "memory-store-apis",
        "base-memory-store-interface",
        "memorystore",
        "inmemorymemorystore",
        "inmemorymemorystore",
        "intelligentmemorystore",
        "intelligentmemorystore",
        "firestorememorystore",
        "firestorememorystoremax_cache_size100-sync_interval300",
        "requires-firebase_-environment-variables",
        "memory-tool-apis",
        "basic-memory-tools",
        "writememory",
        "readmemorycontext",
        "enhanced-memory-tools",
        "smartwritememory",
        "returns-json-with-intelligence-metadata",
        "semanticsearchmemory",
        "getmemorybytype",
        "getrelatedmemories",
        "persistent-memory-tools",
        "persistentmemorysearch",
        "crosssessionanalytics",
        "memorylearningpatterns",
        "memoryconsolidation",
        "memorysync",
        "enhanced-agent-apis",
        "base-enhanced-agent",
        "enhancedagent",
        "specific-enhanced-agents",
        "enhancedfather",
        "enhancedarchitect",
        "enhanceddeveloper",
        "enhancedqa",
        "agent-factory-functions",
        "create_enhanced_agents",
        "returns-",
        "father-enhancedfather",
        "architect-enhancedarchitect",
        "developer-enhanceddeveloper",
        "qa-enhancedqa",
        "",
        "get_agentname-enhancedtrue",
        "enhanced-agent",
        "standard-agent-backward-compatibility",
        "data-models",
        "memoryitem",
        "enhancedmemoryitem",
        "memorytype",
        "utility-apis",
        "memory-store-factory",
        "get_storestore_typenone",
        "automatic-selection-based-on-environment",
        "explicit-store-type",
        "context-rendering",
        "render_contextlimit10-tagsnone",
        "activity-monitoring",
        "record_memory_operationoperation_type",
        "error-handling",
        "common-exceptions",
        "memorystoreerror",
        "firestoreconnectionerror",
        "memorynotfounderror",
        "error-handling-patterns",
        "graceful-degradation",
        "tool-error-handling",
        "usage-examples",
        "basic-memory-operations",
        "get-memory-store",
        "write-memory",
        "read-memory",
        "query-memories",
        "enhanced-memory-operations",
        "intelligent-memory-store",
        "smart-write-with-classification",
        "semantic-search",
        "agent-memory-integration",
        "enhanced-agent-with-memory",
        "memory-informed-implementation",
        "search-for-similar-implementations",
        "store-implementation-insights",
        "cross-session-analytics",
        "get-cross-session-insights",
        "memory-analytics",
        "learning-patterns",
        "cross-references",
        "core-implementation",
        "tools-and-agents",
        "documentation",
        "testing",
        "architecture"
      ],
      "links_to": [
        "docs/#memory-store-apis",
        "docs/#memory-tool-apis",
        "docs/#enhanced-agent-apis",
        "docs/#data-models",
        "docs/#utility-apis",
        "docs/#error-handling",
        "docs/#usage-examples",
        "docs/#cross-references",
        "ai/memory/store.py",
        "ai/memory/in_memory_store.py",
        "ai/memory/intelligent_store.py",
        "ai/memory/firestore_store.py",
        "ai/tools/memory_tools.py",
        "ai/tools/enhanced_memory_tools.py",
        "ai/tools/persistent_memory_tools.py",
        "ai/agents/enhanced_agents.py",
        "docs/MEMORY_SYSTEM.md",
        "docs/ENHANCED_AGENTS.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/DEPLOYMENT.md",
        "tests/test_intelligent_memory.py",
        "tests/test_firestore_memory.py",
        ".cursor/rules/ADR-004.md"
      ],
      "cross_references": []
    },
    {
      "path": "docs/MCP.md",
      "title": "MCP Integration (Model Context Protocol)",
      "anchors": [
        "mcp-integration-model-context-protocol"
      ],
      "links_to": [],
      "cross_references": [
        "Tools: ./TOOLS.md",
        "Enhanced Agents: ./ENHANCED_AGENTS.md"
      ]
    },
    {
      "path": "docs/TROUBLESHOOTING.md",
      "title": "Troubleshooting",
      "anchors": [
        "troubleshooting"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "docs/AGENCY_CONFIG.md",
      "title": "Agency Configuration",
      "anchors": [
        "agency-configuration"
      ],
      "links_to": [],
      "cross_references": [
        "Enhanced Agents: ./ENHANCED_AGENTS.md",
        "Memory System: ./MEMORY_SYSTEM.md"
      ]
    },
    {
      "path": "docs/ADR_INDEX.md",
      "title": "ADR Index",
      "anchors": [
        "adr-index"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "docs/AUTONOMOUS_WORKFLOWS.md",
      "title": "\ud83e\udd16 Autonomous Development Workflows",
      "anchors": [
        "-autonomous-development-workflows",
        "-overview",
        "core-autonomous-capabilities",
        "-complete-autonomous-workflow",
        "high-level-process",
        "-father-agent-decision-flow",
        "1-request-analysis-pipeline",
        "input-processing",
        "father-agent-receives-and-analyzes-user-request",
        "father-consults-persistent-memory-for-similar-past-work",
        "apply-learned-patterns-from-memory",
        "task-classification",
        "father-categorizes-the-task",
        "agent-team-composition",
        "father-determines-optimal-agent-team",
        "2-memory-driven-planning",
        "context-assembly",
        "father-assembles-comprehensive-context-for-the-team",
        "store-the-planning-decision-for-future-reference",
        "-agent-spawning-apis",
        "1-dynamic-agent-creation",
        "agent-spawner-interface",
        "get-the-intelligent-agent-spawner",
        "spawn-agents-based-on-fathers-analysis",
        "returns",
        "",
        "architect-enhancedarchitect-instance",
        "developer-enhanceddeveloper-instance",
        "qa-enhancedqa-instance",
        "execution_id-exec_12345",
        "",
        "agent-configuration",
        "each-spawned-agent-receives-enhanced-configuration",
        "2-agent-coordination-setup",
        "execution-monitor-configuration",
        "configure-multi-agent-workflow",
        "start-monitored-execution",
        "-real-time-execution-monitor",
        "1-execution-tracking",
        "progress-monitoring",
        "monitor-provides-real-time-progress-updates",
        "status-updates-structure",
        "real-time-status-format",
        "2-agent-coordination",
        "cross-agent-communication",
        "agents-communicate-through-status-coordinator",
        "dependency-resolution",
        "automatic-dependency-management",
        "-github-pr-automation",
        "1-automatic-pr-creation",
        "pr-generation-pipeline",
        "automatic-pr-creation-when-execution-completes",
        "intelligent-pr-description",
        "generated-pr-description-example",
        "jwt-authentication-implementation",
        "-agent-generated-implementation",
        "-changes-summary",
        "-architecture-decisions-enhanced-architect",
        "-implementation-enhanced-developer",
        "-testing-enhanced-qa",
        "-memory-driven-insights",
        "-quality-assurance",
        "2-pr-management",
        "automated-pr-updates",
        "monitor-pr-status-and-update-based-on-feedback",
        "-real-time-status-handling",
        "1-user-notifications",
        "telegram-integration",
        "real-time-user-updates-during-execution",
        "status-dashboard",
        "provide-rich-status-information",
        "2-error-handling--recovery",
        "intelligent-error-recovery",
        "automated-error-handling-and-recovery",
        "-memory-driven-learning-loop",
        "1-continuous-learning",
        "execution-learning",
        "learn-from-each-execution-for-future-improvement",
        "pattern-recognition",
        "identify-successful-patterns-for-reuse",
        "2-performance-optimization",
        "agent-performance-analytics",
        "track-agent-performance-for-optimization",
        "use-metrics-to-optimize-future-executions",
        "-complete-workflow-examples",
        "example-1-bug-fix-workflow",
        "user-reports-bug-via-telegram",
        "father-agent-analysis",
        "execution-flow",
        "result-pr-with-bug-fix-comprehensive-tests-and-learned-patterns-applied",
        "example-2-feature-enhancement-workflow",
        "feature-request",
        "father-spawns-full-team-due-to-complexity",
        "memory-driven-insights-applied",
        "result-complete-oauth2-integration-with-proper-architecture-testing-and-documentation",
        "example-3-architecture-decision-workflow",
        "architecture-change-request",
        "father-recognizes-need-for-careful-planning",
        "result-systematic-migration-with-rollback-plan-and-comprehensive-validation",
        "-getting-started-with-autonomous-workflows",
        "1-basic-setup",
        "1-start-the-fresh-ai-system",
        "2-verify-system-health",
        "3-initialize-telegram-bot-optional",
        "2-first-autonomous-request",
        "via-telegram-bot",
        "or-via-python-api",
        "3-monitor-progress",
        "check-execution-status",
        "get-real-time-updates",
        "-related-documentation",
        "core-workflow-components",
        "integration-guides",
        "advanced-topics"
      ],
      "links_to": [
        "docs/AGENT_DEVELOPMENT.md",
        "docs/ARCHITECTURE.md",
        "ai/system/README.md",
        "docs/TOOLS.md",
        "docs/INDEX.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/ARCHITECTURE.md",
        "ai/system/README.md",
        "docs/TOOLS.md",
        "docs/TELEGRAM_BOT.md",
        "ai/integration/github.py",
        "docs/MCP.md",
        "docs/MEMORY_SYSTEM.md",
        "ai/analytics/performance.py",
        "docs/QUALITY_GATES.md"
      ],
      "cross_references": []
    },
    {
      "path": "docs/TESTING.md",
      "title": "\ud83e\uddea Testing Strategy & Quality Gates",
      "anchors": [
        "-testing-strategy--quality-gates",
        "-testing-philosophy",
        "-test-pyramid-architecture",
        "test-levels-overview",
        "test-distribution",
        "-quick-start-testing",
        "essential-commands",
        "quick-test-runs",
        "coverage-analysis",
        "test-filtering",
        "verbose-output",
        "test-configuration",
        "-core-testing-areas",
        "1-memory-system-testing",
        "2-agent-system-testing",
        "3-integration-testing",
        "4-end-to-end-testing",
        "-quality-gates",
        "automated-quality-checks",
        "coverage-requirements",
        "-tdd-development-flow",
        "red-green-refactor-pattern",
        "1-red---write-failing-test",
        "2-green---make-test-pass",
        "add-insight-classification-to-intelligent_storepy",
        "3-refactor---improve-implementation",
        "enhance-classification-algorithm",
        "-test-environment-setup",
        "local-development",
        "install-test-dependencies",
        "set-test-environment-variables",
        "optional-firestore-testing-requires-real-credentials",
        "ci-environment",
        "-test-categories--markers",
        "test-markers",
        "running-specific-categories",
        "run-only-unit-tests",
        "run-memory-related-tests",
        "run-integration-tests",
        "skip-slow-tests",
        "-debugging-tests",
        "debug-failed-tests",
        "verbose-output-with-full-tracebacks",
        "stop-at-first-failure",
        "run-last-failed-tests-only",
        "run-specific-test-with-debug-output",
        "common-test-issues",
        "-test-metrics--reporting",
        "coverage-reports",
        "generate-html-coverage-report",
        "terminal-coverage-summary",
        "json-coverage-for-automation",
        "test-performance",
        "show-slowest-tests",
        "profile-test-execution",
        "-related-documentation"
      ],
      "links_to": [
        "docs/ARCHITECTURE.md",
        "docs/QUALITY_GATES.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/CICD.md",
        "docs/INDEX.md",
        "docs/QUALITY_GATES.md",
        "docs/CICD.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/MEMORY_SYSTEM.md",
        "docs/ARCHITECTURE.md"
      ],
      "cross_references": []
    },
    {
      "path": "docs/PERFORMANCE.md",
      "title": "Performance Guidelines",
      "anchors": [
        "performance-guidelines"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "docs/CICD.md",
      "title": "CI/CD Documentation",
      "anchors": [
        "cicd-documentation",
        "daily-autonomous-planning-github-actions"
      ],
      "links_to": [],
      "cross_references": [
        "Quality Gates: ./QUALITY_GATES.md",
        "Testing: ./TESTING.md",
        "ADR Index: ./ADR_INDEX.md"
      ]
    },
    {
      "path": "docs/PATTERNS.md",
      "title": "Development Patterns",
      "anchors": [
        "development-patterns"
      ],
      "links_to": [],
      "cross_references": [
        "Enhanced Agents: ./ENHANCED_AGENTS.md",
        "Agent Development: ./AGENT_DEVELOPMENT.md"
      ]
    },
    {
      "path": "docs/MEMORY_SYSTEM.md",
      "title": "Memory System Architecture",
      "anchors": [
        "memory-system-architecture",
        "table-of-contents",
        "architecture-overview",
        "key-components",
        "memory-store-implementations",
        "1-inmemorymemorystore",
        "automatic-selection-based-on-environment",
        "2-intelligentmemorystore",
        "explicit-intelligent-store",
        "writes-return-enhanced-memory-items",
        "3-firestorememorystore",
        "requires-firebase_-environment-variables",
        "memory-classification",
        "memory-types",
        "importance-scoring-algorithm",
        "tools-and-apis",
        "basic-memory-tools",
        "simple-memory-storage",
        "basic-context-retrieval",
        "intelligent-memory-tools",
        "smart-memory-with-auto-classification",
        "semantic-keyword-search",
        "type-based-retrieval",
        "relationship-exploration",
        "persistent-memory-tools",
        "cross-session-search",
        "learning-pattern-analysis",
        "memory-analytics",
        "memory-consolidation",
        "enhanced-agents",
        "agent-capabilities",
        "enhancedfather-strategic-agent",
        "agent-has-access-to",
        "--smartwritememory-persistentmemorysearch",
        "--crosssessionanalytics-memorylearningpatterns",
        "--generatereleasenotes-generatenextsteps",
        "enhancedarchitect-design-agent",
        "enhanceddeveloper-implementation-agent",
        "enhancedqa-quality-agent",
        "memory-driven-workflows",
        "usage-patterns",
        "1-development-workflow-integration",
        "agent-starts-new-task",
        "agent-writes-progress-updates",
        "agent-captures-learnings",
        "2-strategic-planning",
        "review-past-goals-and-their-outcomes",
        "analyze-learning-patterns",
        "set-new-goal-based-on-insights",
        "3-error-learning",
        "when-error-occurs-search-for-similar-past-errors",
        "store-the-error-and-solution",
        "store-the-learning",
        "4-cross-session-analytics",
        "analyze-memory-patterns-for-insights",
        "focus-on-specific-learning-areas",
        "clean-up-old-memories",
        "cross-references",
        "core-implementation-files",
        "tools-and-apis",
        "enhanced-agents",
        "testing-and-validation",
        "architecture-documents",
        "demo-scripts"
      ],
      "links_to": [
        "docs/#architecture-overview",
        "docs/#memory-store-implementations",
        "docs/#memory-classification",
        "docs/#tools-and-apis",
        "docs/#enhanced-agents",
        "docs/#usage-patterns",
        "docs/#cross-references",
        "ai/memory/store.py",
        "ai/memory/in_memory_store.py",
        "ai/memory/intelligent_store.py",
        "ai/memory/firestore_store.py",
        "ai/tools/memory_tools.py",
        "ai/tools/enhanced_memory_tools.py",
        "ai/tools/persistent_memory_tools.py",
        "ai/agents/enhanced_agents.py",
        "tests/test_intelligent_memory.py",
        "tests/test_firestore_memory.py",
        ".cursor/rules/ADR-004.md",
        "docs/ENHANCED_AGENTS.md",
        "docs/API_REFERENCE.md",
        "docs/DEPLOYMENT.md",
        "scripts/demo-persistent-memory.py",
        "scripts/demo-agent-activity.py"
      ],
      "cross_references": []
    },
    {
      "path": "docs/ENHANCED_AGENTS.md",
      "title": "Enhanced Agent Architecture",
      "anchors": [
        "enhanced-agent-architecture",
        "table-of-contents",
        "architecture-overview",
        "key-enhancements",
        "agent-specifications",
        "enhancedfather---strategic-planner",
        "check-past-similar-goals-before-planning",
        "store-strategic-decisions-with-rationale",
        "analyze-development-patterns-for-better-planning",
        "enhancedarchitect---design-intelligence",
        "1-check-memory-for-similar-past-decisions",
        "2-require-failing-test-first-learn-from-past-tdd-experiences",
        "3-store-architectural-decision-with-rationale",
        "4-after-implementation-capture-lessons-learned",
        "enhanceddeveloper---implementation-learning",
        "search-for-similar-implementations-before-starting",
        "store-implementation-patterns-that-work",
        "capture-bug-learnings",
        "store-refactoring-insights",
        "enhancedqa---quality-intelligence",
        "search-for-similar-testing-scenarios",
        "store-effective-test-patterns",
        "capture-failure-patterns",
        "document-quality-insights",
        "memory-integration",
        "memory-driven-workflows",
        "1-pre-task-memory-consultation",
        "2-during-task-memory-updates",
        "3-post-task-memory-consolidation",
        "cross-agent-memory-sharing",
        "learning-workflows",
        "strategic-learning-cycle-enhancedfather",
        "technical-learning-cycle-enhanceddeveloper",
        "tool-ecosystem",
        "memory-tool-categories",
        "smart-memory-tools",
        "persistent-memory-tools",
        "standard-agent-tools",
        "tool-usage-patterns",
        "memory-first-development",
        "cross-agent-learning",
        "usage-examples",
        "example-1-strategic-planning-with-memory",
        "enhancedfather-planning-new-authentication-feature",
        "check-past-authentication-work",
        "analyze-patterns-in-past-auth-work",
        "get-cross-session-insights",
        "create-memory-informed-plan",
        "store-the-strategic-plan",
        "example-2-implementation-with-learning",
        "enhanceddeveloper-implementing-with-memory-guidance",
        "search-for-jwt-implementation-patterns",
        "check-for-common-jwt-bugs",
        "implement-with-memory-insights",
        "store-implementation-approach",
        "example-3-quality-assurance-with-pattern-recognition",
        "enhancedqa-with-memory-driven-testing",
        "get-testing-patterns-for-authentication",
        "find-common-bug-patterns",
        "create-comprehensive-test-plan",
        "store-testing-strategy",
        "migration-guide",
        "from-standard-to-enhanced-agents",
        "1-environment-setup",
        "ensure-memory-system-is-available",
        "for-persistent-memory-set-up-firestore-environment-variables",
        "2-agent-replacement",
        "before-standard-agents",
        "after-enhanced-agents",
        "returns-father-enhancedfather-architect-enhancedarchitect-",
        "3-gradual-migration-support",
        "use-enhanced-agents-selectively",
        "migration-workflow",
        "4-memory-integration-verification",
        "test-memory-integration",
        "verify-memory-tools-are-available",
        "test-memory-functionality",
        "cross-references",
        "core-implementation",
        "memory-tools",
        "documentation",
        "architecture-decisions",
        "testing-and-validation",
        "demo-and-examples"
      ],
      "links_to": [
        "docs/#architecture-overview",
        "docs/#agent-specifications",
        "docs/#memory-integration",
        "docs/#learning-workflows",
        "docs/#tool-ecosystem",
        "docs/#usage-examples",
        "docs/#migration-guide",
        "docs/#cross-references",
        "ai/agents/enhanced_agents.py",
        "ai/memory/intelligent_store.py",
        "ai/memory/firestore_store.py",
        "ai/tools/enhanced_memory_tools.py",
        "ai/tools/persistent_memory_tools.py",
        "ai/tools/memory_tools.py",
        "docs/MEMORY_SYSTEM.md",
        "docs/API_REFERENCE.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/DEPLOYMENT.md",
        ".cursor/rules/ADR-004.md",
        "tests/test_intelligent_memory.py",
        "tests/test_firestore_memory.py",
        "scripts/demo-persistent-memory.py",
        "scripts/demo-agent-activity.py"
      ],
      "cross_references": []
    },
    {
      "path": "docs/DEPLOYMENT.md",
      "title": "Deployment and Operations Guide",
      "anchors": [
        "deployment-and-operations-guide",
        "table-of-contents",
        "quick-start",
        "local-development-setup",
        "1-install-dependencies",
        "2-set-up-basic-environment",
        "3-test-memory-system",
        "4-test-enhanced-agents",
        "production-deployment",
        "1-set-up-firestore-credentials",
        "2-deploy-with-persistent-memory",
        "environment-setup",
        "development-environment",
        "required-dependencies",
        "pyprojecttoml---core-dependencies",
        "optional-dependencies-installed-as-needed",
        "environment-variables",
        "basic-configuration",
        "memory-system-configuration",
        "optional-firestore-configuration-for-persistent-memory",
        "optional-agent-configuration",
        "production-environment",
        "docker-configuration",
        "install-system-dependencies",
        "set-working-directory",
        "copy-requirements-and-install-python-dependencies",
        "copy-application-code",
        "set-environment-variables",
        "health-check",
        "run-application",
        "docker-compose",
        "memory-system-deployment",
        "memory-store-selection",
        "automatic-selection",
        "automatic-selection-based-on-environment",
        "explicit-selection",
        "force-specific-store-type",
        "force-firestore-fails-if-not-available",
        "force-intelligent-store-no-persistence",
        "force-basic-store-minimal-features",
        "firestore-configuration",
        "service-account-setup",
        "option-1-json-file-path",
        "option-2-individual-variables",
        "firestore-database-setup",
        "initialize-firestore-with-proper-configuration",
        "test-connection",
        "firestore-security-rules",
        "memory-store-configuration",
        "local-cache-management",
        "configure-intelligent-caching",
        "memory-consolidation-strategy",
        "configure-automatic-memory-cleanup",
        "enhanced-agent-deployment",
        "agent-selection-and-configuration",
        "production-agent-deployment",
        "deploy-enhanced-agents-with-full-memory-capabilities",
        "create-all-enhanced-agents",
        "verify-memory-capabilities",
        "gradual-migration-strategy",
        "gradual-migration-from-standard-to-enhanced-agents",
        "agent-configuration-management",
        "environment-based-configuration",
        "environment-specific-agent-configuration",
        "agent-monitoring-integration",
        "monitor-agent-memory-usage-and-performance",
        "production-configuration",
        "high-availability-setup",
        "load-balancing-configuration",
        "nginxconf-for-agent-load-balancing",
        "database-connection-pooling",
        "firestore-connection-pooling-for-high-availability",
        "security-configuration",
        "environment-variable-security",
        "use-secrets-management-for-sensitive-variables",
        "or-use-kubernetes-secrets",
        "network-security",
        "kubernetes-networkpolicy-for-agent-security",
        "performance-optimization",
        "memory-store-performance-tuning",
        "production-optimized-memory-store-configuration",
        "agent-performance-monitoring",
        "performance-monitoring-for-production-agents",
        "monitoring-and-analytics",
        "health-checks",
        "system-health-monitoring",
        "comprehensive-health-check-endpoint",
        "memory-system-health",
        "memory-specific-health-monitoring",
        "performance-metrics",
        "memory-usage-analytics",
        "monitor-memory-system-performance",
        "agent-performance-tracking",
        "track-agent-performance-over-time",
        "logging-and-observability",
        "structured-logging",
        "configure-structured-logging-for-production",
        "troubleshooting",
        "common-issues",
        "memory-store-connection-issues",
        "verify-environment-variables",
        "graceful-degradation",
        "agent-creation-failures",
        "or",
        "memory-performance-issues",
        "increase-cache-for-better-performance",
        "use-multiple-store-instances",
        "debugging-tools",
        "memory-system-diagnostics",
        "comprehensive-memory-system-diagnostics",
        "agent-system-diagnostics",
        "agent-system-diagnostics",
        "performance-optimization",
        "memory-store-optimization",
        "optimize-memory-store-for-production-workloads",
        "agent-performance-tuning",
        "tune-agent-performance-for-production",
        "cross-references",
        "core-documentation",
        "implementation-files",
        "configuration-and-setup",
        "testing-and-validation"
      ],
      "links_to": [
        "docs/#quick-start",
        "docs/#environment-setup",
        "docs/#memory-system-deployment",
        "docs/#enhanced-agent-deployment",
        "docs/#production-configuration",
        "docs/#monitoring-and-analytics",
        "docs/#troubleshooting",
        "docs/#cross-references",
        "docs/MEMORY_SYSTEM.md",
        "docs/ENHANCED_AGENTS.md",
        "docs/API_REFERENCE.md",
        "docs/AGENT_DEVELOPMENT.md",
        "ai/memory/store.py",
        "ai/memory/firestore_store.py",
        "ai/agents/enhanced_agents.py",
        ".cursor/rules/ADR-004.md",
        "scripts/demo-persistent-memory.py",
        "scripts/demo-agent-activity.py",
        "tests/test_intelligent_memory.py",
        "tests/test_firestore_memory.py"
      ],
      "cross_references": []
    },
    {
      "path": "docs/INDEX.md",
      "title": "\ud83d\udcda Fresh Documentation Index",
      "anchors": [
        "-fresh-documentation-index",
        "-quick-start-paths",
        "-complete-documentation-map",
        "-capabilities-vs-claims",
        "-architecture--design",
        "-agent-system",
        "-tools--apis",
        "-configuration--setup",
        "-development-workflow",
        "-advanced-topics",
        "-cross-reference-quick-links",
        "by-functional-area",
        "by-implementation-layer",
        "-documentation-standards",
        "cross-reference-conventions",
        "file-organization",
        "-getting-started"
      ],
      "links_to": [
        "README.md",
        "docs/#-architecture--design",
        "WARP.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/#-tools--apis",
        "docs/DEPLOYMENT.md",
        "ai/memory/README.md",
        "docs/DEPLOYMENT.md",
        "docs/#-configuration--setup",
        "WARP.md",
        "docs/CICD.md",
        "docs/CONTRIBUTING.md",
        "docs/#-development-workflow",
        ".cursor/rules/ADR.md",
        "docs/TESTING.md",
        "docs/CAPABILITIES.md",
        "README.md",
        "docs/ARCHITECTURE.md",
        "docs/ADR_INDEX.md",
        ".cursor/rules/folder-structure.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/AGENT_SYSTEM_GUIDE.md",
        "ai/memory/README.md",
        "docs/AGENCY_CONFIG.md",
        "agency_manifesto.md",
        "docs/TOOLS.md",
        "docs/MCP.md",
        "docs/INTERFACES.md",
        "docs/TELEGRAM_BOT.md",
        "ai/execution/monitor.py",
        "ai/integration/github.py",
        "ai/analytics/performance.py",
        "docs/DEPLOYMENT.md",
        "WARP.md",
        "docs/BOOTSTRAP.md",
        "docs/SECURITY.md",
        "ai/system/coordinator.py",
        "launch_agent_system.py",
        "docs/CONTRIBUTING.md",
        "docs/TESTING.md",
        "docs/CICD.md",
        "docs/QUALITY_GATES.md",
        "docs/AUTONOMY/README.md",
        "docs/PATTERNS.md",
        "docs/TROUBLESHOOTING.md",
        "docs/MONITORING.md",
        "docs/PERFORMANCE.md",
        "ai/coordination/status.py",
        "tests/test_mcp_integration.py",
        "ai/memory/README.md",
        ".cursor/rules/ADR-003.md",
        ".cursor/rules/ADR-004.md",
        "docs/TESTING.md",
        "docs/QUALITY_GATES.md",
        "tests/test_mcp_integration.py",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/AGENT_SYSTEM_GUIDE.md",
        "docs/TOOLS.md",
        "ai/execution/monitor.py",
        "ai/coordination/status.py",
        "docs/AGENT_SYSTEM_GUIDE.md",
        "ai/integration/github.py",
        "docs/TELEGRAM_BOT.md",
        "launch_agent_system.py",
        "WARP.md",
        "docs/INTERFACES.md",
        "docs/DEPLOYMENT.md",
        "docs/BOOTSTRAP.md",
        "ai/system/coordinator.py",
        "docs/DEPLOYMENT.md",
        "docs/MONITORING.md",
        "docs/AGENT_DEVELOPMENT.md",
        "ai/interface/agent_spawner.py",
        "ai/memory/README.md",
        "ai/execution/monitor.py",
        "ai/coordination/status.py",
        "ai/analytics/performance.py",
        "docs/TELEGRAM_BOT.md",
        "ai/integration/github.py",
        "launch_agent_system.py",
        "docs/TOOLS.md",
        "docs/MCP.md",
        "docs/INTERFACES.md",
        "docs/CONTRIBUTING.md",
        "docs/TESTING.md",
        "tests/test_mcp_integration.py",
        "docs/AGENT_DEVELOPMENT.md#documentation-standards",
        "README.md",
        "docs/AGENT_SYSTEM_GUIDE.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/CONTRIBUTING.md",
        "docs/DEPLOYMENT.md",
        "docs/AGENT_SYSTEM_GUIDE.md",
        "docs/TROUBLESHOOTING.md"
      ],
      "cross_references": []
    },
    {
      "path": "docs/CONTRIBUTING.md",
      "title": "Contributing Guide",
      "anchors": [
        "contributing-guide"
      ],
      "links_to": [],
      "cross_references": [
        "Agent Development: ./AGENT_DEVELOPMENT.md",
        "ADR Guidelines: ../.cursor/rules/ADR.md"
      ]
    },
    {
      "path": "docs/INTERFACES.md",
      "title": "Interface Documentation",
      "anchors": [
        "interface-documentation"
      ],
      "links_to": [],
      "cross_references": [
        "Warp Terminal Guide: ../WARP.md",
        "Deployment: ./DEPLOYMENT.md"
      ]
    },
    {
      "path": "docs/BOOTSTRAP.md",
      "title": "Bootstrap Guide",
      "anchors": [
        "bootstrap-guide"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "docs/TELEGRAM_BOT.md",
      "title": "\ud83e\udd16 Telegram Bot Interface",
      "anchors": [
        "-telegram-bot-interface",
        "-overview",
        "key-features",
        "-quick-start",
        "1-set-up-telegram-bot",
        "2-install-dependencies",
        "install-telegram-dependencies",
        "or-let-the-script-install-them-automatically",
        "3-run-the-bot",
        "-user-commands",
        "core-commands",
        "request-flow",
        "-father-agent-decision-making",
        "analysis-inputs",
        "decision-factors",
        "example-decision-process",
        "-technical-architecture",
        "components",
        "request-processing-flow",
        "security-features",
        "-request-types--examples",
        "development-requests",
        "documentation-requests",
        "bug-fix-requests",
        "deployment-requests",
        "-configuration-options",
        "environment-variables",
        "required",
        "optional-security",
        "optional-features",
        "bot-behavior",
        "in-telegram_botpy---customize-these-settings",
        "-monitoring--debugging",
        "bot-status",
        "check-bot-status",
        "view-recent-activity",
        "memory-inspection",
        "get-recent-telegram-activity",
        "spawn-history",
        "-troubleshooting",
        "common-issues",
        "debug-mode",
        "run-with-debug-logging",
        "-best-practices",
        "for-users",
        "for-administrators",
        "-related-documentation",
        "-advanced-usage",
        "custom-agent-templates",
        "in-telegram_botpy---add-custom-patterns",
        "integration-with-external-tools",
        "webhook-mode",
        "webhook-configuration-in-telegram_botpy"
      ],
      "links_to": [
        "docs/INDEX.md",
        "docs/INTERFACES.md",
        "docs/AGENT_DEVELOPMENT.md",
        "ai/agents/Father.py",
        "ai/interface/telegram_bot.py",
        "ai/interface/telegram_bot.py#L44",
        "ai/interface/agent_spawner.py",
        "ai/memory/README.md",
        "docs/INTERFACES.md",
        "docs/AGENT_DEVELOPMENT.md",
        "ai/memory/README.md",
        "docs/TOOLS.md",
        "docs/DEPLOYMENT.md"
      ],
      "cross_references": []
    },
    {
      "path": "docs/QUALITY_GATES.md",
      "title": "Quality Gates",
      "anchors": [
        "quality-gates"
      ],
      "links_to": [],
      "cross_references": [
        "CI/CD: ./CICD.md",
        "Contributing: ./CONTRIBUTING.md"
      ]
    },
    {
      "path": "docs/AGENT_SYSTEM_GUIDE.md",
      "title": "Fresh Agent System - Comprehensive Guide",
      "anchors": [
        "fresh-agent-system---comprehensive-guide",
        "system-architecture",
        "core-components",
        "key-features",
        "-intelligent-agent-spawning",
        "-real-time-execution",
        "-automated-github-integration",
        "-performance-optimization",
        "-telegram-bot-interface",
        "getting-started",
        "prerequisites",
        "installation",
        "quick-start",
        "usage-examples",
        "development-task-request",
        "system-status-check",
        "agent-performance-analytics",
        "performance-metrics-automatically-collected",
        "system-commands",
        "telegram-bot-commands",
        "cli-commands",
        "launch-the-complete-system",
        "launch-with-debug-logging",
        "show-current-system-status",
        "launch-with-custom-configuration",
        "configuration",
        "system-configuration",
        "environment-variables",
        "telegram-configuration",
        "github-configuration",
        "system-configuration",
        "advanced-features",
        "custom-agent-types",
        "define-custom-agent-in-spawner-configuration",
        "integration-testing",
        "run-the-integration-test-suite",
        "test-specific-components",
        "performance-monitoring",
        "health-monitoring",
        "troubleshooting",
        "common-issues",
        "debug-mode",
        "system-status",
        "log-files",
        "api-reference",
        "agent-spawner-api",
        "spawn-agents-for-a-request",
        "get-spawn-status",
        "list-active-agents",
        "execution-monitor-api",
        "execute-agent-batch",
        "get-execution-status",
        "performance-analytics-api",
        "record-spawn-metrics",
        "get-optimization-recommendations",
        "contributing",
        "system-architecture-diagram",
        "conclusion"
      ],
      "links_to": [
        "docs/AGENT_DEVELOPMENT.md"
      ],
      "cross_references": []
    },
    {
      "path": "docs/MONITORING.md",
      "title": "Monitoring & Observability",
      "anchors": [
        "monitoring--observability"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "docs/SECURITY.md",
      "title": "Security Guidelines",
      "anchors": [
        "security-guidelines"
      ],
      "links_to": [],
      "cross_references": [
        "Deployment: ./DEPLOYMENT.md"
      ]
    },
    {
      "path": "docs/TOOLS.md",
      "title": "\ud83d\udee0\ufe0f Tool Reference",
      "anchors": [
        "-tool-reference",
        "-tool-categories",
        "memory--context-management",
        "planning--quality-assurance",
        "external-integration",
        "architecture--documentation",
        "-memory--context-tools",
        "writememory",
        "readmemorycontext",
        "-planning--quality-tools",
        "generatenextsteps",
        "generatereleasenotes",
        "dodcheck",
        "-external-integration-tools",
        "discovermcpservers",
        "returns-list-of-server-configurations-with-available-tools",
        "callmcptool",
        "-architecture--documentation-tools",
        "createadr",
        "intentnormalizer",
        "returns-feature-bug-docs",
        "-interface-tools",
        "cli-scripts",
        "python-interfaces",
        "-tool-implementation-patterns",
        "error-handling",
        "memory-integration",
        "cross-references-in-tool-output",
        "results",
        "related-documentation",
        "-related-documentation"
      ],
      "links_to": [
        "docs/INDEX.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/MCP.md",
        "docs/INTERFACES.md",
        "docs/#writememory",
        "docs/#readmemorycontext",
        "docs/#generatenextsteps",
        "docs/#generatereleasenotes",
        "docs/#dodcheck",
        "docs/#discovermcpservers",
        "docs/#callmcptool",
        "docs/#createadr",
        "docs/#intentnormalizer",
        "ai/tools/memory_tools.py",
        "ai/memory/README.md",
        "ai/tools/memory_tools.py",
        "ai/memory/README.md",
        "ai/tools/next_steps.py",
        "docs/AGENT_DEVELOPMENT.md#planning-quality",
        "ai/tools/release_notes.py",
        "docs/QUALITY_GATES.md",
        "ai/tools/dod_checker.py",
        "docs/QUALITY_GATES.md",
        "docs/TESTING.md",
        "ai/tools/mcp_client.py",
        "docs/MCP.md",
        "ai/tools/mcp_client.py",
        "docs/MCP.md",
        "docs/SECURITY.md",
        "ai/tools/adr_logger.py",
        ".cursor/rules/ADR.md",
        "docs/ADR_INDEX.md",
        "ai/tools/intent.py",
        "docs/AGENT_DEVELOPMENT.md#utility-normalization",
        "scripts",
        "docs/INTERFACES.md",
        "WARP.md",
        "ai/interface/deploy_agents.py",
        "ai/interface/ask_implement.py",
        "docs/docs/TOOLS.md#{self.tool_name.lower(",
        "docs/docs/GUIDE.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/MCP.md",
        "ai/memory/README.md",
        "docs/INTERFACES.md",
        "docs/QUALITY_GATES.md",
        "docs/SECURITY.md"
      ],
      "cross_references": []
    },
    {
      "path": "ai/agency_manifesto.md",
      "title": "Agency Manifesto",
      "anchors": [
        "agency-manifesto"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": ".cursor/rules/ADR-002.md",
      "title": "ADR-002: Enforce staging-only database access during development; never connect agents to production",
      "anchors": [
        "adr-002-enforce-staging-only-database-access-during-development-never-connect-agents-to-production",
        "context",
        "decision",
        "alternatives",
        "consequences",
        "verification"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": ".cursor/rules/ADR-006.md",
      "title": "ADR-006: Test Suite Speed and Determinism Fix",
      "anchors": [
        "adr-006-test-suite-speed-and-determinism-fix",
        "context",
        "problem",
        "decision",
        "injectable-time-system",
        "global-state-isolation",
        "ci-safe-rich-displays",
        "timeout-protection",
        "recursive-process-fix",
        "results",
        "implementation",
        "new-files",
        "updated",
        "alternatives-considered",
        "consequences",
        "verification",
        "next-steps"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": ".cursor/rules/PRD.md",
      "title": "Product Requirements Document (PRD)",
      "anchors": [
        "product-requirements-document-prd",
        "chat--output-style",
        "requirements-documentation-standards",
        "user-stories-format",
        "acceptance-criteria-format",
        "definition-of-done",
        "communication-principles"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": ".cursor/rules/ADR-007.md",
      "title": "ADR-007: Agent Activity Simulation and Monitoring Integration",
      "anchors": [
        "adr-007-agent-activity-simulation-and-monitoring-integration",
        "context",
        "decision",
        "implementation-components",
        "activity-simulation-patterns",
        "alternatives",
        "consequences",
        "verification",
        "demo-usage",
        "run-agent-activity-simulation",
        "validate-monitoring-system",
        "start-adaptive-monitoring-shows-beautiful-rich-ui",
        "success-metrics"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": ".cursor/rules/ADR-003.md",
      "title": "ADR-003: Adopt Firebase (Firestore) for the modern stack with staging-only usage",
      "anchors": [
        "adr-003-adopt-firebase-firestore-for-the-modern-stack-with-staging-only-usage",
        "context",
        "decision",
        "alternatives",
        "consequences",
        "verification"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": ".cursor/rules/ADR-008.md",
      "title": "ADR-008: Autonomous Development Loop for Visible Agent Activity",
      "anchors": [
        "adr-008-autonomous-development-loop-for-visible-agent-activity",
        "status",
        "context",
        "decision",
        "architecture",
        "core-components",
        "1-mother-agent-aiagentsmotherpy",
        "2-repository-scanner-ailooprepo_scannerpy",
        "3-development-loop-ailoopdev_looppy",
        "4-cli-interface-aiclifreshpy",
        "implementation-timeline",
        "consequences",
        "positive",
        "negative",
        "mitigations",
        "verification",
        "success-metrics",
        "references",
        "next-steps"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": ".cursor/rules/workflow.md",
      "title": "Workflow Rules",
      "anchors": [
        "workflow-rules",
        "user-rules-global-collaboration-protocol",
        "debugging--code-change-protocol",
        "no-broken-windows-discipline-hard-rule"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": ".cursor/rules/ADR-004.md",
      "title": "ADR-004: Persistent Agent Memory (Firestore-backed, staging-only)",
      "anchors": [
        "adr-004-persistent-agent-memory-firestore-backed-staging-only",
        "context",
        "decision--implemented",
        "core-architecture-implemented",
        "enhanced-memory-tools-implemented",
        "enhanced-agents-implemented",
        "alternatives",
        "consequences",
        "implementation-status--complete",
        "tests-implemented-3232-passing",
        "production-features",
        "deployment-ready"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": ".cursor/rules/ADR.md",
      "title": "Architecture Decision Records (ADR)",
      "anchors": [
        "architecture-decision-records-adr",
        "memory--context-management",
        "guardrails",
        "decision-record-template",
        "adr-xxx-decision-title",
        "status",
        "context",
        "decision",
        "consequences"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": ".cursor/rules/ADR-001.md",
      "title": "ADR-001: Adopt Agency Swarm for multi-agent orchestration with TDD and ADR gates",
      "anchors": [
        "adr-001-adopt-agency-swarm-for-multi-agent-orchestration-with-tdd-and-adr-gates",
        "context",
        "decision",
        "alternatives",
        "consequences",
        "verification"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": ".cursor/rules/folder-structure.md",
      "title": "Folder Structure Guidelines",
      "anchors": [
        "folder-structure-guidelines",
        "standard-project-structure",
        "file-naming-conventions",
        "security--best-practices",
        "never-commit",
        "always-include",
        "configuration-management",
        "documentation-structure"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": ".cursor/rules/ADR-005.md",
      "title": "ADR-005: Adaptive Agent Monitoring UI Enhancement",
      "anchors": [
        "adr-005-adaptive-agent-monitoring-ui-enhancement",
        "context",
        "decision",
        "adaptive-refresh-intervals",
        "modern-ui-improvements",
        "autonomous-monitoring-features",
        "alternatives",
        "consequences",
        "verification",
        "implementation-priority",
        "implementation-results-",
        "-adaptive-refresh-intervals",
        "-rich-terminal-ui",
        "-activity-detection-system",
        "-performance--health-monitoring",
        "demo--usage",
        "interactive-demo",
        "live-monitoring",
        "cli-options",
        "final-status-complete-"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "docs/AUTONOMY/README.md",
      "title": "Autonomy Artifacts",
      "anchors": [
        "autonomy-artifacts"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "docs/_generated/crossref_report.md",
      "title": "\ud83d\udd17 Cross-Reference Validation Report",
      "anchors": [
        "-cross-reference-validation-report",
        "-cross-reference-health-needs-attention",
        "-broken-links",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsdocs_standardsmd",
        "docsagent_developmentmd",
        "docsagent_developmentmd",
        "docsagent_developmentmd",
        "docsagent_developmentmd",
        "docsagent_developmentmd",
        "docsagent_developmentmd",
        "docsagent_developmentmd",
        "docsagent_developmentmd",
        "docsagent_developmentmd",
        "docsagent_developmentmd",
        "docsagent_developmentmd",
        "docsagent_developmentmd",
        "docsagent_developmentmd",
        "docsagent_developmentmd",
        "docsagent_developmentmd",
        "docsarchitecturemd",
        "docsarchitecturemd",
        "docsapi_referencemd",
        "docsmemory_systemmd",
        "docsindexmd",
        "docsindexmd",
        "docsindexmd",
        "docsindexmd",
        "docstoolsmd",
        "docstoolsmd",
        "aimemoryreadmemd",
        "aisystemreadmemd",
        "aisystemreadmemd",
        "-missing-backlinks",
        "docscapabilitiesmd",
        "docsinterfacesmd",
        "docsagent_developmentmd",
        "docsdeploymentmd",
        "docsmemory_systemmd",
        "docsapi_referencemd",
        "docsenhanced_agentsmd",
        "cursorrulesadr-004md",
        "docsquality_gatesmd",
        "docsindexmd",
        "docsarchitecturemd",
        "docscontributingmd",
        "docstestingmd",
        "docsagency_configmd",
        "docsmcpmd",
        "cursorrulesadrmd",
        "docssecuritymd",
        "docstoolsmd",
        "docsmonitoringmd",
        "docstelegram_botmd",
        "docsadr_indexmd",
        "aisystemreadmemd",
        "docscicdmd",
        "docstroubleshootingmd",
        "cursorrulesfolder-structuremd",
        "docspatternsmd",
        "cursorrulesadr-003md",
        "docsperformancemd",
        "docsbootstrapmd",
        "readmemd",
        "docsautonomyreadmemd",
        "agency_manifestomd",
        "docsagent_system_guidemd",
        "aimemoryreadmemd",
        "warpmd",
        "-recommendations"
      ],
      "links_to": [
        "docs/_generated/docs/link",
        "docs/_generated/docs/link",
        "docs/_generated/docs/link",
        "docs/_generated/docs/link",
        "docs/_generated/docs/link",
        "docs/_generated/docs/DOCUMENT.md",
        "docs/_generated/docs/DOCUMENT.md",
        "docs/_generated/path/to/code.py",
        "docs/_generated/path/to/code.py",
        "docs/_generated/docs/link",
        "docs/_generated/docs/link",
        "docs/_generated/docs/link",
        "docs/_generated/docs/link",
        "docs/_generated/docs/link",
        "docs/_generated/docs/templates/guide_template.md",
        "docs/_generated/docs/templates/reference_template.md",
        "docs/_generated/docs/templates/adr_template.md",
        "docs/_generated/docs/templates/readme_template.md",
        "docs/_generated/docs/ENHANCED_AGENTS.md",
        "docs/_generated/docs/ENHANCED_AGENTS.md",
        "docs/_generated/docs/ENHANCED_AGENTS.md",
        "docs/_generated/docs/ENHANCED_AGENTS.md",
        "docs/_generated/docs/doc1.md",
        "docs/_generated/docs/doc2.md",
        "docs/_generated/docs/path.md",
        "docs/_generated/docs/guide.md",
        "docs/_generated/docs/docs/TOOLS.md",
        "docs/_generated/docs/docs/PATTERNS.md",
        "docs/_generated/docs/ai/memory/README.md",
        "docs/_generated/docs/docs/ARCHITECTURE.md",
        "docs/_generated/docs/docs/ADR_INDEX.md",
        "docs/_generated/docs/DEPLOYMENT.md",
        "docs/_generated/ai/memory/README.md",
        "docs/_generated/docs/ARCHITECTURE.md",
        "docs/_generated/docs/ARCHITECTURE.md",
        "docs/_generated/ai/memory/in_memory_store.py",
        "docs/_generated/ai/memory/in_memory_store.py",
        "docs/_generated/docs/INDEX.md",
        "docs/_generated/docs/INDEX.md",
        "docs/_generated/docs/INDEX.md",
        "docs/_generated/docs/INDEX.md",
        "docs/_generated/docs/docs/TOOLS.md",
        "docs/_generated/docs/docs/GUIDE.md",
        "docs/_generated/docs/AGENT_DEVELOPMENT.md",
        "docs/_generated/ai/execution/README.md",
        "docs/_generated/ai/coordination/README.md"
      ],
      "cross_references": []
    },
    {
      "path": "docs/_generated/gap_report.md",
      "title": "\ud83d\udcca Documentation Gap Analysis Report",
      "anchors": [
        "-documentation-gap-analysis-report",
        "-executive-summary",
        "gap-types-distribution",
        "-high-priority-95-items",
        "broken-link",
        "readmemd---docsmemory_systemmdmemory-store-implementations",
        "readmemd---docsapi_referencemdmemory-store-apis",
        "readmemd---docsenhanced_agentsmdmemory-integration",
        "readmemd---docsagent_developmentmdmemory-driven-development-practices",
        "readmemd---docsapi_referencemdmemory-tool-apis",
        "readmemd---docsapi_referencemdusage-examples",
        "readmemd---docsmemory_systemmdmemory-classification",
        "readmemd---docsapi_referencemdcrosssessionanalytics",
        "readmemd---quick-start",
        "readmemd---docsapi_referencemderror-handling",
        "readmemd---docsmemory_systemmdmemory-store-implementations",
        "readmemd---docsmemory_systemmdarchitecture-overview",
        "readmemd---docsenhanced_agentsmdarchitecture-overview",
        "docsagent_developmentmd---docsenhanced_agentsmdagent-specifications",
        "docsagent_developmentmd---docsmemory_systemmdmemory-store-implementations",
        "docsagent_developmentmd---docsdeploymentmdenhanced-agent-deployment",
        "docsagent_developmentmd---docsenhanced_agentsmdlearning-workflows",
        "docsagent_developmentmd---docsapi_referencemdcrosssessionanalytics",
        "docsagent_developmentmd---docsenhanced_agentsmdenhancedfather---strategic-planner",
        "docsagent_developmentmd---docsenhanced_agentsmdenhancedarchitect---design-intelligence",
        "docsagent_developmentmd---docsenhanced_agentsmdenhanceddeveloper---implementation-learning",
        "docsagent_developmentmd---docsenhanced_agentsmdenhancedqa---quality-intelligence",
        "docsagent_developmentmd---docsenhanced_agentsmdmemory-integration",
        "docsagent_developmentmd---docsdoc1md",
        "docsagent_developmentmd---docsdoc2md",
        "docsagent_developmentmd---docspathmdspecific-section",
        "docsagent_developmentmd---docsguidemd",
        "docsagent_developmentmd---docsdocstoolsmdtool-name",
        "docsagent_developmentmd---docsdocspatternsmdpattern-name",
        "docsagent_developmentmd---docsaimemoryreadmemd",
        "docsagent_developmentmd---docsdocsarchitecturemd",
        "docsagent_developmentmd---docsdocsadr_indexmd",
        "docsagent_developmentmd---docsdeploymentmdcurrent-deployment",
        "docsagent_developmentmd---aimemoryreadmemdreading-context",
        "docsapi_referencemd---docsmemory-store-apis",
        "docsapi_referencemd---docsmemory-tool-apis",
        "docsapi_referencemd---docsenhanced-agent-apis",
        "docsapi_referencemd---docsdata-models",
        "docsapi_referencemd---docsutility-apis",
        "docsapi_referencemd---docserror-handling",
        "docsapi_referencemd---docsusage-examples",
        "docsapi_referencemd---docscross-references",
        "docsapi_referencemd---aimemoryin_memory_storepy",
        "docsmemory_systemmd---docsarchitecture-overview",
        "docsmemory_systemmd---docsmemory-store-implementations",
        "docsmemory_systemmd---docsmemory-classification",
        "docsmemory_systemmd---docstools-and-apis",
        "docsmemory_systemmd---docsenhanced-agents",
        "docsmemory_systemmd---docsusage-patterns",
        "docsmemory_systemmd---docscross-references",
        "docsmemory_systemmd---aimemoryin_memory_storepy",
        "docsenhanced_agentsmd---docsarchitecture-overview",
        "docsenhanced_agentsmd---docsagent-specifications",
        "docsenhanced_agentsmd---docsmemory-integration",
        "docsenhanced_agentsmd---docslearning-workflows",
        "docsenhanced_agentsmd---docstool-ecosystem",
        "docsenhanced_agentsmd---docsusage-examples",
        "docsenhanced_agentsmd---docsmigration-guide",
        "docsenhanced_agentsmd---docscross-references",
        "docsdeploymentmd---docsquick-start",
        "docsdeploymentmd---docsenvironment-setup",
        "docsdeploymentmd---docsmemory-system-deployment",
        "docsdeploymentmd---docsenhanced-agent-deployment",
        "docsdeploymentmd---docsproduction-configuration",
        "docsdeploymentmd---docsmonitoring-and-analytics",
        "docsdeploymentmd---docstroubleshooting",
        "docsdeploymentmd---docscross-references",
        "docsindexmd---docs-architecture--design",
        "docsindexmd---docs-tools--apis",
        "docsindexmd---docs-configuration--setup",
        "docsindexmd---docs-development-workflow",
        "docsindexmd---docsagent_developmentmddocumentation-standards",
        "docstelegram_botmd---aiinterfacetelegram_botpyl44",
        "docstoolsmd---docswritememory",
        "docstoolsmd---docsreadmemorycontext",
        "docstoolsmd---docsgeneratenextsteps",
        "docstoolsmd---docsgeneratereleasenotes",
        "docstoolsmd---docsdodcheck",
        "docstoolsmd---docsdiscovermcpservers",
        "docstoolsmd---docscallmcptool",
        "docstoolsmd---docscreateadr",
        "docstoolsmd---docsintentnormalizer",
        "docstoolsmd---docsagent_developmentmdplanning-quality",
        "docstoolsmd---docsagent_developmentmdutility-normalization",
        "docstoolsmd---docsdocstoolsmdselftool_namelower",
        "docstoolsmd---docsdocsguidemd",
        "aimemoryreadmemd---docstoolsmdmemory-context-tools",
        "aimemoryreadmemd---docstoolsmdwritememory",
        "aimemoryreadmemd---docstoolsmdreadmemorycontext",
        "aimemoryreadmemd---docstoolsmdmemory-context-tools",
        "aimemoryreadmemd---docsagent_developmentmdmemory-context",
        "missing-module-doc",
        "aianalytics",
        "aiexecution",
        "aiintegration",
        "aicoordination",
        "-medium-priority-73-items",
        "missing-implementation-doc",
        "aisystem",
        "aiexecution",
        "aicoordination",
        "aiintegration",
        "aianalytics",
        "undocumented-class",
        "teststest_adaptive_refreshpytestmonitorintegration",
        "autonomous_envlibpython313site-packagesaiohttppytest_pluginpyaiohttpclient",
        "autonomous_envlibpython313site-packagesjinja2bccachepy_memcachedclient",
        "autonomous_envlibpython313site-packagesstarlettetestclientpytestclient",
        "autonomous_envlibpython313site-packageshttpx_clientpybaseclient",
        "autonomous_envlibpython313site-packagesuvloop_testbasepytestthreadedclient",
        "autonomous_envlibpython313site-packagesopenai_base_clientpybaseclient",
        "autonomous_envlibpython313site-packagesopenai_base_clientpy_defaulthttpxclient",
        "autonomous_envlibpython313site-packagesopenai_base_clientpysyncapiclient",
        "autonomous_envlibpython313site-packagesopenai_base_clientpy_defaultasynchttpxclient",
        "autonomous_envlibpython313site-packagesopenai_base_clientpyasyncapiclient",
        "autonomous_envlibpython313site-packagesopenai_base_clientpy_defaultaiohttpclient",
        "autonomous_envlibpython313site-packagesopenai_base_clientpy_defaultaiohttpclient",
        "autonomous_envlibpython313site-packagesopenai__init__py_moduleclient",
        "autonomous_envlibpython313site-packagesopenai__init__py_azuremoduleclient",
        "autonomous_envlibpython313site-packagessqlalchemydialectspostgresql_psycopg_commonpy_psycopghstore",
        "autonomous_envlibpython313site-packagesjsonschemateststest_clipytestcliintegration",
        "autonomous_envlibpython313site-packagesagency_swarmtoolsbasetoolpybasetool",
        "autonomous_envlibpython313site-packagesagency_swarmagentsagentpyagent",
        "autonomous_envlibpython313site-packagesagency_swarmagentsbrowsingagentbrowsingagentpybrowsingagent",
        "autonomous_envlibpython313site-packagesagency_swarmintegrationsfastapi_utilsrequest_modelspyattachmenttool",
        "autonomous_envlibpython313site-packagesopenaitypesvector_storepyvectorstore",
        "autonomous_envlibpython313site-packagesopenailib_toolspyresponsespydanticfunctiontool",
        "autonomous_envlibpython313site-packagesopenailibazurepybaseazureclient",
        "autonomous_envlibpython313site-packagesopenaitypesbetafile_search_toolpyfilesearchtool",
        "autonomous_envlibpython313site-packagesopenaitypesbetathread_create_paramspytoolresourcesfilesearchvectorstore",
        "autonomous_envlibpython313site-packagesopenaitypesbetacode_interpreter_toolpycodeinterpretertool",
        "autonomous_envlibpython313site-packagesopenaitypesbetafunction_toolpyfunctiontool",
        "autonomous_envlibpython313site-packagesopenaitypesbetaassistant_create_paramspytoolresourcesfilesearchvectorstore",
        "autonomous_envlibpython313site-packagesopenaitypesbetathread_create_and_run_paramspythreadtoolresourcesfilesearchvectorstore",
        "autonomous_envlibpython313site-packagesopenaitypesfine_tuningjob_create_paramspyintegration",
        "autonomous_envlibpython313site-packagesopenaitypesfine_tuningfine_tuning_job_wandb_integrationpyfinetuningjobwandbintegration",
        "autonomous_envlibpython313site-packagesopenaitypeschatchat_completion_function_toolpychatcompletionfunctiontool",
        "autonomous_envlibpython313site-packagesopenaitypesresponsesfile_search_toolpyfilesearchtool",
        "autonomous_envlibpython313site-packagesopenaitypesresponsestool_parampywebsearchtool",
        "autonomous_envlibpython313site-packagesopenaitypesresponsesresponse_input_item_parampymcplisttoolstool",
        "autonomous_envlibpython313site-packagesopenaitypesresponsesresponse_input_itempymcplisttoolstool",
        "autonomous_envlibpython313site-packagesopenaitypesresponsesweb_search_toolpywebsearchtool",
        "autonomous_envlibpython313site-packagesopenaitypesresponsesfunction_toolpyfunctiontool",
        "autonomous_envlibpython313site-packagesopenaitypesresponsesresponse_output_itempymcplisttoolstool",
        "autonomous_envlibpython313site-packagesopenaitypesresponsesresponse_itempymcplisttoolstool",
        "autonomous_envlibpython313site-packagesopenaitypesresponsescustom_toolpycustomtool",
        "autonomous_envlibpython313site-packagesopenaitypesresponsestoolpywebsearchtool",
        "autonomous_envlibpython313site-packagesopenaitypesresponsescomputer_toolpycomputertool",
        "autonomous_envlibpython313site-packagesopenaitypesresponsesresponse_input_parampymcplisttoolstool",
        "autonomous_envlibpython313site-packagesopenaitypesconversationsconversation_itempymcplisttoolstool",
        "autonomous_envlibpython313site-packagesopenaitypesbetarealtimesession_update_event_parampysessiontool",
        "autonomous_envlibpython313site-packagesopenaitypesbetarealtimesession_create_paramspytool",
        "autonomous_envlibpython313site-packagesopenaitypesbetarealtimesessionpytool",
        "autonomous_envlibpython313site-packagesopenaitypesbetarealtimeresponse_create_event_parampyresponsetool",
        "autonomous_envlibpython313site-packagesopenaitypesbetarealtimesession_update_eventpysessiontool",
        "autonomous_envlibpython313site-packagesopenaitypesbetarealtimeresponse_create_eventpyresponsetool",
        "autonomous_envlibpython313site-packagesopenaitypesbetarealtimesession_create_responsepytool",
        "aitoolsintentpybasetool",
        "aitoolsdod_checkerpybasetool",
        "aitoolsrelease_notespybasetool",
        "aitoolsenhanced_memory_toolspybasetool",
        "aitoolsmemory_toolspybasetool",
        "aitoolsadr_loggerpybasetool",
        "aitoolsdocs_toolspybasetool",
        "aitoolsnext_stepspybasetool",
        "aitoolspersistent_memory_toolspybasetool",
        "aitoolsmcp_clientpybasetool",
        "aimemorystorepymemorystore",
        "aimemorystorepyinmemorymemorystore",
        "aiagentsenhanced_agentspyagent",
        "aiagentsenhanced_agentspydummytool",
        "aiagentsdocumentationagentpyagent",
        "-low-priority-6-items",
        "inconsistent-naming",
        "memory",
        "agent",
        "mcp",
        "telegram",
        "github",
        "missing-cross-ref",
        "docsdeploymentmd---docsarchitecturemd",
        "-actionable-todo-list",
        "high-priority-actions",
        "medium-priority-actions",
        "low-priority-actions",
        "-quick-wins-low-effort-high-impact"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "docs/AUTONOMY/release_notes/release_notes_20250901T175148Z.md",
      "title": "Release Notes (2025-09-01)",
      "anchors": [
        "release-notes-2025-09-01"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "docs/AUTONOMY/release_notes/release_notes_20250901T083045Z.md",
      "title": "Release Notes (2025-09-01)",
      "anchors": [
        "release-notes-2025-09-01"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "docs/AUTONOMY/next_steps/next_steps_20250901T083045Z.md",
      "title": "Autonomous Next Steps (20250901T083045Z)",
      "anchors": [
        "autonomous-next-steps-20250901t083045z",
        "proposed-steps",
        "definition-of-done-summary",
        "definition-of-done"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "docs/AUTONOMY/next_steps/next_steps_20250901T175148Z.md",
      "title": "Autonomous Next Steps (20250901T175148Z)",
      "anchors": [
        "autonomous-next-steps-20250901t175148z",
        "proposed-steps",
        "definition-of-done-summary",
        "definition-of-done"
      ],
      "links_to": [],
      "cross_references": []
    },
    {
      "path": "ai/memory/README.md",
      "title": "\ud83e\udde0 Memory System Guide",
      "anchors": [
        "-memory-system-guide",
        "-memory-system-overview",
        "architecture-components",
        "-memory-tools",
        "writememory",
        "readmemorycontext",
        "-memory-usage-patterns",
        "goal-setting--planning",
        "strategic-planning",
        "task-breakdown",
        "agent-handoff-coordination",
        "from-architect-to-developer",
        "developer-progress-update",
        "context-retrieval-for-decision-making",
        "get-relevant-context-for-current-task",
        "get-all-recent-activity",
        "-memory-store-configuration",
        "in-memory-store-default",
        "firestore-backend-staging",
        "-memory-context-rendering",
        "recent-memory-context",
        "-memory-monitoring",
        "activity-tracking",
        "automatically-called-by-memory-tools",
        "status-monitoring",
        "check-memory-usage-and-recent-activity",
        "-implementation-details",
        "memory-entry-structure",
        "store-interface",
        "-best-practices",
        "effective-tagging",
        "memory-hygiene",
        "agent-coordination",
        "-related-documentation"
      ],
      "links_to": [
        "docs/INDEX.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/TOOLS.md#memory-context-tools",
        "ai/memory/store.py",
        "ai/tools/memory_tools.py",
        "ai/monitor/activity.py",
        "docs/TOOLS.md#writememory",
        "docs/TOOLS.md#readmemorycontext",
        ".cursor/rules/ADR-003.md",
        ".cursor/rules/ADR-004.md",
        "ai/memory/store.py",
        "ai/monitor/activity.py",
        "scripts/monitor.sh",
        "docs/MONITORING.md",
        "docs/TOOLS.md#memory-context-tools",
        "docs/AGENT_DEVELOPMENT.md#memory-context",
        ".cursor/rules/ADR-003.md",
        ".cursor/rules/ADR-004.md",
        "docs/MONITORING.md"
      ],
      "cross_references": []
    },
    {
      "path": "ai/system/README.md",
      "title": "\ud83c\udf9b\ufe0f System Components",
      "anchors": [
        "-system-components",
        "-overview",
        "-component-structure",
        "-system-coordinator",
        "primary-functions",
        "key-classes",
        "freshagentsystem",
        "systemcomponent",
        "component-dependencies",
        "usage-examples",
        "basic-system-startup",
        "initialize-and-start-system",
        "health-monitoring",
        "get-detailed-system-status",
        "component-status",
        "-memory-integration",
        "purpose",
        "key-functions",
        "integration-points",
        "get-coordinated-memory-access",
        "access-memory-with-full-coordination",
        "-documentation-alignment",
        "purpose",
        "key-features",
        "configuration",
        "background-service",
        "start-background-documentation-monitoring",
        "service-runs-periodic-checks-and-logs-issues-to-memory",
        "-system-initialization",
        "purpose",
        "key-functions",
        "-configuration",
        "environment-variables",
        "system-coordination",
        "documentation-alignment",
        "memory-integration",
        "configuration-files",
        "system-configuration-structure",
        "-deployment-integration",
        "docker-support",
        "health-check-integration",
        "kubernetes-integration",
        "readiness-probe",
        "-monitoring--observability",
        "metrics-exposed",
        "system-level-metrics",
        "component-level-metrics",
        "health-check-endpoints",
        "health-check-api-if-web-server-enabled",
        "-testing",
        "unit-tests",
        "run-system-coordinator-tests",
        "run-memory-integration-tests",
        "run-docs-alignment-tests",
        "integration-tests",
        "full-system-startupshutdown-test",
        "cross-component-coordination-test",
        "-api-reference",
        "core-apis",
        "system-management",
        "memory-integration",
        "documentation-alignment",
        "-troubleshooting",
        "common-issues",
        "component-failed-to-start",
        "memory-integration-not-working",
        "documentation-alignment-disabled",
        "debug-mode",
        "enable-debug-logging-for-system-components",
        "debug-logs-will-show-detailed-startup-sequence",
        "-future-enhancements",
        "planned-features",
        "extensibility",
        "add-custom-system-component",
        "-related-documentation",
        "core-system-documentation",
        "component-documentation",
        "development-guides"
      ],
      "links_to": [
        "docs/ARCHITECTURE.md#system-coordination-architecture",
        "docs/DEPLOYMENT.md",
        "docs/INDEX.md",
        "ai/system/coordinator.py",
        "ai/system/memory_integration.py",
        "ai/system/docs_alignment.py",
        "ai/system/init.py",
        "docs/ARCHITECTURE.md#system-coordination-architecture",
        "docs/DEPLOYMENT.md",
        "launch_agent_system.py",
        "ai/memory/README.md",
        "ai/execution/README.md",
        "ai/coordination/README.md",
        "docs/AGENT_DEVELOPMENT.md",
        "docs/TESTING.md"
      ],
      "cross_references": []
    }
  ],
  "orphan_files": [],
  "broken_links": [
    "README.md -> docs/MEMORY_SYSTEM.md#memory-store-implementations",
    "README.md -> docs/API_REFERENCE.md#memory-store-apis",
    "README.md -> docs/ENHANCED_AGENTS.md#memory-integration",
    "README.md -> docs/AGENT_DEVELOPMENT.md#memory-driven-development-practices",
    "README.md -> docs/API_REFERENCE.md#memory-tool-apis",
    "README.md -> docs/API_REFERENCE.md#usage-examples",
    "README.md -> docs/MEMORY_SYSTEM.md#memory-classification",
    "README.md -> docs/API_REFERENCE.md#crosssessionanalytics",
    "README.md -> #quick-start",
    "README.md -> docs/API_REFERENCE.md#error-handling",
    "README.md -> docs/MEMORY_SYSTEM.md#memory-store-implementations",
    "README.md -> docs/MEMORY_SYSTEM.md#architecture-overview",
    "README.md -> docs/ENHANCED_AGENTS.md#architecture-overview",
    "docs/DOCS_STANDARDS.md -> docs/link",
    "docs/DOCS_STANDARDS.md -> docs/link",
    "docs/DOCS_STANDARDS.md -> docs/link",
    "docs/DOCS_STANDARDS.md -> docs/link",
    "docs/DOCS_STANDARDS.md -> docs/link",
    "docs/DOCS_STANDARDS.md -> docs/DOCUMENT.md",
    "docs/DOCS_STANDARDS.md -> docs/DOCUMENT.md#section-anchor",
    "docs/DOCS_STANDARDS.md -> path/to/code.py",
    "docs/DOCS_STANDARDS.md -> path/to/code.py#L42",
    "docs/DOCS_STANDARDS.md -> docs/link",
    "docs/DOCS_STANDARDS.md -> docs/link",
    "docs/DOCS_STANDARDS.md -> docs/link",
    "docs/DOCS_STANDARDS.md -> docs/link",
    "docs/DOCS_STANDARDS.md -> docs/link",
    "docs/DOCS_STANDARDS.md -> docs/templates/guide_template.md",
    "docs/DOCS_STANDARDS.md -> docs/templates/reference_template.md",
    "docs/DOCS_STANDARDS.md -> docs/templates/adr_template.md",
    "docs/DOCS_STANDARDS.md -> docs/templates/readme_template.md",
    "docs/AGENT_DEVELOPMENT.md -> docs/ENHANCED_AGENTS.md#agent-specifications",
    "docs/AGENT_DEVELOPMENT.md -> docs/MEMORY_SYSTEM.md#memory-store-implementations",
    "docs/AGENT_DEVELOPMENT.md -> docs/DEPLOYMENT.md#enhanced-agent-deployment",
    "docs/AGENT_DEVELOPMENT.md -> docs/ENHANCED_AGENTS.md#learning-workflows",
    "docs/AGENT_DEVELOPMENT.md -> docs/API_REFERENCE.md#crosssessionanalytics",
    "docs/AGENT_DEVELOPMENT.md -> docs/ENHANCED_AGENTS.md#enhancedfather---strategic-planner",
    "docs/AGENT_DEVELOPMENT.md -> docs/ENHANCED_AGENTS.md#enhancedarchitect---design-intelligence",
    "docs/AGENT_DEVELOPMENT.md -> docs/ENHANCED_AGENTS.md#enhanceddeveloper---implementation-learning",
    "docs/AGENT_DEVELOPMENT.md -> docs/ENHANCED_AGENTS.md#enhancedqa---quality-intelligence",
    "docs/AGENT_DEVELOPMENT.md -> docs/ENHANCED_AGENTS.md#memory-integration",
    "docs/AGENT_DEVELOPMENT.md -> docs/doc1.md",
    "docs/AGENT_DEVELOPMENT.md -> docs/doc2.md",
    "docs/AGENT_DEVELOPMENT.md -> docs/path.md#specific-section",
    "docs/AGENT_DEVELOPMENT.md -> docs/guide.md",
    "docs/AGENT_DEVELOPMENT.md -> docs/docs/TOOLS.md#tool-name",
    "docs/AGENT_DEVELOPMENT.md -> docs/docs/PATTERNS.md#pattern-name",
    "docs/AGENT_DEVELOPMENT.md -> docs/ai/memory/README.md",
    "docs/AGENT_DEVELOPMENT.md -> docs/docs/ARCHITECTURE.md",
    "docs/AGENT_DEVELOPMENT.md -> docs/docs/ADR_INDEX.md",
    "docs/AGENT_DEVELOPMENT.md -> docs/DEPLOYMENT.md#current-deployment",
    "docs/AGENT_DEVELOPMENT.md -> ai/memory/README.md#reading-context",
    "docs/ARCHITECTURE.md -> docs/#system-components",
    "docs/ARCHITECTURE.md -> docs/#system-components",
    "docs/CAPABILITIES.md -> docs/docs/ARCHITECTURE.md",
    "docs/CAPABILITIES.md -> docs/docs/AGENCY_CONFIG.md",
    "docs/CAPABILITIES.md -> docs/docs/MEMORY_SYSTEM.md",
    "docs/CAPABILITIES.md -> docs/docs/ARCHITECTURE.md",
    "docs/CAPABILITIES.md -> docs/docs/AGENCY_CONFIG.md",
    "docs/CAPABILITIES.md -> docs/docs/MEMORY_SYSTEM.md",
    "docs/CAPABILITIES.md -> docs/docs/ARCHITECTURE.md",
    "docs/CAPABILITIES.md -> docs/docs/AGENCY_CONFIG.md",
    "docs/CAPABILITIES.md -> docs/docs/MEMORY_SYSTEM.md",
    "docs/CAPABILITIES.md -> docs/docs/ARCHITECTURE.md",
    "docs/CAPABILITIES.md -> docs/docs/MCP.md",
    "docs/CAPABILITIES.md -> docs/docs/AGENCY_CONFIG.md",
    "docs/CAPABILITIES.md -> docs/docs/PATTERNS.md",
    "docs/CAPABILITIES.md -> docs/docs/AGENT_SYSTEM_GUIDE.md",
    "docs/CAPABILITIES.md -> docs/docs/ARCHITECTURE.md",
    "docs/CAPABILITIES.md -> docs/docs/MCP.md",
    "docs/CAPABILITIES.md -> docs/docs/AGENCY_CONFIG.md",
    "docs/CAPABILITIES.md -> docs/docs/PATTERNS.md",
    "docs/CAPABILITIES.md -> docs/docs/COST_MONITORING.md",
    "docs/CAPABILITIES.md -> docs/docs/MONITORING.md",
    "docs/CAPABILITIES.md -> docs/docs/MCP.md",
    "docs/CAPABILITIES.md -> docs/docs/TELEGRAM_BOT.md",
    "docs/CAPABILITIES.md -> docs/docs/PERFORMANCE.md",
    "docs/API_REFERENCE.md -> docs/#memory-store-apis",
    "docs/API_REFERENCE.md -> docs/#memory-tool-apis",
    "docs/API_REFERENCE.md -> docs/#enhanced-agent-apis",
    "docs/API_REFERENCE.md -> docs/#data-models",
    "docs/API_REFERENCE.md -> docs/#utility-apis",
    "docs/API_REFERENCE.md -> docs/#error-handling",
    "docs/API_REFERENCE.md -> docs/#usage-examples",
    "docs/API_REFERENCE.md -> docs/#cross-references",
    "docs/API_REFERENCE.md -> ai/memory/in_memory_store.py",
    "docs/MEMORY_SYSTEM.md -> docs/#architecture-overview",
    "docs/MEMORY_SYSTEM.md -> docs/#memory-store-implementations",
    "docs/MEMORY_SYSTEM.md -> docs/#memory-classification",
    "docs/MEMORY_SYSTEM.md -> docs/#tools-and-apis",
    "docs/MEMORY_SYSTEM.md -> docs/#enhanced-agents",
    "docs/MEMORY_SYSTEM.md -> docs/#usage-patterns",
    "docs/MEMORY_SYSTEM.md -> docs/#cross-references",
    "docs/MEMORY_SYSTEM.md -> ai/memory/in_memory_store.py",
    "docs/ENHANCED_AGENTS.md -> docs/#architecture-overview",
    "docs/ENHANCED_AGENTS.md -> docs/#agent-specifications",
    "docs/ENHANCED_AGENTS.md -> docs/#memory-integration",
    "docs/ENHANCED_AGENTS.md -> docs/#learning-workflows",
    "docs/ENHANCED_AGENTS.md -> docs/#tool-ecosystem",
    "docs/ENHANCED_AGENTS.md -> docs/#usage-examples",
    "docs/ENHANCED_AGENTS.md -> docs/#migration-guide",
    "docs/ENHANCED_AGENTS.md -> docs/#cross-references",
    "docs/DEPLOYMENT.md -> docs/#quick-start",
    "docs/DEPLOYMENT.md -> docs/#environment-setup",
    "docs/DEPLOYMENT.md -> docs/#memory-system-deployment",
    "docs/DEPLOYMENT.md -> docs/#enhanced-agent-deployment",
    "docs/DEPLOYMENT.md -> docs/#production-configuration",
    "docs/DEPLOYMENT.md -> docs/#monitoring-and-analytics",
    "docs/DEPLOYMENT.md -> docs/#troubleshooting",
    "docs/DEPLOYMENT.md -> docs/#cross-references",
    "docs/INDEX.md -> docs/#-architecture--design",
    "docs/INDEX.md -> docs/#-tools--apis",
    "docs/INDEX.md -> docs/#-configuration--setup",
    "docs/INDEX.md -> docs/#-development-workflow",
    "docs/INDEX.md -> docs/AGENT_DEVELOPMENT.md#documentation-standards",
    "docs/TELEGRAM_BOT.md -> ai/interface/telegram_bot.py#L44",
    "docs/TOOLS.md -> docs/#writememory",
    "docs/TOOLS.md -> docs/#readmemorycontext",
    "docs/TOOLS.md -> docs/#generatenextsteps",
    "docs/TOOLS.md -> docs/#generatereleasenotes",
    "docs/TOOLS.md -> docs/#dodcheck",
    "docs/TOOLS.md -> docs/#discovermcpservers",
    "docs/TOOLS.md -> docs/#callmcptool",
    "docs/TOOLS.md -> docs/#createadr",
    "docs/TOOLS.md -> docs/#intentnormalizer",
    "docs/TOOLS.md -> docs/AGENT_DEVELOPMENT.md#planning-quality",
    "docs/TOOLS.md -> docs/AGENT_DEVELOPMENT.md#utility-normalization",
    "docs/TOOLS.md -> docs/docs/TOOLS.md#{self.tool_name.lower(",
    "docs/TOOLS.md -> docs/docs/GUIDE.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/link",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/link",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/link",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/link",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/link",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/DOCUMENT.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/DOCUMENT.md",
    "docs/_generated/crossref_report.md -> docs/_generated/path/to/code.py",
    "docs/_generated/crossref_report.md -> docs/_generated/path/to/code.py",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/link",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/link",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/link",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/link",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/link",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/templates/guide_template.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/templates/reference_template.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/templates/adr_template.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/templates/readme_template.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/ENHANCED_AGENTS.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/ENHANCED_AGENTS.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/ENHANCED_AGENTS.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/ENHANCED_AGENTS.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/doc1.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/doc2.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/path.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/guide.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/docs/TOOLS.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/docs/PATTERNS.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/ai/memory/README.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/docs/ARCHITECTURE.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/docs/ADR_INDEX.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/DEPLOYMENT.md",
    "docs/_generated/crossref_report.md -> docs/_generated/ai/memory/README.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/ARCHITECTURE.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/ARCHITECTURE.md",
    "docs/_generated/crossref_report.md -> docs/_generated/ai/memory/in_memory_store.py",
    "docs/_generated/crossref_report.md -> docs/_generated/ai/memory/in_memory_store.py",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/INDEX.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/INDEX.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/INDEX.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/INDEX.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/docs/TOOLS.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/docs/GUIDE.md",
    "docs/_generated/crossref_report.md -> docs/_generated/docs/AGENT_DEVELOPMENT.md",
    "docs/_generated/crossref_report.md -> docs/_generated/ai/execution/README.md",
    "docs/_generated/crossref_report.md -> docs/_generated/ai/coordination/README.md",
    "ai/memory/README.md -> docs/TOOLS.md#memory-context-tools",
    "ai/memory/README.md -> docs/TOOLS.md#writememory",
    "ai/memory/README.md -> docs/TOOLS.md#readmemorycontext",
    "ai/memory/README.md -> docs/TOOLS.md#memory-context-tools",
    "ai/memory/README.md -> docs/AGENT_DEVELOPMENT.md#memory-context",
    "ai/system/README.md -> docs/ARCHITECTURE.md#system-coordination-architecture",
    "ai/system/README.md -> docs/ARCHITECTURE.md#system-coordination-architecture",
    "ai/system/README.md -> ai/execution/README.md",
    "ai/system/README.md -> ai/coordination/README.md"
  ],
  "generated_at": "2025-09-02T00:36:12.591352"
}